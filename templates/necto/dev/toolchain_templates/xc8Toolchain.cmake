%SDK_VARIABLE_VALUES%
# set CMAKE_SYSTEM_NAME to define build as CMAKE_CROSSCOMPILING
set(CMAKE_SYSTEM_NAME "XC8")
set(CMAKE_SYSTEM_VERSION 1)
# specify cross compilers and tools
set(CMAKE_C_COMPILER_ID "XC8CC")
set(CMAKE_C_COMPILER_ID_RUN 1)
set(CMAKE_AR "%XC8_AR%")
set(CMAKE_C_COMPILER "%C_COMPILER%" CACHE INTERNAL "")
set(CMAKE_CXX_COMPILER "%CXX_COMPILER%" CACHE INTERNAL "")
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

set(CMAKE_FIND_ROOT_PATH "")
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

file(TO_CMAKE_PATH "%MIKROSDK_PATH%" MIKROSDK_PATH)
file(TO_CMAKE_PATH "%MIKROC_CORE_PATH%" MIKROC_CORE_PATH)

set(MIKROSDK_ROOT_PATH ${MIKROSDK_PATH})
set(MIKROC_CORE_ROOT_PATH ${MIKROC_CORE_PATH})
#append to cmake_prefix_path
list(APPEND CMAKE_PREFIX_PATH ${MIKROSDK_ROOT_PATH})
list(APPEND CMAKE_PREFIX_PATH ${MIKROC_CORE_ROOT_PATH})

list(APPEND CMAKE_MODULE_PATH %CMAKE_MODULE_PATH_VALUE%)

set(XC_PROCESSOR_NAME "")
string(SUBSTRING ${MCU_NAME} 3 -1 XC_PROCESSOR_NAME)

set(FLAGS -D__DEBUG -mcpu=${XC_PROCESSOR_NAME})
message(INFO ": FLAGS -D__DEBUG -mcpu=${XC_PROCESSOR_NAME}")
# add compiler option flags
add_compile_options(${FLAGS})
# add link option flags
add_link_options(${FLAGS})

include(coreUtils)

%SDK_SETUP_BUILD_VALUE%
