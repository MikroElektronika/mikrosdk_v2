;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/26/2025 14:29:16
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x14BD0000  	5309
0x0008	0x14B50000  	5301
0x000C	0x14B50000  	5301
0x0010	0x14B50000  	5301
0x0014	0x14B50000  	5301
0x0018	0x14B50000  	5301
0x001C	0x14B50000  	5301
0x0020	0x14B50000  	5301
0x0024	0x14B50000  	5301
0x0028	0x14B50000  	5301
0x002C	0x14B50000  	5301
0x0030	0x14B50000  	5301
0x0034	0x14B50000  	5301
0x0038	0x14B50000  	5301
0x003C	0x14B50000  	5301
0x0040	0x14B50000  	5301
0x0044	0x14B50000  	5301
0x0048	0x14B50000  	5301
0x004C	0x14B50000  	5301
0x0050	0x14B50000  	5301
0x0054	0x14B50000  	5301
0x0058	0x14B50000  	5301
0x005C	0x14B50000  	5301
0x0060	0x14B50000  	5301
0x0064	0x14B50000  	5301
0x0068	0x14B50000  	5301
0x006C	0x14B50000  	5301
0x0070	0x14B50000  	5301
0x0074	0x14B50000  	5301
0x0078	0x14B50000  	5301
0x007C	0x14B50000  	5301
0x0080	0x14B50000  	5301
0x0084	0x14B50000  	5301
0x0088	0x14B50000  	5301
0x008C	0x14B50000  	5301
0x0090	0x14B50000  	5301
0x0094	0x14B50000  	5301
0x0098	0x14B50000  	5301
0x009C	0x14B50000  	5301
0x00A0	0x14B50000  	5301
0x00A4	0x14B50000  	5301
0x00A8	0x14B50000  	5301
0x00AC	0x14B50000  	5301
0x00B0	0x14B50000  	5301
0x00B4	0x14B50000  	5301
0x00B8	0x14B50000  	5301
0x00BC	0x14B50000  	5301
0x00C0	0x14B50000  	5301
0x00C4	0x14B50000  	5301
0x00C8	0x14B50000  	5301
0x00CC	0x14B50000  	5301
0x00D0	0x14B50000  	5301
0x00D4	0x12510000  	4689
0x00D8	0x12CD0000  	4813
0x00DC	0x15210000  	5409
0x00E0	0x14B50000  	5301
0x00E4	0x14B50000  	5301
0x00E8	0x14B50000  	5301
0x00EC	0x14B50000  	5301
0x00F0	0x14B50000  	5301
0x00F4	0x14B50000  	5301
0x00F8	0x14B50000  	5301
0x00FC	0x14B50000  	5301
0x0100	0x14B50000  	5301
0x0104	0x14B50000  	5301
0x0108	0x14B50000  	5301
0x010C	0x14B50000  	5301
0x0110	0x11D50000  	4565
0x0114	0x14B50000  	5301
0x0118	0x14B50000  	5301
0x011C	0x14B50000  	5301
0x0120	0x14B50000  	5301
0x0124	0x14B50000  	5301
0x0128	0x14B50000  	5301
0x012C	0x14B50000  	5301
0x0130	0x14B50000  	5301
0x0134	0x14B50000  	5301
0x0138	0x14B50000  	5301
0x013C	0x14B50000  	5301
0x0140	0x14B50000  	5301
0x0144	0x14B50000  	5301
0x0148	0x14B50000  	5301
0x014C	0x14B50000  	5301
; end of ____SysVT
_main:
;main.c, 17 :: 		int main(void)
0x14BC	0xB081    SUB	SP, SP, #4
0x14BE	0xF7FFFF4D  BL	4956
0x14C2	0xF000F961  BL	6024
0x14C6	0xF7FFFF3F  BL	4936
0x14CA	0xF000F90F  BL	5868
;main.c, 20 :: 		preinit();
0x14CE	0xF7FFFE75  BL	_preinit+0
;main.c, 23 :: 		GLCD_Init(&glcd);              // Initialisation du GLCD
0x14D2	0x4812    LDR	R0, [PC, #72]
0x14D4	0xF7FFFD7E  BL	_GLCD_Init+0
;main.c, 24 :: 		GLCD_Display(&glcd, on);            // Allume l'affichage
0x14D8	0x213F    MOVS	R1, #63
0x14DA	0x4810    LDR	R0, [PC, #64]
0x14DC	0xF7FFFC0E  BL	_GLCD_Display+0
;main.c, 27 :: 		while (1)
L_main153:
;main.c, 29 :: 		for (uint8_t i=0; i<PAGE_SIZE; i++)
0x14E0	0xF2400900  MOVW	R9, #0
L_main155:
0x14E4	0xF1B90F08  CMP	R9, #8
0x14E8	0xD216    BCS	L_main156
;main.c, 31 :: 		for (uint8_t j=0; j<ROW_SIZE; j++)
0x14EA	0xF2400A00  MOVW	R10, #0
L_main158:
0x14EE	0xF1BA0F40  CMP	R10, #64
0x14F2	0xD20C    BCS	L_main159
;main.c, 33 :: 		GLCD_Write( &glcd, i, j, 0xFF );
0x14F4	0x23FF    MOVS	R3, #255
0x14F6	0xFA5FF28A  UXTB	R2, R10
0x14FA	0xFA5FF189  UXTB	R1, R9
0x14FE	0x4807    LDR	R0, [PC, #28]
0x1500	0xF7FFFCE2  BL	_GLCD_Write+0
;main.c, 34 :: 		}
;main.c, 31 :: 		for (uint8_t j=0; j<ROW_SIZE; j++)
0x1504	0xF10A0A01  ADD	R10, R10, #1
0x1508	0xFA5FFA8A  UXTB	R10, R10
;main.c, 34 :: 		}
0x150C	0xE7EF    B	L_main158
L_main159:
;main.c, 35 :: 		}
;main.c, 29 :: 		for (uint8_t i=0; i<PAGE_SIZE; i++)
0x150E	0xF1090901  ADD	R9, R9, #1
0x1512	0xFA5FF989  UXTB	R9, R9
;main.c, 35 :: 		}
0x1516	0xE7E5    B	L_main155
L_main156:
;main.c, 36 :: 		}
0x1518	0xE7E2    B	L_main153
;main.c, 38 :: 		return 0;
;main.c, 39 :: 		}
L_end_main:
L__main_end_loop:
0x151A	0xE7FE    B	L__main_end_loop
0x151C	0x014C2000  	main_glcd+0
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 22 :: 		void __CC2DW()
0x0C14	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 25 :: 		L_loopDW:
L_loopDW:
;__Lib_System_105_107.c, 26 :: 		LDRB.W       R9, [R12], #1
0x0C16	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 27 :: 		STRB.W       R9, [R11], #1
0x0C1A	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 28 :: 		CMP.W        R11, R10
0x0C1E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 29 :: 		BNE          L_loopDW
0x0C22	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 31 :: 		}
L_end___CC2DW:
0x0C24	0xB001    ADD	SP, SP, #4
0x0C26	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 68 :: 		void __FillZeros()
0x0C28	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 71 :: 		MOV.W        R9, #0
0x0C2A	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 72 :: 		MOV.W        R12, #0
0x0C2E	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 73 :: 		CMP.W        SP, R10
0x0C32	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 74 :: 		BGT          L_loopFZs
0x0C36	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 75 :: 		CMP.W        SP, R11
0x0C38	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 76 :: 		BLT          L_loopFZs
0x0C3C	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 77 :: 		MOV          R12, R10
0x0C3E	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 78 :: 		MOV          R10, SP
0x0C40	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 79 :: 		L_loopFZs:
L_loopFZs:
;__Lib_System_105_107.c, 80 :: 		STR.W        R9, [R11], #4
0x0C42	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 81 :: 		CMP.W        R11, R10
0x0C46	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 82 :: 		BNE          L_loopFZs
0x0C4A	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 83 :: 		CMP.W        R12, R10
0x0C4C	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 84 :: 		BLE          L_norep
0x0C50	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 85 :: 		MOV          R10, R12
0x0C52	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 86 :: 		LDR          R11, [R9]
0x0C54	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 87 :: 		ADD          R11, R11,#4
0x0C58	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 88 :: 		B            L_loopFZs
0x0C5C	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 89 :: 		L_norep:
L_norep:
;__Lib_System_105_107.c, 91 :: 		}
L_end___FillZeros:
0x0C5E	0xB001    ADD	SP, SP, #4
0x0C60	0x4770    BX	LR
; end of ___FillZeros
_preinit:
;preinit.c, 25 :: 		void preinit(void) {
0x11BC	0xB081    SUB	SP, SP, #4
;preinit.c, 30 :: 		if (!preinit_done) {
0x11BE	0x4804    LDR	R0, [PC, #16]
0x11C0	0x7800    LDRB	R0, [R0, #0]
0x11C2	0xB910    CBNZ	R0, L_preinit0
;preinit.c, 73 :: 		preinit_done = true;
0x11C4	0x2101    MOVS	R1, #1
0x11C6	0x4802    LDR	R0, [PC, #8]
0x11C8	0x7001    STRB	R1, [R0, #0]
;preinit.c, 74 :: 		}
L_preinit0:
;preinit.c, 75 :: 		}
L_end_preinit:
0x11CA	0xB001    ADD	SP, SP, #4
0x11CC	0x4770    BX	LR
0x11CE	0xBF00    NOP
0x11D0	0x00002000  	preinit_preinit_done+0
; end of _preinit
_GLCD_Init:
;glcd_lib_v1.h, 115 :: 		
0x0FD4	0xB082    SUB	SP, SP, #8
0x0FD6	0xF8CDE000  STR	LR, [SP, #0]
;glcd_lib_v1.h, 117 :: 		
0x0FDA	0x9001    STR	R0, [SP, #4]
0x0FDC	0xF7FFFCAC  BL	_GLCD_Port_Init+0
0x0FE0	0x9801    LDR	R0, [SP, #4]
;glcd_lib_v1.h, 120 :: 		
0x0FE2	0x2101    MOVS	R1, #1
0x0FE4	0x7001    STRB	R1, [R0, #0]
;glcd_lib_v1.h, 121 :: 		
0x0FE6	0x1C42    ADDS	R2, R0, #1
0x0FE8	0x2101    MOVS	R1, #1
0x0FEA	0x7011    STRB	R1, [R2, #0]
;glcd_lib_v1.h, 122 :: 		
0x0FEC	0x1CC2    ADDS	R2, R0, #3
0x0FEE	0x2101    MOVS	R1, #1
0x0FF0	0x7011    STRB	R1, [R2, #0]
;glcd_lib_v1.h, 123 :: 		
0x0FF2	0x1C82    ADDS	R2, R0, #2
0x0FF4	0x2101    MOVS	R1, #1
0x0FF6	0x7011    STRB	R1, [R2, #0]
;glcd_lib_v1.h, 124 :: 		
0x0FF8	0x1D42    ADDS	R2, R0, #5
0x0FFA	0x213F    MOVS	R1, #63
0x0FFC	0x7011    STRB	R1, [R2, #0]
;glcd_lib_v1.h, 125 :: 		
0x0FFE	0x1D02    ADDS	R2, R0, #4
0x1000	0x2141    MOVS	R1, #65
0x1002	0x7011    STRB	R1, [R2, #0]
;glcd_lib_v1.h, 127 :: 		
0x1004	0x4961    LDR	R1, [PC, #388]
0x1006	0x6809    LDR	R1, [R1, #0]
0x1008	0xB1A1    CBZ	R1, L_GLCD_Init11
0x100A	0x1C81    ADDS	R1, R0, #2
0x100C	0x7809    LDRB	R1, [R1, #0]
0x100E	0x2900    CMP	R1, #0
0x1010	0xD907    BLS	L_GLCD_Init13
0x1012	0x495E    LDR	R1, [PC, #376]
0x1014	0x6809    LDR	R1, [R1, #0]
0x1016	0xF2010210  ADDW	R2, R1, #16
0x101A	0x495D    LDR	R1, [PC, #372]
0x101C	0x8809    LDRH	R1, [R1, #0]
0x101E	0x6011    STR	R1, [R2, #0]
0x1020	0xE007    B	L_GLCD_Init14
L_GLCD_Init13:
0x1022	0x495A    LDR	R1, [PC, #360]
0x1024	0x6809    LDR	R1, [R1, #0]
0x1026	0xF2010210  ADDW	R2, R1, #16
0x102A	0x4959    LDR	R1, [PC, #356]
0x102C	0x8809    LDRH	R1, [R1, #0]
0x102E	0x0409    LSLS	R1, R1, #16
0x1030	0x6011    STR	R1, [R2, #0]
L_GLCD_Init14:
0x1032	0xE7FF    B	L_GLCD_Init12
L_GLCD_Init11:
L_GLCD_Init12:
;glcd_lib_v1.h, 128 :: 		
0x1034	0x4957    LDR	R1, [PC, #348]
0x1036	0x6809    LDR	R1, [R1, #0]
0x1038	0xB199    CBZ	R1, L_GLCD_Init15
0x103A	0x7801    LDRB	R1, [R0, #0]
0x103C	0x2900    CMP	R1, #0
0x103E	0xD907    BLS	L_GLCD_Init17
0x1040	0x4954    LDR	R1, [PC, #336]
0x1042	0x6809    LDR	R1, [R1, #0]
0x1044	0xF2010210  ADDW	R2, R1, #16
0x1048	0x4953    LDR	R1, [PC, #332]
0x104A	0x8809    LDRH	R1, [R1, #0]
0x104C	0x6011    STR	R1, [R2, #0]
0x104E	0xE007    B	L_GLCD_Init18
L_GLCD_Init17:
0x1050	0x4950    LDR	R1, [PC, #320]
0x1052	0x6809    LDR	R1, [R1, #0]
0x1054	0xF2010210  ADDW	R2, R1, #16
0x1058	0x494F    LDR	R1, [PC, #316]
0x105A	0x8809    LDRH	R1, [R1, #0]
0x105C	0x0409    LSLS	R1, R1, #16
0x105E	0x6011    STR	R1, [R2, #0]
L_GLCD_Init18:
0x1060	0xE7FF    B	L_GLCD_Init16
L_GLCD_Init15:
L_GLCD_Init16:
;glcd_lib_v1.h, 129 :: 		
0x1062	0x494E    LDR	R1, [PC, #312]
0x1064	0x6809    LDR	R1, [R1, #0]
0x1066	0xB1A1    CBZ	R1, L_GLCD_Init19
0x1068	0x1C41    ADDS	R1, R0, #1
0x106A	0x7809    LDRB	R1, [R1, #0]
0x106C	0x2900    CMP	R1, #0
0x106E	0xD907    BLS	L_GLCD_Init21
0x1070	0x494A    LDR	R1, [PC, #296]
0x1072	0x6809    LDR	R1, [R1, #0]
0x1074	0xF2010210  ADDW	R2, R1, #16
0x1078	0x4949    LDR	R1, [PC, #292]
0x107A	0x8809    LDRH	R1, [R1, #0]
0x107C	0x6011    STR	R1, [R2, #0]
0x107E	0xE007    B	L_GLCD_Init22
L_GLCD_Init21:
0x1080	0x4946    LDR	R1, [PC, #280]
0x1082	0x6809    LDR	R1, [R1, #0]
0x1084	0xF2010210  ADDW	R2, R1, #16
0x1088	0x4945    LDR	R1, [PC, #276]
0x108A	0x8809    LDRH	R1, [R1, #0]
0x108C	0x0409    LSLS	R1, R1, #16
0x108E	0x6011    STR	R1, [R2, #0]
L_GLCD_Init22:
0x1090	0xE7FF    B	L_GLCD_Init20
L_GLCD_Init19:
L_GLCD_Init20:
;glcd_lib_v1.h, 130 :: 		
0x1092	0x4944    LDR	R1, [PC, #272]
0x1094	0x6809    LDR	R1, [R1, #0]
0x1096	0xB1A1    CBZ	R1, L_GLCD_Init23
0x1098	0x1CC1    ADDS	R1, R0, #3
0x109A	0x7809    LDRB	R1, [R1, #0]
0x109C	0x2900    CMP	R1, #0
0x109E	0xD907    BLS	L_GLCD_Init25
0x10A0	0x4940    LDR	R1, [PC, #256]
0x10A2	0x6809    LDR	R1, [R1, #0]
0x10A4	0xF2010210  ADDW	R2, R1, #16
0x10A8	0x493F    LDR	R1, [PC, #252]
0x10AA	0x8809    LDRH	R1, [R1, #0]
0x10AC	0x6011    STR	R1, [R2, #0]
0x10AE	0xE007    B	L_GLCD_Init26
L_GLCD_Init25:
0x10B0	0x493C    LDR	R1, [PC, #240]
0x10B2	0x6809    LDR	R1, [R1, #0]
0x10B4	0xF2010210  ADDW	R2, R1, #16
0x10B8	0x493B    LDR	R1, [PC, #236]
0x10BA	0x8809    LDRH	R1, [R1, #0]
0x10BC	0x0409    LSLS	R1, R1, #16
0x10BE	0x6011    STR	R1, [R2, #0]
L_GLCD_Init26:
0x10C0	0xE7FF    B	L_GLCD_Init24
L_GLCD_Init23:
L_GLCD_Init24:
;glcd_lib_v1.h, 131 :: 		
0x10C2	0x493A    LDR	R1, [PC, #232]
0x10C4	0x6809    LDR	R1, [R1, #0]
0x10C6	0xB1D1    CBZ	R1, L_GLCD_Init27
0x10C8	0x1D41    ADDS	R1, R0, #5
0x10CA	0x7809    LDRB	R1, [R1, #0]
0x10CC	0x293F    CMP	R1, #63
0x10CE	0xD102    BNE	L_GLCD_Init29
0x10D0	0x2100    MOVS	R1, #0
0x10D2	0xB249    SXTB	R1, R1
0x10D4	0xE001    B	L_GLCD_Init30
L_GLCD_Init29:
0x10D6	0x2101    MOVS	R1, #1
0x10D8	0xB249    SXTB	R1, R1
L_GLCD_Init30:
0x10DA	0xB139    CBZ	R1, L_GLCD_Init31
0x10DC	0x4933    LDR	R1, [PC, #204]
0x10DE	0x6809    LDR	R1, [R1, #0]
0x10E0	0xF2010210  ADDW	R2, R1, #16
0x10E4	0x4932    LDR	R1, [PC, #200]
0x10E6	0x8809    LDRH	R1, [R1, #0]
0x10E8	0x6011    STR	R1, [R2, #0]
0x10EA	0xE007    B	L_GLCD_Init32
L_GLCD_Init31:
0x10EC	0x492F    LDR	R1, [PC, #188]
0x10EE	0x6809    LDR	R1, [R1, #0]
0x10F0	0xF2010210  ADDW	R2, R1, #16
0x10F4	0x492E    LDR	R1, [PC, #184]
0x10F6	0x8809    LDRH	R1, [R1, #0]
0x10F8	0x0409    LSLS	R1, R1, #16
0x10FA	0x6011    STR	R1, [R2, #0]
L_GLCD_Init32:
0x10FC	0xE7FF    B	L_GLCD_Init28
L_GLCD_Init27:
L_GLCD_Init28:
;glcd_lib_v1.h, 132 :: 		
0x10FE	0x492D    LDR	R1, [PC, #180]
0x1100	0x6809    LDR	R1, [R1, #0]
0x1102	0xB1D1    CBZ	R1, L_GLCD_Init33
0x1104	0x1D01    ADDS	R1, R0, #4
0x1106	0x7809    LDRB	R1, [R1, #0]
0x1108	0x2941    CMP	R1, #65
0x110A	0xD102    BNE	L_GLCD_Init35
0x110C	0x2101    MOVS	R1, #1
0x110E	0xB249    SXTB	R1, R1
0x1110	0xE001    B	L_GLCD_Init36
L_GLCD_Init35:
0x1112	0x2100    MOVS	R1, #0
0x1114	0xB249    SXTB	R1, R1
L_GLCD_Init36:
0x1116	0xB139    CBZ	R1, L_GLCD_Init37
0x1118	0x4926    LDR	R1, [PC, #152]
0x111A	0x6809    LDR	R1, [R1, #0]
0x111C	0xF2010210  ADDW	R2, R1, #16
0x1120	0x4925    LDR	R1, [PC, #148]
0x1122	0x8809    LDRH	R1, [R1, #0]
0x1124	0x6011    STR	R1, [R2, #0]
0x1126	0xE007    B	L_GLCD_Init38
L_GLCD_Init37:
0x1128	0x4922    LDR	R1, [PC, #136]
0x112A	0x6809    LDR	R1, [R1, #0]
0x112C	0xF2010210  ADDW	R2, R1, #16
0x1130	0x4921    LDR	R1, [PC, #132]
0x1132	0x8809    LDRH	R1, [R1, #0]
0x1134	0x0409    LSLS	R1, R1, #16
0x1136	0x6011    STR	R1, [R2, #0]
L_GLCD_Init38:
0x1138	0xE7FF    B	L_GLCD_Init34
L_GLCD_Init33:
L_GLCD_Init34:
;glcd_lib_v1.h, 134 :: 		
0x113A	0x9001    STR	R0, [SP, #4]
0x113C	0x2001    MOVS	R0, #1
0x113E	0xF7FFFC65  BL	_GLCD_Side_Init+0
0x1142	0x9801    LDR	R0, [SP, #4]
;glcd_lib_v1.h, 135 :: 		
0x1144	0x9001    STR	R0, [SP, #4]
0x1146	0x2100    MOVS	R1, #0
0x1148	0xF7FFFD12  BL	_GLCD_Set_Page+0
0x114C	0x9801    LDR	R0, [SP, #4]
;glcd_lib_v1.h, 136 :: 		
0x114E	0x9001    STR	R0, [SP, #4]
0x1150	0x2100    MOVS	R1, #0
0x1152	0xF7FFFC97  BL	_GLCD_Set_Y+0
0x1156	0x9801    LDR	R0, [SP, #4]
;glcd_lib_v1.h, 137 :: 		
0x1158	0x9001    STR	R0, [SP, #4]
0x115A	0x2100    MOVS	R1, #0
0x115C	0xF7FFFB1E  BL	_GLCD_Display_Start_Line+0
;glcd_lib_v1.h, 139 :: 		
0x1160	0x2000    MOVS	R0, #0
0x1162	0xF7FFFC53  BL	_GLCD_Side_Init+0
0x1166	0x9801    LDR	R0, [SP, #4]
;glcd_lib_v1.h, 140 :: 		
0x1168	0x9001    STR	R0, [SP, #4]
0x116A	0x2100    MOVS	R1, #0
0x116C	0xF7FFFD00  BL	_GLCD_Set_Page+0
0x1170	0x9801    LDR	R0, [SP, #4]
;glcd_lib_v1.h, 141 :: 		
0x1172	0x9001    STR	R0, [SP, #4]
0x1174	0x2100    MOVS	R1, #0
0x1176	0xF7FFFC85  BL	_GLCD_Set_Y+0
0x117A	0x9801    LDR	R0, [SP, #4]
;glcd_lib_v1.h, 142 :: 		
0x117C	0x2100    MOVS	R1, #0
0x117E	0xF7FFFB0D  BL	_GLCD_Display_Start_Line+0
;glcd_lib_v1.h, 143 :: 		
L_end_GLCD_Init:
0x1182	0xF8DDE000  LDR	LR, [SP, #0]
0x1186	0xB002    ADD	SP, SP, #8
0x1188	0x4770    BX	LR
0x118A	0xBF00    NOP
0x118C	0x01342000  	main_ed+0
0x1190	0x01382000  	main_ed+4
0x1194	0x013C2000  	main_cs1d+0
0x1198	0x01402000  	main_cs1d+4
0x119C	0x01442000  	main_cs2d+0
0x11A0	0x01482000  	main_cs2d+4
0x11A4	0x05602000  	main_resetd+0
0x11A8	0x05642000  	main_resetd+4
0x11AC	0x01182000  	main_did+0
0x11B0	0x011C2000  	main_did+4
0x11B4	0x01202000  	main_rwd+0
0x11B8	0x01242000  	main_rwd+4
; end of _GLCD_Init
_GLCD_Port_Init:
;glcd_lib_v1.h, 86 :: 		
0x0938	0xB081    SUB	SP, SP, #4
0x093A	0xF8CDE000  STR	LR, [SP, #0]
;glcd_lib_v1.h, 88 :: 		
0x093E	0x2301    MOVS	R3, #1
0x0940	0x22FF    MOVS	R2, #255
0x0942	0x2104    MOVS	R1, #4
0x0944	0x4818    LDR	R0, [PC, #96]
0x0946	0xF7FFFED5  BL	_port_init+0
;glcd_lib_v1.h, 89 :: 		
0x094A	0x2300    MOVS	R3, #0
0x094C	0x22FF    MOVS	R2, #255
0x094E	0x2104    MOVS	R1, #4
0x0950	0x4816    LDR	R0, [PC, #88]
0x0952	0xF7FFFECF  BL	_port_init+0
;glcd_lib_v1.h, 90 :: 		
0x0956	0x214A    MOVS	R1, #74
0x0958	0x4815    LDR	R0, [PC, #84]
0x095A	0xF7FFFEE9  BL	_digital_out_init+0
;glcd_lib_v1.h, 91 :: 		
0x095E	0x214B    MOVS	R1, #75
0x0960	0x4814    LDR	R0, [PC, #80]
0x0962	0xF7FFFEE5  BL	_digital_out_init+0
;glcd_lib_v1.h, 92 :: 		
0x0966	0x214F    MOVS	R1, #79
0x0968	0x4813    LDR	R0, [PC, #76]
0x096A	0xF7FFFEE1  BL	_digital_out_init+0
;glcd_lib_v1.h, 93 :: 		
0x096E	0x2148    MOVS	R1, #72
0x0970	0x4812    LDR	R0, [PC, #72]
0x0972	0xF7FFFEDD  BL	_digital_out_init+0
;glcd_lib_v1.h, 94 :: 		
0x0976	0x214C    MOVS	R1, #76
0x0978	0x4811    LDR	R0, [PC, #68]
0x097A	0xF7FFFED9  BL	_digital_out_init+0
;glcd_lib_v1.h, 95 :: 		
0x097E	0x214D    MOVS	R1, #77
0x0980	0x4810    LDR	R0, [PC, #64]
0x0982	0xF7FFFED5  BL	_digital_out_init+0
;glcd_lib_v1.h, 98 :: 		
0x0986	0x2301    MOVS	R3, #1
0x0988	0x22FF    MOVS	R2, #255
0x098A	0x2103    MOVS	R1, #3
0x098C	0x480E    LDR	R0, [PC, #56]
0x098E	0xF7FFFEB1  BL	_port_init+0
;glcd_lib_v1.h, 99 :: 		
0x0992	0x2301    MOVS	R3, #1
0x0994	0x22FF    MOVS	R2, #255
0x0996	0x2102    MOVS	R1, #2
0x0998	0x480C    LDR	R0, [PC, #48]
0x099A	0xF7FFFEAB  BL	_port_init+0
;glcd_lib_v1.h, 100 :: 		
L_end_GLCD_Port_Init:
0x099E	0xF8DDE000  LDR	LR, [SP, #0]
0x09A2	0xB001    ADD	SP, SP, #4
0x09A4	0x4770    BX	LR
0x09A6	0xBF00    NOP
0x09A8	0x01282000  	main_data_out+0
0x09AC	0x05542000  	main_data_in+0
0x09B0	0x013C2000  	main_cs1d+0
0x09B4	0x01442000  	main_cs2d+0
0x09B8	0x01342000  	main_ed+0
0x09BC	0x05602000  	main_resetd+0
0x09C0	0x01182000  	main_did+0
0x09C4	0x01202000  	main_rwd+0
0x09C8	0x05682000  	main_see_cmd+0
0x09CC	0x05742000  	main_see+0
; end of _GLCD_Port_Init
_port_init:
;drv_port.c, 47 :: 		pin_direction_t direction )
0x06F4	0xB081    SUB	SP, SP, #4
0x06F6	0xF8CDE000  STR	LR, [SP, #0]
;drv_port.c, 49 :: 		if ( !port )
0x06FA	0xB910    CBNZ	R0, L_port_init0
;drv_port.c, 50 :: 		return PORT_ERROR;
0x06FC	0xF04F30FF  MOV	R0, #-1
0x0700	0xE011    B	L_end_port_init
L_port_init0:
;drv_port.c, 53 :: 		( PIN_DIRECTION_DIGITAL_OUTPUT != direction ) ) {
0x0702	0xB123    CBZ	R3, L__port_init8
0x0704	0x2B01    CMP	R3, #1
0x0706	0xD002    BEQ	L__port_init7
L__port_init6:
;drv_port.c, 54 :: 		return PORT_ERROR;
0x0708	0xF04F30FF  MOV	R0, #-1
0x070C	0xE00B    B	L_end_port_init
;drv_port.c, 55 :: 		}
;drv_port.c, 53 :: 		( PIN_DIRECTION_DIGITAL_OUTPUT != direction ) ) {
L__port_init8:
L__port_init7:
;drv_port.c, 57 :: 		if ( HAL_PORT_NC != name )
0x070E	0xF1B10FFF  CMP	R1, #255
0x0712	0xD005    BEQ	L_port_init4
;drv_port.c, 59 :: 		port->name = name;
0x0714	0xF2000408  ADDW	R4, R0, #8
0x0718	0x7021    STRB	R1, [R4, #0]
;drv_port.c, 60 :: 		hal_gpio_configure_port( &port->port, name, mask, (hal_gpio_direction_t)direction );
0x071A	0xF7FFFF79  BL	_hal_gpio_configure_port+0
;drv_port.c, 61 :: 		} else {
0x071E	0xE002    B	L_port_init5
L_port_init4:
;drv_port.c, 62 :: 		return PORT_ERROR;
0x0720	0xF04F30FF  MOV	R0, #-1
0x0724	0xE7FF    B	L_end_port_init
;drv_port.c, 63 :: 		}
L_port_init5:
;drv_port.c, 64 :: 		}
L_end_port_init:
0x0726	0xF8DDE000  LDR	LR, [SP, #0]
0x072A	0xB001    ADD	SP, SP, #4
0x072C	0x4770    BX	LR
; end of _port_init
_hal_gpio_configure_port:
;hal_gpio.c, 95 :: 		hal_gpio_mask_t mask, hal_gpio_direction_t direction )
0x0610	0xB081    SUB	SP, SP, #4
0x0612	0xF8CDE000  STR	LR, [SP, #0]
;hal_gpio.c, 97 :: 		hal_ll_gpio_configure_port( (hal_ll_gpio_port_t *)port, name, mask, (hal_ll_gpio_direction_t)direction );
0x0616	0xF7FFFF53  BL	_hal_ll_gpio_configure_port+0
;hal_gpio.c, 98 :: 		}
L_end_hal_gpio_configure_port:
0x061A	0xF8DDE000  LDR	LR, [SP, #0]
0x061E	0xB001    ADD	SP, SP, #4
0x0620	0x4770    BX	LR
; end of _hal_gpio_configure_port
_hal_ll_gpio_configure_port:
;hal_ll_gpio.c, 133 :: 		void hal_ll_gpio_configure_port(hal_ll_gpio_port_t *port, hal_ll_port_name_t name, hal_ll_gpio_mask_t mask, hal_ll_gpio_direction_t direction)
0x04C0	0xB085    SUB	SP, SP, #20
0x04C2	0xF8CDE000  STR	LR, [SP, #0]
0x04C6	0xF88D1004  STRB	R1, [SP, #4]
0x04CA	0x4601    MOV	R1, R0
0x04CC	0xF89D0004  LDRB	R0, [SP, #4]
;hal_ll_gpio.c, 135 :: 		port->base = hal_ll_gpio_port_base(name);
0x04D0	0x460C    MOV	R4, R1
0x04D2	0x9404    STR	R4, [SP, #16]
0x04D4	0xF88D3004  STRB	R3, [SP, #4]
0x04D8	0xF8AD2008  STRH	R2, [SP, #8]
0x04DC	0x9103    STR	R1, [SP, #12]
0x04DE	0xF7FFFF95  BL	_hal_ll_gpio_port_base+0
0x04E2	0x9903    LDR	R1, [SP, #12]
0x04E4	0xF8BD2008  LDRH	R2, [SP, #8]
0x04E8	0xF89D3004  LDRB	R3, [SP, #4]
0x04EC	0x9C04    LDR	R4, [SP, #16]
0x04EE	0x6020    STR	R0, [R4, #0]
;hal_ll_gpio.c, 136 :: 		port->mask = mask;
0x04F0	0x1D0C    ADDS	R4, R1, #4
0x04F2	0x8022    STRH	R2, [R4, #0]
;hal_ll_gpio.c, 138 :: 		if (direction == HAL_LL_GPIO_DIGITAL_INPUT)
0x04F4	0xB943    CBNZ	R3, L_hal_ll_gpio_configure_port2
;hal_ll_gpio.c, 139 :: 		hal_ll_gpio_digital_input(port->base, port->mask);
0x04F6	0x1D0C    ADDS	R4, R1, #4
0x04F8	0x8824    LDRH	R4, [R4, #0]
0x04FA	0xB2A5    UXTH	R5, R4
0x04FC	0x680C    LDR	R4, [R1, #0]
0x04FE	0xB2A9    UXTH	R1, R5
0x0500	0x4620    MOV	R0, R4
0x0502	0xF7FFFF77  BL	_hal_ll_gpio_digital_input+0
0x0506	0xE007    B	L_hal_ll_gpio_configure_port3
L_hal_ll_gpio_configure_port2:
;hal_ll_gpio.c, 141 :: 		hal_ll_gpio_digital_output(port->base, port->mask);
0x0508	0x1D0C    ADDS	R4, R1, #4
0x050A	0x8824    LDRH	R4, [R4, #0]
0x050C	0xB2A5    UXTH	R5, R4
0x050E	0x680C    LDR	R4, [R1, #0]
0x0510	0xB2A9    UXTH	R1, R5
0x0512	0x4620    MOV	R0, R4
0x0514	0xF7FFFF84  BL	_hal_ll_gpio_digital_output+0
L_hal_ll_gpio_configure_port3:
;hal_ll_gpio.c, 142 :: 		}
L_end_hal_ll_gpio_configure_port:
0x0518	0xF8DDE000  LDR	LR, [SP, #0]
0x051C	0xB005    ADD	SP, SP, #20
0x051E	0x4770    BX	LR
; end of _hal_ll_gpio_configure_port
_hal_ll_gpio_port_base:
;hal_ll_gpio_port.c, 156 :: 		uint32_t hal_ll_gpio_port_base( hal_ll_port_name_t name )
0x040C	0xB081    SUB	SP, SP, #4
;hal_ll_gpio_port.c, 158 :: 		return _hal_ll_gpio_port_base[ name ];
0x040E	0x0082    LSLS	R2, R0, #2
0x0410	0x4902    LDR	R1, [PC, #8]
0x0412	0x1889    ADDS	R1, R1, R2
0x0414	0x6809    LDR	R1, [R1, #0]
0x0416	0x4608    MOV	R0, R1
;hal_ll_gpio_port.c, 159 :: 		}
L_end_hal_ll_gpio_port_base:
0x0418	0xB001    ADD	SP, SP, #4
0x041A	0x4770    BX	LR
0x041C	0x16B00000  	hal_ll_gpio_port__hal_ll_gpio_port_base+0
; end of _hal_ll_gpio_port_base
_hal_ll_gpio_digital_input:
;hal_ll_gpio_port.c, 166 :: 		void hal_ll_gpio_digital_input( uint32_t *port, uint16_t pin_mask )
0x03F4	0xB081    SUB	SP, SP, #4
0x03F6	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_gpio_port.c, 168 :: 		hal_ll_gpio_config( port, pin_mask, GPIO_CFG_DIGITAL_INPUT );
0x03FA	0xF04F0242  MOV	R2, #66
0x03FE	0xF7FFFEE5  BL	hal_ll_gpio_port_hal_ll_gpio_config+0
;hal_ll_gpio_port.c, 169 :: 		}
L_end_hal_ll_gpio_digital_input:
0x0402	0xF8DDE000  LDR	LR, [SP, #0]
0x0406	0xB001    ADD	SP, SP, #4
0x0408	0x4770    BX	LR
; end of _hal_ll_gpio_digital_input
hal_ll_gpio_port_hal_ll_gpio_config:
;hal_ll_gpio_port.c, 263 :: 		static void hal_ll_gpio_config( uint32_t *port, uint16_t pin_mask, uint32_t config )
0x01CC	0xB081    SUB	SP, SP, #4
0x01CE	0xF8CDE000  STR	LR, [SP, #0]
0x01D2	0xB28C    UXTH	R4, R1
0x01D4	0x4615    MOV	R5, R2
;hal_ll_gpio_port.c, 265 :: 		uint32_t pin_pos       = 0;
;hal_ll_gpio_port.c, 266 :: 		uint32_t pos           = 0;
;hal_ll_gpio_port.c, 267 :: 		uint32_t current_pin   = 0;
;hal_ll_gpio_port.c, 269 :: 		uint32_t mode          = 0;
0x01D6	0xF04F0800  MOV	R8, #0
;hal_ll_gpio_port.c, 270 :: 		uint32_t speed         = 0;
0x01DA	0xF04F0700  MOV	R7, #0
;hal_ll_gpio_port.c, 272 :: 		uint32_t *port_ptr_tmp = 0;
;hal_ll_gpio_port.c, 273 :: 		uint32_t tmpreg        = 0;
;hal_ll_gpio_port.c, 275 :: 		uint32_t tmp_pinmask   = 0;
;hal_ll_gpio_port.c, 278 :: 		port_ptr = ( hal_ll_gpio_base_handle_t *)port;
0x01DE	0x4606    MOV	R6, R0
;hal_ll_gpio_port.c, 280 :: 		hal_ll_gpio_clock_enable( port );
0x01E0	0xF7FFFFB6  BL	hal_ll_gpio_port_hal_ll_gpio_clock_enable+0
;hal_ll_gpio_port.c, 282 :: 		if ( pin_mask == GPIO_PIN_MASK_LOW )
0x01E4	0xF1B40FFF  CMP	R4, #255
0x01E8	0xD10D    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config17
;hal_ll_gpio_port.c, 284 :: 		if ( config == GPIO_CFG_DIGITAL_OUTPUT )
0x01EA	0x4B7C    LDR	R3, [PC, #496]
0x01EC	0x429D    CMP	R5, R3
0x01EE	0xD103    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config18
;hal_ll_gpio_port.c, 286 :: 		port_ptr->crl = GPIO_SET_ALL_OUTPUT;
0x01F0	0xF04F3333  MOV	R3, #858993459
0x01F4	0x6033    STR	R3, [R6, #0]
;hal_ll_gpio_port.c, 287 :: 		return;
0x01F6	0xE0ED    B	L_end_hal_ll_gpio_config
;hal_ll_gpio_port.c, 288 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config18:
;hal_ll_gpio_port.c, 289 :: 		if ( config == GPIO_CFG_DIGITAL_INPUT )
0x01F8	0x2D42    CMP	R5, #66
0x01FA	0xD103    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config19
;hal_ll_gpio_port.c, 291 :: 		port_ptr->crl = GPIO_SET_ALL_INPUT;
0x01FC	0xF04F3344  MOV	R3, #1145324612
0x0200	0x6033    STR	R3, [R6, #0]
;hal_ll_gpio_port.c, 292 :: 		return;
0x0202	0xE0E7    B	L_end_hal_ll_gpio_config
;hal_ll_gpio_port.c, 293 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config19:
;hal_ll_gpio_port.c, 294 :: 		}
0x0204	0xE011    B	L_hal_ll_gpio_port_hal_ll_gpio_config20
L_hal_ll_gpio_port_hal_ll_gpio_config17:
;hal_ll_gpio_port.c, 295 :: 		else if ( pin_mask == GPIO_PIN_MASK_HIGH )
0x0206	0xF5B44F7F  CMP	R4, #65280
0x020A	0xD10E    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config21
;hal_ll_gpio_port.c, 297 :: 		if ( config == GPIO_CFG_DIGITAL_OUTPUT )
0x020C	0x4B73    LDR	R3, [PC, #460]
0x020E	0x429D    CMP	R5, R3
0x0210	0xD104    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config22
;hal_ll_gpio_port.c, 299 :: 		port_ptr->crh = GPIO_SET_ALL_OUTPUT;
0x0212	0x1D34    ADDS	R4, R6, #4
0x0214	0xF04F3333  MOV	R3, #858993459
0x0218	0x6023    STR	R3, [R4, #0]
;hal_ll_gpio_port.c, 300 :: 		return;
0x021A	0xE0DB    B	L_end_hal_ll_gpio_config
;hal_ll_gpio_port.c, 301 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config22:
;hal_ll_gpio_port.c, 302 :: 		if ( config == GPIO_CFG_DIGITAL_INPUT )
0x021C	0x2D42    CMP	R5, #66
0x021E	0xD104    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config23
;hal_ll_gpio_port.c, 304 :: 		port_ptr->crh = GPIO_SET_ALL_INPUT;
0x0220	0x1D34    ADDS	R4, R6, #4
0x0222	0xF04F3344  MOV	R3, #1145324612
0x0226	0x6023    STR	R3, [R4, #0]
;hal_ll_gpio_port.c, 305 :: 		return;
0x0228	0xE0D4    B	L_end_hal_ll_gpio_config
;hal_ll_gpio_port.c, 306 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config23:
;hal_ll_gpio_port.c, 307 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config21:
L_hal_ll_gpio_port_hal_ll_gpio_config20:
;hal_ll_gpio_port.c, 309 :: 		if ( pin_mask == GPIO_PIN_MASK_ALL )
0x022A	0x4B6D    LDR	R3, [PC, #436]
0x022C	0x429C    CMP	R4, R3
0x022E	0xD114    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config24
;hal_ll_gpio_port.c, 311 :: 		if ( config == GPIO_CFG_DIGITAL_OUTPUT )
0x0230	0x4B6A    LDR	R3, [PC, #424]
0x0232	0x429D    CMP	R5, R3
0x0234	0xD107    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config25
;hal_ll_gpio_port.c, 313 :: 		port_ptr->crl = GPIO_SET_ALL_OUTPUT;
0x0236	0xF04F3333  MOV	R3, #858993459
0x023A	0x6033    STR	R3, [R6, #0]
;hal_ll_gpio_port.c, 314 :: 		port_ptr->crh = GPIO_SET_ALL_OUTPUT;
0x023C	0x1D34    ADDS	R4, R6, #4
0x023E	0xF04F3333  MOV	R3, #858993459
0x0242	0x6023    STR	R3, [R4, #0]
;hal_ll_gpio_port.c, 315 :: 		return;
0x0244	0xE0C6    B	L_end_hal_ll_gpio_config
;hal_ll_gpio_port.c, 316 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config25:
;hal_ll_gpio_port.c, 317 :: 		if ( config == GPIO_CFG_DIGITAL_INPUT )
0x0246	0x2D42    CMP	R5, #66
0x0248	0xD107    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config26
;hal_ll_gpio_port.c, 319 :: 		port_ptr->crl = GPIO_SET_ALL_INPUT;
0x024A	0xF04F3344  MOV	R3, #1145324612
0x024E	0x6033    STR	R3, [R6, #0]
;hal_ll_gpio_port.c, 320 :: 		port_ptr->crh = GPIO_SET_ALL_INPUT;
0x0250	0x1D34    ADDS	R4, R6, #4
0x0252	0xF04F3344  MOV	R3, #1145324612
0x0256	0x6023    STR	R3, [R4, #0]
;hal_ll_gpio_port.c, 321 :: 		return;
0x0258	0xE0BC    B	L_end_hal_ll_gpio_config
;hal_ll_gpio_port.c, 322 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config26:
;hal_ll_gpio_port.c, 323 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config24:
;hal_ll_gpio_port.c, 325 :: 		if ( config & ( GPIO_CFG_MODE_ANALOG ) )
0x025A	0xF0050301  AND	R3, R5, #1
0x025E	0xB10B    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config27
;hal_ll_gpio_port.c, 326 :: 		mode = 0;
0x0260	0x2000    MOVS	R0, #0
0x0262	0xE01E    B	L_hal_ll_gpio_port_hal_ll_gpio_config28
L_hal_ll_gpio_port_hal_ll_gpio_config27:
;hal_ll_gpio_port.c, 327 :: 		else if ( config & GPIO_CFG_MODE_INPUT )
0x0264	0xF0050302  AND	R3, R5, #2
0x0268	0xB133    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config29
;hal_ll_gpio_port.c, 329 :: 		if ( config & ( GPIO_CFG_PULL_DOWN | GPIO_CFG_PULL_UP ) )
0x026A	0xF40573C0  AND	R3, R5, #384
0x026E	0xB10B    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config30
;hal_ll_gpio_port.c, 330 :: 		mode = 0x8;
0x0270	0x2008    MOVS	R0, #8
0x0272	0xE000    B	L_hal_ll_gpio_port_hal_ll_gpio_config31
L_hal_ll_gpio_port_hal_ll_gpio_config30:
;hal_ll_gpio_port.c, 332 :: 		mode = 0x4;
0x0274	0x2004    MOVS	R0, #4
L_hal_ll_gpio_port_hal_ll_gpio_config31:
;hal_ll_gpio_port.c, 333 :: 		}
0x0276	0xE014    B	L_hal_ll_gpio_port_hal_ll_gpio_config32
L_hal_ll_gpio_port_hal_ll_gpio_config29:
;hal_ll_gpio_port.c, 334 :: 		else if ( config & GPIO_CFG_MODE_OUTPUT )
0x0278	0xF0050304  AND	R3, R5, #4
0x027C	0xB133    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config33
;hal_ll_gpio_port.c, 336 :: 		if ( config & GPIO_CFG_OTYPE_OD )
0x027E	0xF0050320  AND	R3, R5, #32
0x0282	0xB10B    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config34
;hal_ll_gpio_port.c, 337 :: 		mode = 0x4;
0x0284	0x2004    MOVS	R0, #4
0x0286	0xE000    B	L_hal_ll_gpio_port_hal_ll_gpio_config35
L_hal_ll_gpio_port_hal_ll_gpio_config34:
;hal_ll_gpio_port.c, 339 :: 		mode = 0;
0x0288	0x2000    MOVS	R0, #0
L_hal_ll_gpio_port_hal_ll_gpio_config35:
;hal_ll_gpio_port.c, 340 :: 		}
0x028A	0xE00A    B	L_hal_ll_gpio_port_hal_ll_gpio_config36
L_hal_ll_gpio_port_hal_ll_gpio_config33:
;hal_ll_gpio_port.c, 341 :: 		else if ( config & GPIO_CFG_MODE_ALT_FUNCTION )
0x028C	0xF0050308  AND	R3, R5, #8
0x0290	0xB133    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config64
;hal_ll_gpio_port.c, 343 :: 		if ( config & GPIO_CFG_OTYPE_OD )
0x0292	0xF0050320  AND	R3, R5, #32
0x0296	0xB10B    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config38
;hal_ll_gpio_port.c, 344 :: 		mode = 0xC;
0x0298	0x200C    MOVS	R0, #12
0x029A	0xE000    B	L_hal_ll_gpio_port_hal_ll_gpio_config39
L_hal_ll_gpio_port_hal_ll_gpio_config38:
;hal_ll_gpio_port.c, 346 :: 		mode = 0x8;
0x029C	0x2008    MOVS	R0, #8
L_hal_ll_gpio_port_hal_ll_gpio_config39:
;hal_ll_gpio_port.c, 347 :: 		}
0x029E	0xE000    B	L_hal_ll_gpio_port_hal_ll_gpio_config37
L_hal_ll_gpio_port_hal_ll_gpio_config64:
;hal_ll_gpio_port.c, 341 :: 		else if ( config & GPIO_CFG_MODE_ALT_FUNCTION )
0x02A0	0x4640    MOV	R0, R8
;hal_ll_gpio_port.c, 347 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config37:
L_hal_ll_gpio_port_hal_ll_gpio_config36:
L_hal_ll_gpio_port_hal_ll_gpio_config32:
L_hal_ll_gpio_port_hal_ll_gpio_config28:
;hal_ll_gpio_port.c, 349 :: 		if ( config & ( GPIO_CFG_SPEED_MAX | GPIO_CFG_SPEED_50MHZ ) )
0x02A2	0x4B50    LDR	R3, [PC, #320]
0x02A4	0xEA050303  AND	R3, R5, R3, LSL #0
0x02A8	0xB10B    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config40
;hal_ll_gpio_port.c, 350 :: 		speed = 3;
0x02AA	0x2103    MOVS	R1, #3
0x02AC	0xE00A    B	L_hal_ll_gpio_port_hal_ll_gpio_config41
L_hal_ll_gpio_port_hal_ll_gpio_config40:
;hal_ll_gpio_port.c, 351 :: 		else if ( config & GPIO_CFG_SPEED_2MHZ )
0x02AE	0xF4057300  AND	R3, R5, #512
0x02B2	0xB10B    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config42
;hal_ll_gpio_port.c, 352 :: 		speed = 2;
0x02B4	0x2102    MOVS	R1, #2
0x02B6	0xE005    B	L_hal_ll_gpio_port_hal_ll_gpio_config43
L_hal_ll_gpio_port_hal_ll_gpio_config42:
;hal_ll_gpio_port.c, 353 :: 		else if ( config & GPIO_CFG_SPEED_10MHZ )
0x02B8	0xF4056380  AND	R3, R5, #1024
0x02BC	0xB10B    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config65
;hal_ll_gpio_port.c, 354 :: 		speed = 1;
0x02BE	0x2101    MOVS	R1, #1
0x02C0	0xE000    B	L_hal_ll_gpio_port_hal_ll_gpio_config44
L_hal_ll_gpio_port_hal_ll_gpio_config65:
;hal_ll_gpio_port.c, 353 :: 		else if ( config & GPIO_CFG_SPEED_10MHZ )
0x02C2	0x4639    MOV	R1, R7
;hal_ll_gpio_port.c, 354 :: 		speed = 1;
L_hal_ll_gpio_port_hal_ll_gpio_config44:
L_hal_ll_gpio_port_hal_ll_gpio_config43:
L_hal_ll_gpio_port_hal_ll_gpio_config41:
;hal_ll_gpio_port.c, 356 :: 		if ( config & ( GPIO_CFG_MODE_OUTPUT | GPIO_CFG_MODE_ALT_FUNCTION ) )
0x02C4	0xF005030C  AND	R3, R5, #12
0x02C8	0xB113    CBZ	R3, L_hal_ll_gpio_port_hal_ll_gpio_config66
;hal_ll_gpio_port.c, 359 :: 		mode |= (uint32_t)speed;
0x02CA	0xEA400101  ORR	R1, R0, R1, LSL #0
;hal_ll_gpio_port.c, 360 :: 		}
0x02CE	0xE000    B	L_hal_ll_gpio_port_hal_ll_gpio_config45
L_hal_ll_gpio_port_hal_ll_gpio_config66:
;hal_ll_gpio_port.c, 356 :: 		if ( config & ( GPIO_CFG_MODE_OUTPUT | GPIO_CFG_MODE_ALT_FUNCTION ) )
0x02D0	0x4601    MOV	R1, R0
;hal_ll_gpio_port.c, 360 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config45:
;hal_ll_gpio_port.c, 362 :: 		if ( ( pin_mask & 0xFF ) != 0 )
0x02D2	0xF00403FF  AND	R3, R4, #255
0x02D6	0xB29B    UXTH	R3, R3
0x02D8	0x2B00    CMP	R3, #0
0x02DA	0xD03B    BEQ	L_hal_ll_gpio_port_hal_ll_gpio_config68
;hal_ll_gpio_port.c, 364 :: 		tmpreg = port_ptr->crl;      // CRL register
0x02DC	0x6837    LDR	R7, [R6, #0]
;hal_ll_gpio_port.c, 366 :: 		for ( pin_pos = 0x00; pin_pos < 0x08; pin_pos++ )
0x02DE	0x2000    MOVS	R0, #0
0x02E0	0xFA1FF884  UXTH	R8, R4
0x02E4	0x4632    MOV	R2, R6
0x02E6	0x462E    MOV	R6, R5
L_hal_ll_gpio_port_hal_ll_gpio_config47:
0x02E8	0x2808    CMP	R0, #8
0x02EA	0xD22C    BCS	L_hal_ll_gpio_port_hal_ll_gpio_config48
;hal_ll_gpio_port.c, 368 :: 		pos = ( ( uint32_t ) 0x01 ) << pin_pos;
0x02EC	0xF04F0301  MOV	R3, #1
0x02F0	0xFA03F400  LSL	R4, R3, R0
;hal_ll_gpio_port.c, 370 :: 		current_pin = pin_mask & pos;
0x02F4	0xEA080304  AND	R3, R8, R4, LSL #0
;hal_ll_gpio_port.c, 372 :: 		if ( current_pin == pos )
0x02F8	0x42A3    CMP	R3, R4
0x02FA	0xD122    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config67
;hal_ll_gpio_port.c, 374 :: 		pos = pin_pos << 2;
0x02FC	0x0085    LSLS	R5, R0, #2
;hal_ll_gpio_port.c, 376 :: 		tmp_pinmask = ( ( uint32_t ) 0x0F ) << pos;
0x02FE	0xF04F030F  MOV	R3, #15
0x0302	0x40AB    LSLS	R3, R5
;hal_ll_gpio_port.c, 377 :: 		tmpreg &= ~tmp_pinmask;
0x0304	0x43DB    MVN	R3, R3
0x0306	0xEA070403  AND	R4, R7, R3, LSL #0
;hal_ll_gpio_port.c, 380 :: 		tmpreg |= mode << pos;
0x030A	0xFA01F305  LSL	R3, R1, R5
0x030E	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0312	0x461D    MOV	R5, R3
;hal_ll_gpio_port.c, 383 :: 		if ( ( config & ( GPIO_CFG_MODE_INPUT | GPIO_CFG_PULL_DOWN ) ) == ( GPIO_CFG_MODE_INPUT | GPIO_CFG_PULL_DOWN ) )
0x0314	0xF4067381  AND	R3, R6, #258
0x0318	0xF5B37F81  CMP	R3, #258
0x031C	0xD105    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config51
;hal_ll_gpio_port.c, 385 :: 		port_ptr->brr = ( ( ( uint32_t ) 0x01 ) << pin_pos );  // write to BRR register
0x031E	0xF2020414  ADDW	R4, R2, #20
0x0322	0xF04F0301  MOV	R3, #1
0x0326	0x4083    LSLS	R3, R0
0x0328	0x6023    STR	R3, [R4, #0]
;hal_ll_gpio_port.c, 386 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config51:
;hal_ll_gpio_port.c, 388 :: 		if ( ( config & ( GPIO_CFG_MODE_INPUT | GPIO_CFG_PULL_UP ) ) == ( GPIO_CFG_MODE_INPUT | GPIO_CFG_PULL_UP ) )
0x032A	0xF0060382  AND	R3, R6, #130
0x032E	0x2B82    CMP	R3, #130
0x0330	0xD105    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config52
;hal_ll_gpio_port.c, 390 :: 		port_ptr->bsrr = ( ( uint32_t ) 0x01 ) << pin_pos;
0x0332	0xF2020410  ADDW	R4, R2, #16
0x0336	0xF04F0301  MOV	R3, #1
0x033A	0x4083    LSLS	R3, R0
0x033C	0x6023    STR	R3, [R4, #0]
;hal_ll_gpio_port.c, 391 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config52:
;hal_ll_gpio_port.c, 392 :: 		}
0x033E	0x462F    MOV	R7, R5
0x0340	0xE7FF    B	L_hal_ll_gpio_port_hal_ll_gpio_config50
L_hal_ll_gpio_port_hal_ll_gpio_config67:
;hal_ll_gpio_port.c, 372 :: 		if ( current_pin == pos )
;hal_ll_gpio_port.c, 392 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config50:
;hal_ll_gpio_port.c, 393 :: 		}
;hal_ll_gpio_port.c, 366 :: 		for ( pin_pos = 0x00; pin_pos < 0x08; pin_pos++ )
0x0342	0x1C40    ADDS	R0, R0, #1
;hal_ll_gpio_port.c, 393 :: 		}
0x0344	0xE7D0    B	L_hal_ll_gpio_port_hal_ll_gpio_config47
L_hal_ll_gpio_port_hal_ll_gpio_config48:
;hal_ll_gpio_port.c, 394 :: 		port_ptr->crl = tmpreg;          // write to CRL register
0x0346	0x6017    STR	R7, [R2, #0]
0x0348	0xFA1FF088  UXTH	R0, R8
0x034C	0x460F    MOV	R7, R1
0x034E	0x4631    MOV	R1, R6
0x0350	0x4616    MOV	R6, R2
;hal_ll_gpio_port.c, 396 :: 		}
0x0352	0xE002    B	L_hal_ll_gpio_port_hal_ll_gpio_config46
L_hal_ll_gpio_port_hal_ll_gpio_config68:
;hal_ll_gpio_port.c, 362 :: 		if ( ( pin_mask & 0xFF ) != 0 )
0x0354	0x460F    MOV	R7, R1
0x0356	0x4629    MOV	R1, R5
0x0358	0xB2A0    UXTH	R0, R4
;hal_ll_gpio_port.c, 396 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config46:
;hal_ll_gpio_port.c, 400 :: 		if ( pin_mask > HAL_LL_NIBBLE_LOW_16BIT )
0x035A	0xF1B00FFF  CMP	R0, #255
0x035E	0xD939    BLS	L_hal_ll_gpio_port_hal_ll_gpio_config53
;hal_ll_gpio_port.c, 402 :: 		tmpreg = port_ptr->crh;//GPIOx->CRH;
0x0360	0x1D33    ADDS	R3, R6, #4
0x0362	0xF8D38000  LDR	R8, [R3, #0]
;hal_ll_gpio_port.c, 403 :: 		for ( pin_pos = 0x00; pin_pos < 0x08; pin_pos++ )
0x0366	0x2200    MOVS	R2, #0
L_hal_ll_gpio_port_hal_ll_gpio_config54:
0x0368	0x2A08    CMP	R2, #8
0x036A	0xD230    BCS	L_hal_ll_gpio_port_hal_ll_gpio_config55
;hal_ll_gpio_port.c, 405 :: 		pos = ( ( uint32_t ) 0x01) << (pin_pos + 0x08);
0x036C	0xF2020408  ADDW	R4, R2, #8
0x0370	0xF04F0301  MOV	R3, #1
0x0374	0xFA03F404  LSL	R4, R3, R4
;hal_ll_gpio_port.c, 407 :: 		current_pin = pin_mask & pos;
0x0378	0xEA000304  AND	R3, R0, R4, LSL #0
;hal_ll_gpio_port.c, 408 :: 		if ( current_pin == pos )
0x037C	0x42A3    CMP	R3, R4
0x037E	0xD124    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config69
;hal_ll_gpio_port.c, 410 :: 		pos = pin_pos << 2;
0x0380	0x0095    LSLS	R5, R2, #2
;hal_ll_gpio_port.c, 412 :: 		tmp_pinmask = ( ( uint32_t ) 0x0F ) << pos;
0x0382	0xF04F030F  MOV	R3, #15
0x0386	0x40AB    LSLS	R3, R5
;hal_ll_gpio_port.c, 413 :: 		tmpreg &= ~tmp_pinmask;
0x0388	0x43DB    MVN	R3, R3
0x038A	0xEA080803  AND	R8, R8, R3, LSL #0
;hal_ll_gpio_port.c, 416 :: 		tmpreg |= mode << pos;
0x038E	0xFA07F305  LSL	R3, R7, R5
0x0392	0xEA480803  ORR	R8, R8, R3, LSL #0
;hal_ll_gpio_port.c, 419 :: 		if ( ( config & ( GPIO_CFG_MODE_INPUT | GPIO_CFG_PULL_DOWN ) ) == ( GPIO_CFG_MODE_INPUT | GPIO_CFG_PULL_DOWN ) )
0x0396	0xF4017381  AND	R3, R1, #258
0x039A	0xF5B37F81  CMP	R3, #258
0x039E	0xD107    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config58
;hal_ll_gpio_port.c, 421 :: 		port_ptr->brr = ( ( uint32_t ) 0x01 ) << ( pin_pos + 0x08 );
0x03A0	0xF2060514  ADDW	R5, R6, #20
0x03A4	0xF2020408  ADDW	R4, R2, #8
0x03A8	0xF04F0301  MOV	R3, #1
0x03AC	0x40A3    LSLS	R3, R4
0x03AE	0x602B    STR	R3, [R5, #0]
;hal_ll_gpio_port.c, 422 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config58:
;hal_ll_gpio_port.c, 424 :: 		if ( ( config & ( GPIO_CFG_MODE_INPUT | GPIO_CFG_PULL_UP ) ) == ( GPIO_CFG_MODE_INPUT | GPIO_CFG_PULL_UP ) )
0x03B0	0xF0010382  AND	R3, R1, #130
0x03B4	0x2B82    CMP	R3, #130
0x03B6	0xD107    BNE	L_hal_ll_gpio_port_hal_ll_gpio_config59
;hal_ll_gpio_port.c, 426 :: 		port_ptr->bsrr = ( ( uint32_t ) 0x01 ) << ( pin_pos + 0x08 );
0x03B8	0xF2060510  ADDW	R5, R6, #16
0x03BC	0xF2020408  ADDW	R4, R2, #8
0x03C0	0xF04F0301  MOV	R3, #1
0x03C4	0x40A3    LSLS	R3, R4
0x03C6	0x602B    STR	R3, [R5, #0]
;hal_ll_gpio_port.c, 427 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config59:
;hal_ll_gpio_port.c, 428 :: 		}
0x03C8	0xE7FF    B	L_hal_ll_gpio_port_hal_ll_gpio_config57
L_hal_ll_gpio_port_hal_ll_gpio_config69:
;hal_ll_gpio_port.c, 408 :: 		if ( current_pin == pos )
;hal_ll_gpio_port.c, 428 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config57:
;hal_ll_gpio_port.c, 429 :: 		}
;hal_ll_gpio_port.c, 403 :: 		for ( pin_pos = 0x00; pin_pos < 0x08; pin_pos++ )
0x03CA	0x1C52    ADDS	R2, R2, #1
;hal_ll_gpio_port.c, 429 :: 		}
0x03CC	0xE7CC    B	L_hal_ll_gpio_port_hal_ll_gpio_config54
L_hal_ll_gpio_port_hal_ll_gpio_config55:
;hal_ll_gpio_port.c, 430 :: 		port_ptr->crh = tmpreg;
0x03CE	0x1D33    ADDS	R3, R6, #4
0x03D0	0xF8C38000  STR	R8, [R3, #0]
;hal_ll_gpio_port.c, 431 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_config53:
;hal_ll_gpio_port.c, 432 :: 		}
L_end_hal_ll_gpio_config:
0x03D4	0xF8DDE000  LDR	LR, [SP, #0]
0x03D8	0xB001    ADD	SP, SP, #4
0x03DA	0x4770    BX	LR
0x03DC	0x00140008  	#524308
0x03E0	0xFFFF0000  	#65535
0x03E4	0x08000008  	#526336
; end of hal_ll_gpio_port_hal_ll_gpio_config
hal_ll_gpio_port_hal_ll_gpio_clock_enable:
;hal_ll_gpio_port.c, 224 :: 		static void hal_ll_gpio_clock_enable( uint32_t *port )
0x0150	0xB081    SUB	SP, SP, #4
;hal_ll_gpio_port.c, 226 :: 		uint32_t pos = 0;
0x0152	0xF04F0300  MOV	R3, #0
;hal_ll_gpio_port.c, 228 :: 		switch ( ( uint32_t ) port & 0xFFFFFC00 )
0x0156	0x4912    LDR	R1, [PC, #72]
0x0158	0xEA000201  AND	R2, R0, R1, LSL #0
0x015C	0xE009    B	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable10
;hal_ll_gpio_port.c, 231 :: 		case GPIOA_BASE_ADDR: pos = 0x4;   break;
L_hal_ll_gpio_port_hal_ll_gpio_clock_enable12:
0x015E	0x2004    MOVS	R0, #4
0x0160	0xE017    B	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable11
;hal_ll_gpio_port.c, 234 :: 		case GPIOB_BASE_ADDR: pos = 0x8;   break;
L_hal_ll_gpio_port_hal_ll_gpio_clock_enable13:
0x0162	0x2008    MOVS	R0, #8
0x0164	0xE015    B	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable11
;hal_ll_gpio_port.c, 237 :: 		case GPIOC_BASE_ADDR: pos = 0x10;   break;
L_hal_ll_gpio_port_hal_ll_gpio_clock_enable14:
0x0166	0x2010    MOVS	R0, #16
0x0168	0xE013    B	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable11
;hal_ll_gpio_port.c, 240 :: 		case GPIOD_BASE_ADDR: pos = 0x20;   break;
L_hal_ll_gpio_port_hal_ll_gpio_clock_enable15:
0x016A	0x2020    MOVS	R0, #32
0x016C	0xE011    B	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable11
;hal_ll_gpio_port.c, 243 :: 		case GPIOE_BASE_ADDR: pos = 0x40;  break;
L_hal_ll_gpio_port_hal_ll_gpio_clock_enable16:
0x016E	0x2040    MOVS	R0, #64
0x0170	0xE00F    B	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable11
;hal_ll_gpio_port.c, 251 :: 		}
L_hal_ll_gpio_port_hal_ll_gpio_clock_enable10:
0x0172	0x490C    LDR	R1, [PC, #48]
0x0174	0x428A    CMP	R2, R1
0x0176	0xD0F2    BEQ	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable12
0x0178	0x490B    LDR	R1, [PC, #44]
0x017A	0x428A    CMP	R2, R1
0x017C	0xD0F1    BEQ	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable13
0x017E	0x490B    LDR	R1, [PC, #44]
0x0180	0x428A    CMP	R2, R1
0x0182	0xD0F0    BEQ	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable14
0x0184	0x490A    LDR	R1, [PC, #40]
0x0186	0x428A    CMP	R2, R1
0x0188	0xD0EF    BEQ	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable15
0x018A	0x490A    LDR	R1, [PC, #40]
0x018C	0x428A    CMP	R2, R1
0x018E	0xD0EE    BEQ	L_hal_ll_gpio_port_hal_ll_gpio_clock_enable16
0x0190	0x4618    MOV	R0, R3
L_hal_ll_gpio_port_hal_ll_gpio_clock_enable11:
;hal_ll_gpio_port.c, 253 :: 		*(uint32_t *)RCC_GPIOCLOCK |= pos;
0x0192	0x4A09    LDR	R2, [PC, #36]
0x0194	0x6811    LDR	R1, [R2, #0]
0x0196	0x4301    ORRS	R1, R0
0x0198	0x6011    STR	R1, [R2, #0]
;hal_ll_gpio_port.c, 254 :: 		}
L_end_hal_ll_gpio_clock_enable:
0x019A	0xB001    ADD	SP, SP, #4
0x019C	0x4770    BX	LR
0x019E	0xBF00    NOP
0x01A0	0xFC00FFFF  	#-1024
0x01A4	0x08004001  	#1073809408
0x01A8	0x0C004001  	#1073810432
0x01AC	0x10004001  	#1073811456
0x01B0	0x14004001  	#1073812480
0x01B4	0x18004001  	#1073813504
0x01B8	0x10184002  	#1073877016
; end of hal_ll_gpio_port_hal_ll_gpio_clock_enable
_hal_ll_gpio_digital_output:
;hal_ll_gpio_port.c, 171 :: 		void hal_ll_gpio_digital_output( uint32_t *port, uint16_t pin_mask )
0x0420	0xB081    SUB	SP, SP, #4
0x0422	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_gpio_port.c, 173 :: 		hal_ll_gpio_config( port, pin_mask, GPIO_CFG_DIGITAL_OUTPUT );
0x0426	0x4A03    LDR	R2, [PC, #12]
0x0428	0xF7FFFED0  BL	hal_ll_gpio_port_hal_ll_gpio_config+0
;hal_ll_gpio_port.c, 174 :: 		}
L_end_hal_ll_gpio_digital_output:
0x042C	0xF8DDE000  LDR	LR, [SP, #0]
0x0430	0xB001    ADD	SP, SP, #4
0x0432	0x4770    BX	LR
0x0434	0x00140008  	#524308
; end of _hal_ll_gpio_digital_output
_digital_out_init:
;drv_digital_out.c, 46 :: 		err_t digital_out_init( digital_out_t *out, pin_name_t name )
0x0730	0xB081    SUB	SP, SP, #4
0x0732	0xF8CDE000  STR	LR, [SP, #0]
;drv_digital_out.c, 48 :: 		if ( HAL_PIN_NC == name )
0x0736	0xF64F72FF  MOVW	R2, #65535
0x073A	0x4291    CMP	R1, R2
0x073C	0xD102    BNE	L_digital_out_init0
;drv_digital_out.c, 50 :: 		return DIGITAL_OUT_UNSUPPORTED_PIN;
0x073E	0xF04F30FF  MOV	R0, #-1
0x0742	0xE003    B	L_end_digital_out_init
;drv_digital_out.c, 51 :: 		}
L_digital_out_init0:
;drv_digital_out.c, 53 :: 		hal_gpio_configure_pin( &out->pin, name, (hal_gpio_direction_t)GPIO_DIGITAL_OUTPUT );
0x0744	0x2201    MOVS	R2, #1
0x0746	0xF7FFFEEB  BL	_hal_gpio_configure_pin+0
;drv_digital_out.c, 54 :: 		return DIGITAL_OUT_SUCCESS;
0x074A	0x2000    MOVS	R0, #0
;drv_digital_out.c, 55 :: 		}
L_end_digital_out_init:
0x074C	0xF8DDE000  LDR	LR, [SP, #0]
0x0750	0xB001    ADD	SP, SP, #4
0x0752	0x4770    BX	LR
; end of _digital_out_init
_hal_gpio_configure_pin:
;hal_gpio.c, 47 :: 		hal_gpio_direction_t direction )
0x0520	0xB081    SUB	SP, SP, #4
0x0522	0xF8CDE000  STR	LR, [SP, #0]
;hal_gpio.c, 49 :: 		hal_ll_gpio_configure_pin( (hal_ll_gpio_pin_t *)pin, name, (hal_ll_gpio_direction_t)direction );
0x0526	0xF7FFFF95  BL	_hal_ll_gpio_configure_pin+0
;hal_gpio.c, 50 :: 		}
L_end_hal_gpio_configure_pin:
0x052A	0xF8DDE000  LDR	LR, [SP, #0]
0x052E	0xB001    ADD	SP, SP, #4
0x0530	0x4770    BX	LR
; end of _hal_gpio_configure_pin
_hal_ll_gpio_configure_pin:
;hal_ll_gpio.c, 49 :: 		void hal_ll_gpio_configure_pin(hal_ll_gpio_pin_t *pin, hal_ll_pin_name_t name, hal_ll_gpio_direction_t direction)
0x0454	0xB086    SUB	SP, SP, #24
0x0456	0xF8CDE000  STR	LR, [SP, #0]
0x045A	0xF8AD1008  STRH	R1, [SP, #8]
0x045E	0x4601    MOV	R1, R0
0x0460	0xF88D200C  STRB	R2, [SP, #12]
;hal_ll_gpio.c, 51 :: 		pin->base = (hal_ll_gpio_base_t)hal_ll_gpio_port_base(hal_ll_gpio_port_index(name));
0x0464	0x460B    MOV	R3, R1
0x0466	0x9305    STR	R3, [SP, #20]
0x0468	0x9101    STR	R1, [SP, #4]
0x046A	0xF8BD0008  LDRH	R0, [SP, #8]
0x046E	0xF7FFFFBB  BL	_hal_ll_gpio_port_index+0
0x0472	0xF7FFFFCB  BL	_hal_ll_gpio_port_base+0
0x0476	0x9901    LDR	R1, [SP, #4]
0x0478	0x9B05    LDR	R3, [SP, #20]
0x047A	0x6018    STR	R0, [R3, #0]
;hal_ll_gpio.c, 52 :: 		pin->mask = hal_ll_gpio_pin_mask(name);
0x047C	0x1D0B    ADDS	R3, R1, #4
0x047E	0x9305    STR	R3, [SP, #20]
0x0480	0x9101    STR	R1, [SP, #4]
0x0482	0xF8BD0008  LDRH	R0, [SP, #8]
0x0486	0xF7FFFFD7  BL	_hal_ll_gpio_pin_mask+0
0x048A	0x9901    LDR	R1, [SP, #4]
0x048C	0x9B05    LDR	R3, [SP, #20]
0x048E	0x8018    STRH	R0, [R3, #0]
;hal_ll_gpio.c, 54 :: 		if ( direction == HAL_LL_GPIO_DIGITAL_INPUT)
0x0490	0xF89D300C  LDRB	R3, [SP, #12]
0x0494	0xB943    CBNZ	R3, L_hal_ll_gpio_configure_pin0
;hal_ll_gpio.c, 55 :: 		hal_ll_gpio_digital_input(pin->base, pin->mask);
0x0496	0x1D0B    ADDS	R3, R1, #4
0x0498	0x881B    LDRH	R3, [R3, #0]
0x049A	0xB29C    UXTH	R4, R3
0x049C	0x680B    LDR	R3, [R1, #0]
0x049E	0xB2A1    UXTH	R1, R4
0x04A0	0x4618    MOV	R0, R3
0x04A2	0xF7FFFFA7  BL	_hal_ll_gpio_digital_input+0
0x04A6	0xE007    B	L_hal_ll_gpio_configure_pin1
L_hal_ll_gpio_configure_pin0:
;hal_ll_gpio.c, 57 :: 		hal_ll_gpio_digital_output(pin->base, pin->mask);
0x04A8	0x1D0B    ADDS	R3, R1, #4
0x04AA	0x881B    LDRH	R3, [R3, #0]
0x04AC	0xB29C    UXTH	R4, R3
0x04AE	0x680B    LDR	R3, [R1, #0]
0x04B0	0xB2A1    UXTH	R1, R4
0x04B2	0x4618    MOV	R0, R3
0x04B4	0xF7FFFFB4  BL	_hal_ll_gpio_digital_output+0
L_hal_ll_gpio_configure_pin1:
;hal_ll_gpio.c, 58 :: 		}
L_end_hal_ll_gpio_configure_pin:
0x04B8	0xF8DDE000  LDR	LR, [SP, #0]
0x04BC	0xB006    ADD	SP, SP, #24
0x04BE	0x4770    BX	LR
; end of _hal_ll_gpio_configure_pin
_hal_ll_gpio_port_index:
;hal_ll_gpio_port.c, 146 :: 		uint8_t hal_ll_gpio_port_index( hal_ll_pin_name_t name )
0x03E8	0xB081    SUB	SP, SP, #4
;hal_ll_gpio_port.c, 148 :: 		return ( uint8_t )name / PORT_SIZE;
0x03EA	0xB2C1    UXTB	R1, R0
0x03EC	0x0909    LSRS	R1, R1, #4
0x03EE	0xB2C8    UXTB	R0, R1
;hal_ll_gpio_port.c, 149 :: 		}
L_end_hal_ll_gpio_port_index:
0x03F0	0xB001    ADD	SP, SP, #4
0x03F2	0x4770    BX	LR
; end of _hal_ll_gpio_port_index
_hal_ll_gpio_pin_mask:
;hal_ll_gpio_port.c, 151 :: 		uint32_t hal_ll_gpio_pin_mask( hal_ll_pin_name_t name )
0x0438	0xB081    SUB	SP, SP, #4
0x043A	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_gpio_port.c, 153 :: 		return ( ( uint32_t )0x01 << hal_ll_gpio_pin_index( name ) );
0x043E	0xF7FFFEBD  BL	_hal_ll_gpio_pin_index+0
0x0442	0xF04F0101  MOV	R1, #1
0x0446	0x4081    LSLS	R1, R0
0x0448	0x4608    MOV	R0, R1
;hal_ll_gpio_port.c, 154 :: 		}
L_end_hal_ll_gpio_pin_mask:
0x044A	0xF8DDE000  LDR	LR, [SP, #0]
0x044E	0xB001    ADD	SP, SP, #4
0x0450	0x4770    BX	LR
; end of _hal_ll_gpio_pin_mask
_hal_ll_gpio_pin_index:
;hal_ll_gpio_port.c, 141 :: 		uint8_t hal_ll_gpio_pin_index( hal_ll_pin_name_t name )
0x01BC	0xB081    SUB	SP, SP, #4
;hal_ll_gpio_port.c, 143 :: 		return ( uint8_t )name % PORT_SIZE;
0x01BE	0xB2C1    UXTB	R1, R0
0x01C0	0xF001010F  AND	R1, R1, #15
0x01C4	0xB2C8    UXTB	R0, R1
;hal_ll_gpio_port.c, 144 :: 		}
L_end_hal_ll_gpio_pin_index:
0x01C6	0xB001    ADD	SP, SP, #4
0x01C8	0x4770    BX	LR
; end of _hal_ll_gpio_pin_index
_GLCD_Side_Init:
;glcd_lib_v1.h, 102 :: 		
0x0A0C	0xB081    SUB	SP, SP, #4
;glcd_lib_v1.h, 104 :: 		
0x0A0E	0xB1B8    CBZ	R0, L_GLCD_Side_Init0
;glcd_lib_v1.h, 105 :: 		
0x0A10	0x4918    LDR	R1, [PC, #96]
0x0A12	0x6809    LDR	R1, [R1, #0]
0x0A14	0xB139    CBZ	R1, L_GLCD_Side_Init1
0x0A16	0x4917    LDR	R1, [PC, #92]
0x0A18	0x6809    LDR	R1, [R1, #0]
0x0A1A	0xF2010210  ADDW	R2, R1, #16
0x0A1E	0x4916    LDR	R1, [PC, #88]
0x0A20	0x8809    LDRH	R1, [R1, #0]
0x0A22	0x6011    STR	R1, [R2, #0]
0x0A24	0xE7FF    B	L_GLCD_Side_Init2
L_GLCD_Side_Init1:
L_GLCD_Side_Init2:
;glcd_lib_v1.h, 106 :: 		
0x0A26	0x4915    LDR	R1, [PC, #84]
0x0A28	0x6809    LDR	R1, [R1, #0]
0x0A2A	0xB141    CBZ	R1, L_GLCD_Side_Init3
0x0A2C	0x4913    LDR	R1, [PC, #76]
0x0A2E	0x6809    LDR	R1, [R1, #0]
0x0A30	0xF2010210  ADDW	R2, R1, #16
0x0A34	0x4912    LDR	R1, [PC, #72]
0x0A36	0x8809    LDRH	R1, [R1, #0]
0x0A38	0x0409    LSLS	R1, R1, #16
0x0A3A	0x6011    STR	R1, [R2, #0]
0x0A3C	0xE7FF    B	L_GLCD_Side_Init4
L_GLCD_Side_Init3:
L_GLCD_Side_Init4:
;glcd_lib_v1.h, 107 :: 		
0x0A3E	0xE017    B	L_GLCD_Side_Init5
L_GLCD_Side_Init0:
;glcd_lib_v1.h, 108 :: 		
0x0A40	0xB9B0    CBNZ	R0, L_GLCD_Side_Init6
;glcd_lib_v1.h, 109 :: 		
0x0A42	0x490C    LDR	R1, [PC, #48]
0x0A44	0x6809    LDR	R1, [R1, #0]
0x0A46	0xB141    CBZ	R1, L_GLCD_Side_Init7
0x0A48	0x490A    LDR	R1, [PC, #40]
0x0A4A	0x6809    LDR	R1, [R1, #0]
0x0A4C	0xF2010210  ADDW	R2, R1, #16
0x0A50	0x4909    LDR	R1, [PC, #36]
0x0A52	0x8809    LDRH	R1, [R1, #0]
0x0A54	0x0409    LSLS	R1, R1, #16
0x0A56	0x6011    STR	R1, [R2, #0]
0x0A58	0xE7FF    B	L_GLCD_Side_Init8
L_GLCD_Side_Init7:
L_GLCD_Side_Init8:
;glcd_lib_v1.h, 110 :: 		
0x0A5A	0x4908    LDR	R1, [PC, #32]
0x0A5C	0x6809    LDR	R1, [R1, #0]
0x0A5E	0xB139    CBZ	R1, L_GLCD_Side_Init9
0x0A60	0x4906    LDR	R1, [PC, #24]
0x0A62	0x6809    LDR	R1, [R1, #0]
0x0A64	0xF2010210  ADDW	R2, R1, #16
0x0A68	0x4905    LDR	R1, [PC, #20]
0x0A6A	0x8809    LDRH	R1, [R1, #0]
0x0A6C	0x6011    STR	R1, [R2, #0]
0x0A6E	0xE7FF    B	L_GLCD_Side_Init10
L_GLCD_Side_Init9:
L_GLCD_Side_Init10:
;glcd_lib_v1.h, 111 :: 		
L_GLCD_Side_Init6:
L_GLCD_Side_Init5:
;glcd_lib_v1.h, 112 :: 		
L_end_GLCD_Side_Init:
0x0A70	0xB001    ADD	SP, SP, #4
0x0A72	0x4770    BX	LR
0x0A74	0x013C2000  	main_cs1d+0
0x0A78	0x01402000  	main_cs1d+4
0x0A7C	0x01442000  	main_cs2d+0
0x0A80	0x01482000  	main_cs2d+4
; end of _GLCD_Side_Init
_GLCD_Set_Page:
;glcd_lib_v1.h, 192 :: 		
0x0B70	0xB081    SUB	SP, SP, #4
0x0B72	0xF8CDE000  STR	LR, [SP, #0]
;glcd_lib_v1.h, 194 :: 		
0x0B76	0xB900    CBNZ	R0, L_GLCD_Set_Page87
0x0B78	0xE03C    B	L_end_GLCD_Set_Page
L_GLCD_Set_Page87:
;glcd_lib_v1.h, 195 :: 		
0x0B7A	0x2900    CMP	R1, #0
0x0B7C	0xD302    BCC	L__GLCD_Set_Page163
0x0B7E	0x2907    CMP	R1, #7
0x0B80	0xD800    BHI	L__GLCD_Set_Page162
0x0B82	0xE000    B	L_GLCD_Set_Page90
L__GLCD_Set_Page163:
L__GLCD_Set_Page162:
0x0B84	0xE036    B	L_end_GLCD_Set_Page
L_GLCD_Set_Page90:
;glcd_lib_v1.h, 197 :: 		
0x0B86	0x4A1D    LDR	R2, [PC, #116]
0x0B88	0x6812    LDR	R2, [R2, #0]
0x0B8A	0xB142    CBZ	R2, L_GLCD_Set_Page91
0x0B8C	0x4A1B    LDR	R2, [PC, #108]
0x0B8E	0x6812    LDR	R2, [R2, #0]
0x0B90	0xF2020310  ADDW	R3, R2, #16
0x0B94	0x4A1A    LDR	R2, [PC, #104]
0x0B96	0x8812    LDRH	R2, [R2, #0]
0x0B98	0x0412    LSLS	R2, R2, #16
0x0B9A	0x601A    STR	R2, [R3, #0]
0x0B9C	0xE7FF    B	L_GLCD_Set_Page92
L_GLCD_Set_Page91:
L_GLCD_Set_Page92:
;glcd_lib_v1.h, 198 :: 		
0x0B9E	0x4A19    LDR	R2, [PC, #100]
0x0BA0	0x6812    LDR	R2, [R2, #0]
0x0BA2	0xB142    CBZ	R2, L_GLCD_Set_Page93
0x0BA4	0x4A17    LDR	R2, [PC, #92]
0x0BA6	0x6812    LDR	R2, [R2, #0]
0x0BA8	0xF2020310  ADDW	R3, R2, #16
0x0BAC	0x4A16    LDR	R2, [PC, #88]
0x0BAE	0x8812    LDRH	R2, [R2, #0]
0x0BB0	0x0412    LSLS	R2, R2, #16
0x0BB2	0x601A    STR	R2, [R3, #0]
0x0BB4	0xE7FF    B	L_GLCD_Set_Page94
L_GLCD_Set_Page93:
L_GLCD_Set_Page94:
;glcd_lib_v1.h, 199 :: 		
0x0BB6	0xF04102B8  ORR	R2, R1, #184
0x0BBA	0xB2D0    UXTB	R0, R2
;glcd_lib_v1.h, 201 :: 		
0x0BBC	0x4A13    LDR	R2, [PC, #76]
0x0BBE	0x6812    LDR	R2, [R2, #0]
0x0BC0	0xB1B2    CBZ	R2, L_GLCD_Set_Page95
0x0BC2	0x4A12    LDR	R2, [PC, #72]
0x0BC4	0x6812    LDR	R2, [R2, #0]
0x0BC6	0xF2020610  ADDW	R6, R2, #16
0x0BCA	0xB2C3    UXTB	R3, R0
0x0BCC	0x4D10    LDR	R5, [PC, #64]
0x0BCE	0x882A    LDRH	R2, [R5, #0]
0x0BD0	0xEA030402  AND	R4, R3, R2, LSL #0
0x0BD4	0xB2A4    UXTH	R4, R4
0x0BD6	0xB2C2    UXTB	R2, R0
0x0BD8	0x43D3    MVN	R3, R2
0x0BDA	0xB29B    UXTH	R3, R3
0x0BDC	0x462A    MOV	R2, R5
0x0BDE	0x8812    LDRH	R2, [R2, #0]
0x0BE0	0xEA030202  AND	R2, R3, R2, LSL #0
0x0BE4	0xB292    UXTH	R2, R2
0x0BE6	0x0412    LSLS	R2, R2, #16
0x0BE8	0xEA440202  ORR	R2, R4, R2, LSL #0
0x0BEC	0x6032    STR	R2, [R6, #0]
0x0BEE	0xE7FF    B	L_GLCD_Set_Page96
L_GLCD_Set_Page95:
L_GLCD_Set_Page96:
;glcd_lib_v1.h, 202 :: 		
0x0BF0	0xF7FFFD22  BL	_Apply_changes+0
;glcd_lib_v1.h, 203 :: 		
L_end_GLCD_Set_Page:
0x0BF4	0xF8DDE000  LDR	LR, [SP, #0]
0x0BF8	0xB001    ADD	SP, SP, #4
0x0BFA	0x4770    BX	LR
0x0BFC	0x01182000  	main_did+0
0x0C00	0x011C2000  	main_did+4
0x0C04	0x01202000  	main_rwd+0
0x0C08	0x01242000  	main_rwd+4
0x0C0C	0x01282000  	main_data_out+0
0x0C10	0x012C2000  	main_data_out+4
; end of _GLCD_Set_Page
_Apply_changes:
;glcd_lib_v1.h, 279 :: 		
0x0638	0xB081    SUB	SP, SP, #4
;glcd_lib_v1.h, 281 :: 		
0x063A	0x4817    LDR	R0, [PC, #92]
0x063C	0x6800    LDR	R0, [R0, #0]
0x063E	0xB138    CBZ	R0, L_Apply_changes145
0x0640	0x4815    LDR	R0, [PC, #84]
0x0642	0x6800    LDR	R0, [R0, #0]
0x0644	0xF2000110  ADDW	R1, R0, #16
0x0648	0x4814    LDR	R0, [PC, #80]
0x064A	0x8800    LDRH	R0, [R0, #0]
0x064C	0x6008    STR	R0, [R1, #0]
0x064E	0xE7FF    B	L_Apply_changes146
L_Apply_changes145:
L_Apply_changes146:
;glcd_lib_v1.h, 282 :: 		
0x0650	0xF240070B  MOVW	R7, #11
0x0654	0xF2C00700  MOVT	R7, #0
L_Apply_changes147:
0x0658	0x1E7F    SUBS	R7, R7, #1
0x065A	0xD1FD    BNE	L_Apply_changes147
0x065C	0xBF00    NOP
0x065E	0xBF00    NOP
0x0660	0xBF00    NOP
0x0662	0xBF00    NOP
0x0664	0xBF00    NOP
;glcd_lib_v1.h, 283 :: 		
0x0666	0x480C    LDR	R0, [PC, #48]
0x0668	0x6800    LDR	R0, [R0, #0]
0x066A	0xB140    CBZ	R0, L_Apply_changes149
0x066C	0x480A    LDR	R0, [PC, #40]
0x066E	0x6800    LDR	R0, [R0, #0]
0x0670	0xF2000110  ADDW	R1, R0, #16
0x0674	0x4809    LDR	R0, [PC, #36]
0x0676	0x8800    LDRH	R0, [R0, #0]
0x0678	0x0400    LSLS	R0, R0, #16
0x067A	0x6008    STR	R0, [R1, #0]
0x067C	0xE7FF    B	L_Apply_changes150
L_Apply_changes149:
L_Apply_changes150:
;glcd_lib_v1.h, 284 :: 		
0x067E	0xF240070B  MOVW	R7, #11
0x0682	0xF2C00700  MOVT	R7, #0
0x0686	0xBF00    NOP
0x0688	0xBF00    NOP
L_Apply_changes151:
0x068A	0x1E7F    SUBS	R7, R7, #1
0x068C	0xD1FD    BNE	L_Apply_changes151
0x068E	0xBF00    NOP
0x0690	0xBF00    NOP
0x0692	0xBF00    NOP
;glcd_lib_v1.h, 285 :: 		
L_end_Apply_changes:
0x0694	0xB001    ADD	SP, SP, #4
0x0696	0x4770    BX	LR
0x0698	0x01342000  	main_ed+0
0x069C	0x01382000  	main_ed+4
; end of _Apply_changes
_GLCD_Set_Y:
;glcd_lib_v1.h, 178 :: 		
0x0A84	0xB081    SUB	SP, SP, #4
0x0A86	0xF8CDE000  STR	LR, [SP, #0]
;glcd_lib_v1.h, 180 :: 		
0x0A8A	0xB900    CBNZ	R0, L_GLCD_Set_Y77
0x0A8C	0xE03C    B	L_end_GLCD_Set_Y
L_GLCD_Set_Y77:
;glcd_lib_v1.h, 181 :: 		
0x0A8E	0x2900    CMP	R1, #0
0x0A90	0xD302    BCC	L__GLCD_Set_Y166
0x0A92	0x293F    CMP	R1, #63
0x0A94	0xD800    BHI	L__GLCD_Set_Y165
0x0A96	0xE000    B	L_GLCD_Set_Y80
L__GLCD_Set_Y166:
L__GLCD_Set_Y165:
0x0A98	0xE036    B	L_end_GLCD_Set_Y
L_GLCD_Set_Y80:
;glcd_lib_v1.h, 183 :: 		
0x0A9A	0xF0410240  ORR	R2, R1, #64
0x0A9E	0xB2D0    UXTB	R0, R2
;glcd_lib_v1.h, 184 :: 		
0x0AA0	0x4A1B    LDR	R2, [PC, #108]
0x0AA2	0x6812    LDR	R2, [R2, #0]
0x0AA4	0xB142    CBZ	R2, L_GLCD_Set_Y81
0x0AA6	0x4A1A    LDR	R2, [PC, #104]
0x0AA8	0x6812    LDR	R2, [R2, #0]
0x0AAA	0xF2020310  ADDW	R3, R2, #16
0x0AAE	0x4A19    LDR	R2, [PC, #100]
0x0AB0	0x8812    LDRH	R2, [R2, #0]
0x0AB2	0x0412    LSLS	R2, R2, #16
0x0AB4	0x601A    STR	R2, [R3, #0]
0x0AB6	0xE7FF    B	L_GLCD_Set_Y82
L_GLCD_Set_Y81:
L_GLCD_Set_Y82:
;glcd_lib_v1.h, 185 :: 		
0x0AB8	0x4A17    LDR	R2, [PC, #92]
0x0ABA	0x6812    LDR	R2, [R2, #0]
0x0ABC	0xB142    CBZ	R2, L_GLCD_Set_Y83
0x0ABE	0x4A16    LDR	R2, [PC, #88]
0x0AC0	0x6812    LDR	R2, [R2, #0]
0x0AC2	0xF2020310  ADDW	R3, R2, #16
0x0AC6	0x4A15    LDR	R2, [PC, #84]
0x0AC8	0x8812    LDRH	R2, [R2, #0]
0x0ACA	0x0412    LSLS	R2, R2, #16
0x0ACC	0x601A    STR	R2, [R3, #0]
0x0ACE	0xE7FF    B	L_GLCD_Set_Y84
L_GLCD_Set_Y83:
L_GLCD_Set_Y84:
;glcd_lib_v1.h, 187 :: 		
0x0AD0	0x4A13    LDR	R2, [PC, #76]
0x0AD2	0x6812    LDR	R2, [R2, #0]
0x0AD4	0xB1B2    CBZ	R2, L_GLCD_Set_Y85
0x0AD6	0x4A12    LDR	R2, [PC, #72]
0x0AD8	0x6812    LDR	R2, [R2, #0]
0x0ADA	0xF2020610  ADDW	R6, R2, #16
0x0ADE	0xB2C3    UXTB	R3, R0
0x0AE0	0x4D10    LDR	R5, [PC, #64]
0x0AE2	0x882A    LDRH	R2, [R5, #0]
0x0AE4	0xEA030402  AND	R4, R3, R2, LSL #0
0x0AE8	0xB2A4    UXTH	R4, R4
0x0AEA	0xB2C2    UXTB	R2, R0
0x0AEC	0x43D3    MVN	R3, R2
0x0AEE	0xB29B    UXTH	R3, R3
0x0AF0	0x462A    MOV	R2, R5
0x0AF2	0x8812    LDRH	R2, [R2, #0]
0x0AF4	0xEA030202  AND	R2, R3, R2, LSL #0
0x0AF8	0xB292    UXTH	R2, R2
0x0AFA	0x0412    LSLS	R2, R2, #16
0x0AFC	0xEA440202  ORR	R2, R4, R2, LSL #0
0x0B00	0x6032    STR	R2, [R6, #0]
0x0B02	0xE7FF    B	L_GLCD_Set_Y86
L_GLCD_Set_Y85:
L_GLCD_Set_Y86:
;glcd_lib_v1.h, 188 :: 		
0x0B04	0xF7FFFD98  BL	_Apply_changes+0
;glcd_lib_v1.h, 189 :: 		
L_end_GLCD_Set_Y:
0x0B08	0xF8DDE000  LDR	LR, [SP, #0]
0x0B0C	0xB001    ADD	SP, SP, #4
0x0B0E	0x4770    BX	LR
0x0B10	0x01182000  	main_did+0
0x0B14	0x011C2000  	main_did+4
0x0B18	0x01202000  	main_rwd+0
0x0B1C	0x01242000  	main_rwd+4
0x0B20	0x01282000  	main_data_out+0
0x0B24	0x012C2000  	main_data_out+4
; end of _GLCD_Set_Y
_GLCD_Display_Start_Line:
;glcd_lib_v1.h, 165 :: 		
0x079C	0xB081    SUB	SP, SP, #4
0x079E	0xF8CDE000  STR	LR, [SP, #0]
;glcd_lib_v1.h, 167 :: 		
0x07A2	0xB900    CBNZ	R0, L_GLCD_Display_Start_Line67
0x07A4	0xE03C    B	L_end_GLCD_Display_Start_Line
L_GLCD_Display_Start_Line67:
;glcd_lib_v1.h, 168 :: 		
0x07A6	0x2900    CMP	R1, #0
0x07A8	0xD302    BCC	L__GLCD_Display_Start_Line169
0x07AA	0x293F    CMP	R1, #63
0x07AC	0xD800    BHI	L__GLCD_Display_Start_Line168
0x07AE	0xE000    B	L_GLCD_Display_Start_Line70
L__GLCD_Display_Start_Line169:
L__GLCD_Display_Start_Line168:
0x07B0	0xE036    B	L_end_GLCD_Display_Start_Line
L_GLCD_Display_Start_Line70:
;glcd_lib_v1.h, 170 :: 		
0x07B2	0xF04102C0  ORR	R2, R1, #192
0x07B6	0xB2D0    UXTB	R0, R2
;glcd_lib_v1.h, 171 :: 		
0x07B8	0x4A1B    LDR	R2, [PC, #108]
0x07BA	0x6812    LDR	R2, [R2, #0]
0x07BC	0xB142    CBZ	R2, L_GLCD_Display_Start_Line71
0x07BE	0x4A1A    LDR	R2, [PC, #104]
0x07C0	0x6812    LDR	R2, [R2, #0]
0x07C2	0xF2020310  ADDW	R3, R2, #16
0x07C6	0x4A19    LDR	R2, [PC, #100]
0x07C8	0x8812    LDRH	R2, [R2, #0]
0x07CA	0x0412    LSLS	R2, R2, #16
0x07CC	0x601A    STR	R2, [R3, #0]
0x07CE	0xE7FF    B	L_GLCD_Display_Start_Line72
L_GLCD_Display_Start_Line71:
L_GLCD_Display_Start_Line72:
;glcd_lib_v1.h, 172 :: 		
0x07D0	0x4A17    LDR	R2, [PC, #92]
0x07D2	0x6812    LDR	R2, [R2, #0]
0x07D4	0xB142    CBZ	R2, L_GLCD_Display_Start_Line73
0x07D6	0x4A16    LDR	R2, [PC, #88]
0x07D8	0x6812    LDR	R2, [R2, #0]
0x07DA	0xF2020310  ADDW	R3, R2, #16
0x07DE	0x4A15    LDR	R2, [PC, #84]
0x07E0	0x8812    LDRH	R2, [R2, #0]
0x07E2	0x0412    LSLS	R2, R2, #16
0x07E4	0x601A    STR	R2, [R3, #0]
0x07E6	0xE7FF    B	L_GLCD_Display_Start_Line74
L_GLCD_Display_Start_Line73:
L_GLCD_Display_Start_Line74:
;glcd_lib_v1.h, 174 :: 		
0x07E8	0x4A13    LDR	R2, [PC, #76]
0x07EA	0x6812    LDR	R2, [R2, #0]
0x07EC	0xB1B2    CBZ	R2, L_GLCD_Display_Start_Line75
0x07EE	0x4A12    LDR	R2, [PC, #72]
0x07F0	0x6812    LDR	R2, [R2, #0]
0x07F2	0xF2020610  ADDW	R6, R2, #16
0x07F6	0xB2C3    UXTB	R3, R0
0x07F8	0x4D10    LDR	R5, [PC, #64]
0x07FA	0x882A    LDRH	R2, [R5, #0]
0x07FC	0xEA030402  AND	R4, R3, R2, LSL #0
0x0800	0xB2A4    UXTH	R4, R4
0x0802	0xB2C2    UXTB	R2, R0
0x0804	0x43D3    MVN	R3, R2
0x0806	0xB29B    UXTH	R3, R3
0x0808	0x462A    MOV	R2, R5
0x080A	0x8812    LDRH	R2, [R2, #0]
0x080C	0xEA030202  AND	R2, R3, R2, LSL #0
0x0810	0xB292    UXTH	R2, R2
0x0812	0x0412    LSLS	R2, R2, #16
0x0814	0xEA440202  ORR	R2, R4, R2, LSL #0
0x0818	0x6032    STR	R2, [R6, #0]
0x081A	0xE7FF    B	L_GLCD_Display_Start_Line76
L_GLCD_Display_Start_Line75:
L_GLCD_Display_Start_Line76:
;glcd_lib_v1.h, 175 :: 		
0x081C	0xF7FFFF0C  BL	_Apply_changes+0
;glcd_lib_v1.h, 176 :: 		
L_end_GLCD_Display_Start_Line:
0x0820	0xF8DDE000  LDR	LR, [SP, #0]
0x0824	0xB001    ADD	SP, SP, #4
0x0826	0x4770    BX	LR
0x0828	0x01182000  	main_did+0
0x082C	0x011C2000  	main_did+4
0x0830	0x01202000  	main_rwd+0
0x0834	0x01242000  	main_rwd+4
0x0838	0x01282000  	main_data_out+0
0x083C	0x012C2000  	main_data_out+4
; end of _GLCD_Display_Start_Line
_GLCD_Display:
;glcd_lib_v1.h, 145 :: 		
0x0CFC	0xB081    SUB	SP, SP, #4
0x0CFE	0xF8CDE000  STR	LR, [SP, #0]
0x0D02	0xFA5FF881  UXTB	R8, R1
;glcd_lib_v1.h, 147 :: 		
0x0D06	0xB900    CBNZ	R0, L_GLCD_Display39
0x0D08	0xE0C6    B	L_end_GLCD_Display
L_GLCD_Display39:
;glcd_lib_v1.h, 148 :: 		
0x0D0A	0xF1B80F3F  CMP	R8, #63
0x0D0E	0xD00A    BEQ	L_GLCD_Display41
0x0D10	0xF1B80F3F  CMP	R8, #63
0x0D14	0xD007    BEQ	L_GLCD_Display41
0x0D16	0xF1B80F3F  CMP	R8, #63
0x0D1A	0xD004    BEQ	L_GLCD_Display41
0x0D1C	0xF1B80F3F  CMP	R8, #63
0x0D20	0xD001    BEQ	L_GLCD_Display41
0x0D22	0x2200    MOVS	R2, #0
0x0D24	0xE000    B	L_GLCD_Display40
L_GLCD_Display41:
0x0D26	0x2201    MOVS	R2, #1
L_GLCD_Display40:
0x0D28	0xB9E2    CBNZ	R2, L__GLCD_Display172
0x0D2A	0xF1B80F3E  CMP	R8, #62
0x0D2E	0xD016    BEQ	L_GLCD_Display43
0x0D30	0xF1B80F3E  CMP	R8, #62
0x0D34	0xD013    BEQ	L_GLCD_Display43
0x0D36	0xF1B80F3E  CMP	R8, #62
0x0D3A	0xD010    BEQ	L_GLCD_Display43
0x0D3C	0xF1B80F3E  CMP	R8, #62
0x0D40	0xD00D    BEQ	L_GLCD_Display43
0x0D42	0xF1B80F3E  CMP	R8, #62
0x0D46	0xD00A    BEQ	L_GLCD_Display43
0x0D48	0xF1B80F3E  CMP	R8, #62
0x0D4C	0xD007    BEQ	L_GLCD_Display43
0x0D4E	0xF1B80F3E  CMP	R8, #62
0x0D52	0xD004    BEQ	L_GLCD_Display43
0x0D54	0xF1B80F3E  CMP	R8, #62
0x0D58	0xD001    BEQ	L_GLCD_Display43
0x0D5A	0x2200    MOVS	R2, #0
0x0D5C	0xE000    B	L_GLCD_Display42
L_GLCD_Display43:
0x0D5E	0x2201    MOVS	R2, #1
L_GLCD_Display42:
0x0D60	0xB902    CBNZ	R2, L__GLCD_Display171
L__GLCD_Display170:
0x0D62	0xE099    B	L_end_GLCD_Display
L__GLCD_Display172:
L__GLCD_Display171:
;glcd_lib_v1.h, 150 :: 		
0x0D64	0x4A4E    LDR	R2, [PC, #312]
0x0D66	0x6812    LDR	R2, [R2, #0]
0x0D68	0xB142    CBZ	R2, L_GLCD_Display47
0x0D6A	0x4A4D    LDR	R2, [PC, #308]
0x0D6C	0x6812    LDR	R2, [R2, #0]
0x0D6E	0xF2020310  ADDW	R3, R2, #16
0x0D72	0x4A4C    LDR	R2, [PC, #304]
0x0D74	0x8812    LDRH	R2, [R2, #0]
0x0D76	0x0412    LSLS	R2, R2, #16
0x0D78	0x601A    STR	R2, [R3, #0]
0x0D7A	0xE7FF    B	L_GLCD_Display48
L_GLCD_Display47:
L_GLCD_Display48:
;glcd_lib_v1.h, 151 :: 		
0x0D7C	0x4A4A    LDR	R2, [PC, #296]
0x0D7E	0x6812    LDR	R2, [R2, #0]
0x0D80	0xB13A    CBZ	R2, L_GLCD_Display49
0x0D82	0x4A49    LDR	R2, [PC, #292]
0x0D84	0x6812    LDR	R2, [R2, #0]
0x0D86	0xF2020310  ADDW	R3, R2, #16
0x0D8A	0x4A48    LDR	R2, [PC, #288]
0x0D8C	0x8812    LDRH	R2, [R2, #0]
0x0D8E	0x601A    STR	R2, [R3, #0]
0x0D90	0xE7FF    B	L_GLCD_Display50
L_GLCD_Display49:
L_GLCD_Display50:
;glcd_lib_v1.h, 152 :: 		
0x0D92	0x4A47    LDR	R2, [PC, #284]
0x0D94	0x6812    LDR	R2, [R2, #0]
0x0D96	0xB142    CBZ	R2, L_GLCD_Display51
0x0D98	0x4A45    LDR	R2, [PC, #276]
0x0D9A	0x6812    LDR	R2, [R2, #0]
0x0D9C	0xF2020310  ADDW	R3, R2, #16
0x0DA0	0x4A44    LDR	R2, [PC, #272]
0x0DA2	0x8812    LDRH	R2, [R2, #0]
0x0DA4	0x0412    LSLS	R2, R2, #16
0x0DA6	0x601A    STR	R2, [R3, #0]
0x0DA8	0xE7FF    B	L_GLCD_Display52
L_GLCD_Display51:
L_GLCD_Display52:
;glcd_lib_v1.h, 153 :: 		
0x0DAA	0x4A43    LDR	R2, [PC, #268]
0x0DAC	0x6812    LDR	R2, [R2, #0]
0x0DAE	0xB142    CBZ	R2, L_GLCD_Display53
0x0DB0	0x4A41    LDR	R2, [PC, #260]
0x0DB2	0x6812    LDR	R2, [R2, #0]
0x0DB4	0xF2020310  ADDW	R3, R2, #16
0x0DB8	0x4A40    LDR	R2, [PC, #256]
0x0DBA	0x8812    LDRH	R2, [R2, #0]
0x0DBC	0x0412    LSLS	R2, R2, #16
0x0DBE	0x601A    STR	R2, [R3, #0]
0x0DC0	0xE7FF    B	L_GLCD_Display54
L_GLCD_Display53:
L_GLCD_Display54:
;glcd_lib_v1.h, 154 :: 		
0x0DC2	0x4A3F    LDR	R2, [PC, #252]
0x0DC4	0x6812    LDR	R2, [R2, #0]
0x0DC6	0xB1C2    CBZ	R2, L_GLCD_Display55
0x0DC8	0x4A3D    LDR	R2, [PC, #244]
0x0DCA	0x6812    LDR	R2, [R2, #0]
0x0DCC	0xF2020610  ADDW	R6, R2, #16
0x0DD0	0xFA5FF388  UXTB	R3, R8
0x0DD4	0x4D3B    LDR	R5, [PC, #236]
0x0DD6	0x882A    LDRH	R2, [R5, #0]
0x0DD8	0xEA030402  AND	R4, R3, R2, LSL #0
0x0DDC	0xB2A4    UXTH	R4, R4
0x0DDE	0xFA5FF288  UXTB	R2, R8
0x0DE2	0x43D3    MVN	R3, R2
0x0DE4	0xB29B    UXTH	R3, R3
0x0DE6	0x462A    MOV	R2, R5
0x0DE8	0x8812    LDRH	R2, [R2, #0]
0x0DEA	0xEA030202  AND	R2, R3, R2, LSL #0
0x0DEE	0xB292    UXTH	R2, R2
0x0DF0	0x0412    LSLS	R2, R2, #16
0x0DF2	0xEA440202  ORR	R2, R4, R2, LSL #0
0x0DF6	0x6032    STR	R2, [R6, #0]
0x0DF8	0xE7FF    B	L_GLCD_Display56
L_GLCD_Display55:
L_GLCD_Display56:
;glcd_lib_v1.h, 155 :: 		
0x0DFA	0xF7FFFC1D  BL	_Apply_changes+0
;glcd_lib_v1.h, 157 :: 		
0x0DFE	0x4A28    LDR	R2, [PC, #160]
0x0E00	0x6812    LDR	R2, [R2, #0]
0x0E02	0xB13A    CBZ	R2, L_GLCD_Display57
0x0E04	0x4A26    LDR	R2, [PC, #152]
0x0E06	0x6812    LDR	R2, [R2, #0]
0x0E08	0xF2020310  ADDW	R3, R2, #16
0x0E0C	0x4A25    LDR	R2, [PC, #148]
0x0E0E	0x8812    LDRH	R2, [R2, #0]
0x0E10	0x601A    STR	R2, [R3, #0]
0x0E12	0xE7FF    B	L_GLCD_Display58
L_GLCD_Display57:
L_GLCD_Display58:
;glcd_lib_v1.h, 158 :: 		
0x0E14	0x4A24    LDR	R2, [PC, #144]
0x0E16	0x6812    LDR	R2, [R2, #0]
0x0E18	0xB142    CBZ	R2, L_GLCD_Display59
0x0E1A	0x4A23    LDR	R2, [PC, #140]
0x0E1C	0x6812    LDR	R2, [R2, #0]
0x0E1E	0xF2020310  ADDW	R3, R2, #16
0x0E22	0x4A22    LDR	R2, [PC, #136]
0x0E24	0x8812    LDRH	R2, [R2, #0]
0x0E26	0x0412    LSLS	R2, R2, #16
0x0E28	0x601A    STR	R2, [R3, #0]
0x0E2A	0xE7FF    B	L_GLCD_Display60
L_GLCD_Display59:
L_GLCD_Display60:
;glcd_lib_v1.h, 159 :: 		
0x0E2C	0x4A20    LDR	R2, [PC, #128]
0x0E2E	0x6812    LDR	R2, [R2, #0]
0x0E30	0xB142    CBZ	R2, L_GLCD_Display61
0x0E32	0x4A1F    LDR	R2, [PC, #124]
0x0E34	0x6812    LDR	R2, [R2, #0]
0x0E36	0xF2020310  ADDW	R3, R2, #16
0x0E3A	0x4A1E    LDR	R2, [PC, #120]
0x0E3C	0x8812    LDRH	R2, [R2, #0]
0x0E3E	0x0412    LSLS	R2, R2, #16
0x0E40	0x601A    STR	R2, [R3, #0]
0x0E42	0xE7FF    B	L_GLCD_Display62
L_GLCD_Display61:
L_GLCD_Display62:
;glcd_lib_v1.h, 160 :: 		
0x0E44	0x4A1C    LDR	R2, [PC, #112]
0x0E46	0x6812    LDR	R2, [R2, #0]
0x0E48	0xB142    CBZ	R2, L_GLCD_Display63
0x0E4A	0x4A1B    LDR	R2, [PC, #108]
0x0E4C	0x6812    LDR	R2, [R2, #0]
0x0E4E	0xF2020310  ADDW	R3, R2, #16
0x0E52	0x4A1A    LDR	R2, [PC, #104]
0x0E54	0x8812    LDRH	R2, [R2, #0]
0x0E56	0x0412    LSLS	R2, R2, #16
0x0E58	0x601A    STR	R2, [R3, #0]
0x0E5A	0xE7FF    B	L_GLCD_Display64
L_GLCD_Display63:
L_GLCD_Display64:
;glcd_lib_v1.h, 161 :: 		
0x0E5C	0x4A18    LDR	R2, [PC, #96]
0x0E5E	0x6812    LDR	R2, [R2, #0]
0x0E60	0xB1C2    CBZ	R2, L_GLCD_Display65
0x0E62	0x4A17    LDR	R2, [PC, #92]
0x0E64	0x6812    LDR	R2, [R2, #0]
0x0E66	0xF2020610  ADDW	R6, R2, #16
0x0E6A	0xFA5FF388  UXTB	R3, R8
0x0E6E	0x4D15    LDR	R5, [PC, #84]
0x0E70	0x882A    LDRH	R2, [R5, #0]
0x0E72	0xEA030402  AND	R4, R3, R2, LSL #0
0x0E76	0xB2A4    UXTH	R4, R4
0x0E78	0xFA5FF288  UXTB	R2, R8
0x0E7C	0x43D3    MVN	R3, R2
0x0E7E	0xB29B    UXTH	R3, R3
0x0E80	0x462A    MOV	R2, R5
0x0E82	0x8812    LDRH	R2, [R2, #0]
0x0E84	0xEA030202  AND	R2, R3, R2, LSL #0
0x0E88	0xB292    UXTH	R2, R2
0x0E8A	0x0412    LSLS	R2, R2, #16
0x0E8C	0xEA440202  ORR	R2, R4, R2, LSL #0
0x0E90	0x6032    STR	R2, [R6, #0]
0x0E92	0xE7FF    B	L_GLCD_Display66
L_GLCD_Display65:
L_GLCD_Display66:
;glcd_lib_v1.h, 162 :: 		
0x0E94	0xF7FFFBD0  BL	_Apply_changes+0
;glcd_lib_v1.h, 163 :: 		
L_end_GLCD_Display:
0x0E98	0xF8DDE000  LDR	LR, [SP, #0]
0x0E9C	0xB001    ADD	SP, SP, #4
0x0E9E	0x4770    BX	LR
0x0EA0	0x013C2000  	main_cs1d+0
0x0EA4	0x01402000  	main_cs1d+4
0x0EA8	0x01442000  	main_cs2d+0
0x0EAC	0x01482000  	main_cs2d+4
0x0EB0	0x01182000  	main_did+0
0x0EB4	0x011C2000  	main_did+4
0x0EB8	0x01202000  	main_rwd+0
0x0EBC	0x01242000  	main_rwd+4
0x0EC0	0x01282000  	main_data_out+0
0x0EC4	0x012C2000  	main_data_out+4
; end of _GLCD_Display
_GLCD_Write:
;glcd_lib_v1.h, 228 :: 		
0x0EC8	0xB081    SUB	SP, SP, #4
0x0ECA	0xF8CDE000  STR	LR, [SP, #0]
;glcd_lib_v1.h, 230 :: 		
0x0ECE	0xB900    CBNZ	R0, L_GLCD_Write113
0x0ED0	0xE039    B	L_end_GLCD_Write
L_GLCD_Write113:
;glcd_lib_v1.h, 231 :: 		
0x0ED2	0x2908    CMP	R1, #8
0x0ED4	0xD202    BCS	L__GLCD_Write175
0x0ED6	0x2A40    CMP	R2, #64
0x0ED8	0xD200    BCS	L__GLCD_Write174
0x0EDA	0xE000    B	L_GLCD_Write116
L__GLCD_Write175:
L__GLCD_Write174:
0x0EDC	0xE033    B	L_end_GLCD_Write
L_GLCD_Write116:
;glcd_lib_v1.h, 233 :: 		
0x0EDE	0x4C1C    LDR	R4, [PC, #112]
0x0EE0	0x6824    LDR	R4, [R4, #0]
0x0EE2	0xB13C    CBZ	R4, L_GLCD_Write117
0x0EE4	0x4C1A    LDR	R4, [PC, #104]
0x0EE6	0x6824    LDR	R4, [R4, #0]
0x0EE8	0xF2040510  ADDW	R5, R4, #16
0x0EEC	0x4C19    LDR	R4, [PC, #100]
0x0EEE	0x8824    LDRH	R4, [R4, #0]
0x0EF0	0x602C    STR	R4, [R5, #0]
0x0EF2	0xE7FF    B	L_GLCD_Write118
L_GLCD_Write117:
L_GLCD_Write118:
;glcd_lib_v1.h, 234 :: 		
0x0EF4	0x4C18    LDR	R4, [PC, #96]
0x0EF6	0x6824    LDR	R4, [R4, #0]
0x0EF8	0xB144    CBZ	R4, L_GLCD_Write119
0x0EFA	0x4C17    LDR	R4, [PC, #92]
0x0EFC	0x6824    LDR	R4, [R4, #0]
0x0EFE	0xF2040510  ADDW	R5, R4, #16
0x0F02	0x4C16    LDR	R4, [PC, #88]
0x0F04	0x8824    LDRH	R4, [R4, #0]
0x0F06	0x0424    LSLS	R4, R4, #16
0x0F08	0x602C    STR	R4, [R5, #0]
0x0F0A	0xE7FF    B	L_GLCD_Write120
L_GLCD_Write119:
L_GLCD_Write120:
;glcd_lib_v1.h, 236 :: 		
0x0F0C	0x4C14    LDR	R4, [PC, #80]
0x0F0E	0x6824    LDR	R4, [R4, #0]
0x0F10	0xB1BC    CBZ	R4, L_GLCD_Write121
0x0F12	0x4C13    LDR	R4, [PC, #76]
0x0F14	0x6824    LDR	R4, [R4, #0]
0x0F16	0xF1040810  ADD	R8, R4, #16
0x0F1A	0xB2DD    UXTB	R5, R3
0x0F1C	0x4F11    LDR	R7, [PC, #68]
0x0F1E	0x883C    LDRH	R4, [R7, #0]
0x0F20	0xEA050604  AND	R6, R5, R4, LSL #0
0x0F24	0xB2B6    UXTH	R6, R6
0x0F26	0xB2DC    UXTB	R4, R3
0x0F28	0x43E5    MVN	R5, R4
0x0F2A	0xB2AD    UXTH	R5, R5
0x0F2C	0x463C    MOV	R4, R7
0x0F2E	0x8824    LDRH	R4, [R4, #0]
0x0F30	0xEA050404  AND	R4, R5, R4, LSL #0
0x0F34	0xB2A4    UXTH	R4, R4
0x0F36	0x0424    LSLS	R4, R4, #16
0x0F38	0xEA460404  ORR	R4, R6, R4, LSL #0
0x0F3C	0xF8C84000  STR	R4, [R8, #0]
0x0F40	0xE7FF    B	L_GLCD_Write122
L_GLCD_Write121:
L_GLCD_Write122:
;glcd_lib_v1.h, 237 :: 		
0x0F42	0xF7FFFB79  BL	_Apply_changes+0
;glcd_lib_v1.h, 238 :: 		
L_end_GLCD_Write:
0x0F46	0xF8DDE000  LDR	LR, [SP, #0]
0x0F4A	0xB001    ADD	SP, SP, #4
0x0F4C	0x4770    BX	LR
0x0F4E	0xBF00    NOP
0x0F50	0x01182000  	main_did+0
0x0F54	0x011C2000  	main_did+4
0x0F58	0x01202000  	main_rwd+0
0x0F5C	0x01242000  	main_rwd+4
0x0F60	0x01282000  	main_data_out+0
0x0F64	0x012C2000  	main_data_out+4
; end of _GLCD_Write
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 161 :: 		static void InitialSetUpRCCRCC2()
0x135C	0xB081    SUB	SP, SP, #4
0x135E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 166 :: 		ulRCC_CR = 12345678;
0x1362	0x4A4A    LDR	R2, [PC, #296]
;__Lib_System_105_107.c, 167 :: 		ulRCC_CFGR = 12345679;
0x1364	0x4B4A    LDR	R3, [PC, #296]
;__Lib_System_105_107.c, 168 :: 		ulRCC_CFGR2 = 12345680;
0x1366	0x4C4B    LDR	R4, [PC, #300]
;__Lib_System_105_107.c, 169 :: 		Fosc_kHz = 12345677;
0x1368	0x4D4B    LDR	R5, [PC, #300]
;__Lib_System_105_107.c, 175 :: 		tmp = ulRCC_CFGR & 0x000000F0;
0x136A	0xF00300F0  AND	R0, R3, #240
;__Lib_System_105_107.c, 176 :: 		tmp = tmp >> 4;
0x136E	0x0901    LSRS	R1, R0, #4
;__Lib_System_105_107.c, 177 :: 		presc = APBAHBPrescTable[ tmp ];
0x1370	0x484A    LDR	R0, [PC, #296]
0x1372	0x1840    ADDS	R0, R0, R1
0x1374	0x7800    LDRB	R0, [R0, #0]
;__Lib_System_105_107.c, 179 :: 		SYS_clk = Fosc_kHz << presc;
0x1376	0xFA05F100  LSL	R1, R5, R0
0x137A	0x460D    MOV	R5, R1
;__Lib_System_105_107.c, 181 :: 		if ( SYS_clk > 48000 )
0x137C	0xF64B3080  MOVW	R0, #48000
0x1380	0x4281    CMP	R1, R0
0x1382	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC28
;__Lib_System_105_107.c, 182 :: 		FLASH_ACR |= 2;
0x1384	0x4846    LDR	R0, [PC, #280]
0x1386	0x6800    LDR	R0, [R0, #0]
0x1388	0xF0400102  ORR	R1, R0, #2
0x138C	0x4844    LDR	R0, [PC, #272]
0x138E	0x6001    STR	R1, [R0, #0]
0x1390	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC29
L___Lib_System_105_107_InitialSetUpRCCRCC28:
;__Lib_System_105_107.c, 183 :: 		else if ( SYS_clk > 24000 )
0x1392	0xF64550C0  MOVW	R0, #24000
0x1396	0x4285    CMP	R5, R0
0x1398	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC210
;__Lib_System_105_107.c, 184 :: 		FLASH_ACR |= 1;
0x139A	0x4841    LDR	R0, [PC, #260]
0x139C	0x6800    LDR	R0, [R0, #0]
0x139E	0xF0400101  ORR	R1, R0, #1
0x13A2	0x483F    LDR	R0, [PC, #252]
0x13A4	0x6001    STR	R1, [R0, #0]
0x13A6	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC211
L___Lib_System_105_107_InitialSetUpRCCRCC210:
;__Lib_System_105_107.c, 186 :: 		FLASH_ACR &= ~7ul;
0x13A8	0x483D    LDR	R0, [PC, #244]
0x13AA	0x6801    LDR	R1, [R0, #0]
0x13AC	0xF06F0007  MVN	R0, #7
0x13B0	0x4001    ANDS	R1, R0
0x13B2	0x483B    LDR	R0, [PC, #236]
0x13B4	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC211:
L___Lib_System_105_107_InitialSetUpRCCRCC29:
;__Lib_System_105_107.c, 188 :: 		SystemClockSetDefault();
0x13B6	0xF7FFFDD7  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 191 :: 		RCC_CFGR  = ulRCC_CFGR;
0x13BA	0x483A    LDR	R0, [PC, #232]
0x13BC	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 194 :: 		RCC_CFGR2 = ulRCC_CFGR2;
0x13BE	0x483A    LDR	R0, [PC, #232]
0x13C0	0x6004    STR	R4, [R0, #0]
;__Lib_System_105_107.c, 197 :: 		RCC_CR = ulRCC_CR & 0x000FFFFF;
0x13C2	0x483A    LDR	R0, [PC, #232]
0x13C4	0xEA020100  AND	R1, R2, R0, LSL #0
0x13C8	0x4839    LDR	R0, [PC, #228]
0x13CA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 200 :: 		if ( ulRCC_CR & ( 1ul << HSION ) ) {
0x13CC	0xF0020001  AND	R0, R2, #1
0x13D0	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC229
0x13D2	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 202 :: 		while ( ( RCC_CR & ( 1ul << HSIRDY ) ) == 0 )
L___Lib_System_105_107_InitialSetUpRCCRCC213:
0x13D4	0x4836    LDR	R0, [PC, #216]
0x13D6	0x6800    LDR	R0, [R0, #0]
0x13D8	0xF0000002  AND	R0, R0, #2
0x13DC	0x2800    CMP	R0, #0
0x13DE	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC214
;__Lib_System_105_107.c, 203 :: 		;
0x13E0	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC213
L___Lib_System_105_107_InitialSetUpRCCRCC214:
;__Lib_System_105_107.c, 204 :: 		}
0x13E2	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC212
L___Lib_System_105_107_InitialSetUpRCCRCC229:
;__Lib_System_105_107.c, 200 :: 		if ( ulRCC_CR & ( 1ul << HSION ) ) {
0x13E4	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 204 :: 		}
L___Lib_System_105_107_InitialSetUpRCCRCC212:
;__Lib_System_105_107.c, 207 :: 		if ( ulRCC_CR & ( 1ul << HSEON ) ) {
0x13E6	0xF4023080  AND	R0, R2, #65536
0x13EA	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC230
0x13EC	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 209 :: 		while ( ( RCC_CR & ( 1ul << HSERDY ) ) == 0 )
L___Lib_System_105_107_InitialSetUpRCCRCC216:
0x13EE	0x4830    LDR	R0, [PC, #192]
0x13F0	0x6800    LDR	R0, [R0, #0]
0x13F2	0xF4003000  AND	R0, R0, #131072
0x13F6	0x2800    CMP	R0, #0
0x13F8	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC217
;__Lib_System_105_107.c, 210 :: 		;
0x13FA	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC216
L___Lib_System_105_107_InitialSetUpRCCRCC217:
;__Lib_System_105_107.c, 211 :: 		}
0x13FC	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC215
L___Lib_System_105_107_InitialSetUpRCCRCC230:
;__Lib_System_105_107.c, 207 :: 		if ( ulRCC_CR & ( 1ul << HSEON ) ) {
0x13FE	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 211 :: 		}
L___Lib_System_105_107_InitialSetUpRCCRCC215:
;__Lib_System_105_107.c, 214 :: 		if ( ulRCC_CR & ( 1ul << PLL3ON ) ) {
0x1400	0xF0025080  AND	R0, R2, #268435456
0x1404	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC231
;__Lib_System_105_107.c, 216 :: 		RCC_CR |= ( 1ul << PLL3ON );
0x1406	0x482A    LDR	R0, [PC, #168]
0x1408	0x6800    LDR	R0, [R0, #0]
0x140A	0xF0405180  ORR	R1, R0, #268435456
0x140E	0x4828    LDR	R0, [PC, #160]
0x1410	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 218 :: 		while ( ( RCC_CR & ( 1ul << PLL3RDY ) ) == 0 )
L___Lib_System_105_107_InitialSetUpRCCRCC219:
0x1412	0x4827    LDR	R0, [PC, #156]
0x1414	0x6800    LDR	R0, [R0, #0]
0x1416	0xF0005000  AND	R0, R0, #536870912
0x141A	0x2800    CMP	R0, #0
0x141C	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC220
;__Lib_System_105_107.c, 219 :: 		;
0x141E	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC219
L___Lib_System_105_107_InitialSetUpRCCRCC220:
;__Lib_System_105_107.c, 220 :: 		}
0x1420	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC218
L___Lib_System_105_107_InitialSetUpRCCRCC231:
;__Lib_System_105_107.c, 214 :: 		if ( ulRCC_CR & ( 1ul << PLL3ON ) ) {
;__Lib_System_105_107.c, 220 :: 		}
L___Lib_System_105_107_InitialSetUpRCCRCC218:
;__Lib_System_105_107.c, 223 :: 		if ( ulRCC_CR & ( 1ul << PLL2ON ) ) {
0x1422	0xF0026080  AND	R0, R2, #67108864
0x1426	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC232
;__Lib_System_105_107.c, 225 :: 		RCC_CR |= ( 1ul << PLL2ON );
0x1428	0x4821    LDR	R0, [PC, #132]
0x142A	0x6800    LDR	R0, [R0, #0]
0x142C	0xF0406180  ORR	R1, R0, #67108864
0x1430	0x481F    LDR	R0, [PC, #124]
0x1432	0x6001    STR	R1, [R0, #0]
0x1434	0x4611    MOV	R1, R2
0x1436	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 227 :: 		while ( ( RCC_CR & ( 1ul << PLL2RDY ) ) == 0 )
L___Lib_System_105_107_InitialSetUpRCCRCC222:
0x1438	0x481D    LDR	R0, [PC, #116]
0x143A	0x6800    LDR	R0, [R0, #0]
0x143C	0xF0006000  AND	R0, R0, #134217728
0x1440	0x2800    CMP	R0, #0
0x1442	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC223
;__Lib_System_105_107.c, 228 :: 		;
0x1444	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC222
L___Lib_System_105_107_InitialSetUpRCCRCC223:
;__Lib_System_105_107.c, 229 :: 		}
0x1446	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC221
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 223 :: 		if ( ulRCC_CR & ( 1ul << PLL2ON ) ) {
0x1448	0x4611    MOV	R1, R2
0x144A	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 229 :: 		}
L___Lib_System_105_107_InitialSetUpRCCRCC221:
;__Lib_System_105_107.c, 232 :: 		if ( ulRCC_CR & ( 1ul << PLLON ) ) {
0x144C	0xF0017080  AND	R0, R1, #16777216
0x1450	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC233
;__Lib_System_105_107.c, 234 :: 		RCC_CR |= ( 1ul << PLLON );
0x1452	0x4817    LDR	R0, [PC, #92]
0x1454	0x6800    LDR	R0, [R0, #0]
0x1456	0xF0407180  ORR	R1, R0, #16777216
0x145A	0x4815    LDR	R0, [PC, #84]
0x145C	0x6001    STR	R1, [R0, #0]
0x145E	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 236 :: 		while ( ( RCC_CR & ( 1ul << PLLRDY ) ) == 0 )
L___Lib_System_105_107_InitialSetUpRCCRCC225:
0x1460	0x4813    LDR	R0, [PC, #76]
0x1462	0x6800    LDR	R0, [R0, #0]
0x1464	0xF0007000  AND	R0, R0, #33554432
0x1468	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC226
;__Lib_System_105_107.c, 237 :: 		;
0x146A	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC225
L___Lib_System_105_107_InitialSetUpRCCRCC226:
;__Lib_System_105_107.c, 238 :: 		}
0x146C	0x460A    MOV	R2, R1
0x146E	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC224
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 232 :: 		if ( ulRCC_CR & ( 1ul << PLLON ) ) {
;__Lib_System_105_107.c, 238 :: 		}
L___Lib_System_105_107_InitialSetUpRCCRCC224:
;__Lib_System_105_107.c, 241 :: 		while ( ( RCC_CFGR & RCC_CFGR_SWS ) != ( ( ulRCC_CFGR << 2 ) & RCC_CFGR_SWS ) )
L___Lib_System_105_107_InitialSetUpRCCRCC227:
0x1470	0x480C    LDR	R0, [PC, #48]
0x1472	0x6800    LDR	R0, [R0, #0]
0x1474	0xF000010C  AND	R1, R0, #12
0x1478	0x0090    LSLS	R0, R2, #2
0x147A	0xF000000C  AND	R0, R0, #12
0x147E	0x4281    CMP	R1, R0
0x1480	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC228
;__Lib_System_105_107.c, 242 :: 		;
0x1482	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC227
L___Lib_System_105_107_InitialSetUpRCCRCC228:
;__Lib_System_105_107.c, 243 :: 		}
L_end_InitialSetUpRCCRCC2:
0x1484	0xF8DDE000  LDR	LR, [SP, #0]
0x1488	0xB001    ADD	SP, SP, #4
0x148A	0x4770    BX	LR
0x148C	0x00800501  	#83951744
0x1490	0x0402001D  	#1901570
0x1494	0x06440001  	#67140
0x1498	0x19400001  	#72000
0x149C	0x16DC0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x14A0	0x20004002  	FLASH_ACR+0
0x14A4	0x10044002  	RCC_CFGR+0
0x14A8	0x102C4002  	RCC_CFGR2+0
0x14AC	0xFFFF000F  	#1048575
0x14B0	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 134 :: 		static void SystemClockSetDefault( void )
0x0F68	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 137 :: 		RCC_CR |= ( unsigned long )0x00000001;
0x0F6A	0x4815    LDR	R0, [PC, #84]
0x0F6C	0x6800    LDR	R0, [R0, #0]
0x0F6E	0xF0400101  ORR	R1, R0, #1
0x0F72	0x4813    LDR	R0, [PC, #76]
0x0F74	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 140 :: 		RCC_CFGR = 0xF0FF0000;
0x0F76	0x4913    LDR	R1, [PC, #76]
0x0F78	0x4813    LDR	R0, [PC, #76]
0x0F7A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 143 :: 		RCC_CR &= ( unsigned long )0xFEF6FFFF;
0x0F7C	0x4810    LDR	R0, [PC, #64]
0x0F7E	0x6801    LDR	R1, [R0, #0]
0x0F80	0x4812    LDR	R0, [PC, #72]
0x0F82	0x4001    ANDS	R1, R0
0x0F84	0x480E    LDR	R0, [PC, #56]
0x0F86	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 146 :: 		RCC_CR &= ( unsigned long )0xFFFBFFFF;
0x0F88	0x480D    LDR	R0, [PC, #52]
0x0F8A	0x6801    LDR	R1, [R0, #0]
0x0F8C	0xF46F2080  MVN	R0, #262144
0x0F90	0x4001    ANDS	R1, R0
0x0F92	0x480B    LDR	R0, [PC, #44]
0x0F94	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 149 :: 		RCC_CFGR &= ( unsigned long )0xFF80FFFF;
0x0F96	0x480C    LDR	R0, [PC, #48]
0x0F98	0x6801    LDR	R1, [R0, #0]
0x0F9A	0xF46F00FE  MVN	R0, #8323072
0x0F9E	0x4001    ANDS	R1, R0
0x0FA0	0x4809    LDR	R0, [PC, #36]
0x0FA2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 152 :: 		RCC_CR &= ( unsigned long )0xEBFFFFFF;
0x0FA4	0x4806    LDR	R0, [PC, #24]
0x0FA6	0x6801    LDR	R1, [R0, #0]
0x0FA8	0xF06F50A0  MVN	R0, #335544320
0x0FAC	0x4001    ANDS	R1, R0
0x0FAE	0x4804    LDR	R0, [PC, #16]
0x0FB0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 155 :: 		RCC_CFGR2 = ( unsigned long )0x00000000;
0x0FB2	0xF04F0100  MOV	R1, #0
0x0FB6	0x4806    LDR	R0, [PC, #24]
0x0FB8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 156 :: 		}
L_end_SystemClockSetDefault:
0x0FBA	0xB001    ADD	SP, SP, #4
0x0FBC	0x4770    BX	LR
0x0FBE	0xBF00    NOP
0x0FC0	0x10004002  	RCC_CR+0
0x0FC4	0x0000F0FF  	#-251723776
0x0FC8	0x10044002  	RCC_CFGR+0
0x0FCC	0xFFFFFEF6  	#-17367041
0x0FD0	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 245 :: 		static void InitialSetUpFosc()
0x1348	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 247 :: 		__System_CLOCK_IN_KHZ = 12345677;
0x134A	0x4902    LDR	R1, [PC, #8]
0x134C	0x4802    LDR	R0, [PC, #8]
0x134E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 248 :: 		}
L_end_InitialSetUpFosc:
0x1350	0xB001    ADD	SP, SP, #4
0x1352	0x4770    BX	LR
0x1354	0x19400001  	#72000
0x1358	0x05802000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 93 :: 		void __GenExcept()
0x14B4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 95 :: 		while ( 1 )
L___GenExcept4:
;__Lib_System_105_107.c, 96 :: 		;
0x14B6	0xE7FE    B	L___GenExcept4
;__Lib_System_105_107.c, 97 :: 		}
L_end___GenExcept:
0x14B8	0xB001    ADD	SP, SP, #4
0x14BA	0x4770    BX	LR
; end of ___GenExcept
0x16EC	0xB500    PUSH	(R14)
0x16EE	0xF8DFB024  LDR	R11, [PC, #36]
0x16F2	0xF8DFA024  LDR	R10, [PC, #36]
0x16F6	0xF8DFC024  LDR	R12, [PC, #36]
0x16FA	0xF7FFFA8B  BL	3092
0x16FE	0xF8DFB020  LDR	R11, [PC, #32]
0x1702	0xF8DFA020  LDR	R10, [PC, #32]
0x1706	0xF8DFC020  LDR	R12, [PC, #32]
0x170A	0xF7FFFA83  BL	3092
0x170E	0xBD00    POP	(R15)
0x1710	0x4770    BX	LR
0x1712	0xBF00    NOP
0x1714	0x00002000  	#536870912
0x1718	0x00022000  	#536870914
0x171C	0x01CA0000  	#458
0x1720	0x00042000  	#536870916
0x1724	0x01182000  	#536871192
0x1728	0x159C0000  	#5532
0x1788	0xB500    PUSH	(R14)
0x178A	0xF8DFB010  LDR	R11, [PC, #16]
0x178E	0xF8DFA010  LDR	R10, [PC, #16]
0x1792	0xF7FFFA49  BL	3112
0x1796	0xBD00    POP	(R15)
0x1798	0x4770    BX	LR
0x179A	0xBF00    NOP
0x179C	0x00002000  	#536870912
0x17A0	0x05A42000  	#536872356
_UART3_IRQHandler:
;hal_ll_uart.c, 905 :: 		void MARK_AS_IRQ_HANDLER UART3_IRQHandler() MIKROC_IV(UART3_NVIC) {
0x1520	0xB430    PUSH	(R4, R5)
0x1522	0xB081    SUB	SP, SP, #4
0x1524	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_uart.c, 906 :: 		if( hal_ll_uart_get_status_flags( HAL_LL_UART3_BASE_ADDRESS , HAL_LL_UART_STATUS_RXNE_FLAG ) ) {
0x1528	0x4818    LDR	R0, [PC, #96]
0x152A	0x6800    LDR	R0, [R0, #0]
0x152C	0xF0000020  AND	R0, R0, #32
0x1530	0xB178    CBZ	R0, L_UART3_IRQHandler55
;hal_ll_uart.c, 907 :: 		if( ( __HAL_LL_UART_GET_IT_SOURCE( HAL_LL_UART3_BASE_ADDRESS, HAL_LL_UART_IT_RXNE ) ) != 0 ) {
0x1532	0x4817    LDR	R0, [PC, #92]
0x1534	0x6800    LDR	R0, [R0, #0]
0x1536	0xF0000020  AND	R0, R0, #32
0x153A	0xB150    CBZ	R0, L_UART3_IRQHandler56
;hal_ll_uart.c, 908 :: 		hal_ll_uart_clear_status_flag( HAL_LL_UART3_BASE_ADDRESS, HAL_LL_UART_STATUS_RXNE_FLAG );
0x153C	0x4913    LDR	R1, [PC, #76]
0x153E	0x6808    LDR	R0, [R1, #0]
0x1540	0xF00030FF  AND	R0, R0, #-1
0x1544	0x6008    STR	R0, [R1, #0]
;hal_ll_uart.c, 909 :: 		irq_handler( objects[ hal_ll_uart_module_num(UART_MODULE_3) ], HAL_LL_UART_IRQ_RX );
0x1546	0x4813    LDR	R0, [PC, #76]
0x1548	0x6800    LDR	R0, [R0, #0]
0x154A	0x2100    MOVS	R1, #0
0x154C	0x4C12    LDR	R4, [PC, #72]
0x154E	0x6824    LDR	R4, [R4, #0]
0x1550	0x47A0    BLX	R4
;hal_ll_uart.c, 910 :: 		}
L_UART3_IRQHandler56:
;hal_ll_uart.c, 911 :: 		}
L_UART3_IRQHandler55:
;hal_ll_uart.c, 912 :: 		if( hal_ll_uart_get_status_flags( HAL_LL_UART3_BASE_ADDRESS , HAL_LL_UART_STATUS_TXE_FLAG ) ) {
0x1552	0x480E    LDR	R0, [PC, #56]
0x1554	0x6800    LDR	R0, [R0, #0]
0x1556	0xF0000080  AND	R0, R0, #128
0x155A	0xB188    CBZ	R0, L_UART3_IRQHandler57
;hal_ll_uart.c, 913 :: 		if( ( __HAL_LL_UART_GET_IT_SOURCE( HAL_LL_UART3_BASE_ADDRESS, HAL_LL_UART_IT_TXE ) ) != 0 ) {
0x155C	0x480C    LDR	R0, [PC, #48]
0x155E	0x6800    LDR	R0, [R0, #0]
0x1560	0xF0000080  AND	R0, R0, #128
0x1564	0xB160    CBZ	R0, L_UART3_IRQHandler58
;hal_ll_uart.c, 914 :: 		hal_ll_uart_clear_status_flag( HAL_LL_UART3_BASE_ADDRESS, HAL_LL_UART_STATUS_TXE_FLAG );
0x1566	0x4A09    LDR	R2, [PC, #36]
0x1568	0x6811    LDR	R1, [R2, #0]
0x156A	0xF06F0001  MVN	R0, #1
0x156E	0xEA010000  AND	R0, R1, R0, LSL #0
0x1572	0x6010    STR	R0, [R2, #0]
;hal_ll_uart.c, 915 :: 		irq_handler( objects[ hal_ll_uart_module_num(UART_MODULE_3) ], HAL_LL_UART_IRQ_TX );
0x1574	0x4807    LDR	R0, [PC, #28]
0x1576	0x6800    LDR	R0, [R0, #0]
0x1578	0x2101    MOVS	R1, #1
0x157A	0x4C07    LDR	R4, [PC, #28]
0x157C	0x6824    LDR	R4, [R4, #0]
0x157E	0x47A0    BLX	R4
;hal_ll_uart.c, 916 :: 		}
L_UART3_IRQHandler58:
;hal_ll_uart.c, 917 :: 		}
L_UART3_IRQHandler57:
;hal_ll_uart.c, 918 :: 		}
L_end_UART3_IRQHandler:
0x1580	0xF8DDE000  LDR	LR, [SP, #0]
0x1584	0xB001    ADD	SP, SP, #4
0x1586	0xBC30    POP	(R4, R5)
0x1588	0x4770    BX	LR
0x158A	0xBF00    NOP
0x158C	0x48004000  	#1073760256
0x1590	0x480C4000  	#1073760268
0x1594	0x05902000  	hal_ll_uart_objects+8
0x1598	0x05842000  	hal_ll_uart_irq_handler+0
; end of _UART3_IRQHandler
_hal_uart_irq_handler:
;hal_uart.c, 540 :: 		void hal_uart_irq_handler( handle_t obj, hal_uart_irq_t event )
0x0C64	0xB083    SUB	SP, SP, #12
0x0C66	0xF8CDE000  STR	LR, [SP, #0]
0x0C6A	0xF88D1008  STRB	R1, [SP, #8]
;hal_uart.c, 542 :: 		hal_uart_t *hal_obj = ( hal_uart_t* )obj;
0x0C6E	0x9001    STR	R0, [SP, #4]
;hal_uart.c, 548 :: 		if ( event == HAL_UART_IRQ_RX )
0x0C70	0xF89D2008  LDRB	R2, [SP, #8]
0x0C74	0xB9D2    CBNZ	R2, L_hal_uart_irq_handler103
;hal_uart.c, 555 :: 		if ( ring_buf8_is_full( &hal_obj->config.rx_buf ) )
0x0C76	0x9A01    LDR	R2, [SP, #4]
0x0C78	0x1D12    ADDS	R2, R2, #4
0x0C7A	0x3220    ADDS	R2, #32
0x0C7C	0x4610    MOV	R0, R2
0x0C7E	0xF7FFFDEB  BL	_ring_buf8_is_full+0
0x0C82	0xB148    CBZ	R0, L_hal_uart_irq_handler104
;hal_uart.c, 558 :: 		hal_ll_uart_irq_disable( &hal_obj->handle, HAL_UART_IRQ_RX );
0x0C84	0x2100    MOVS	R1, #0
0x0C86	0x9801    LDR	R0, [SP, #4]
0x0C88	0xF7FFFDF4  BL	_hal_ll_uart_irq_disable+0
;hal_uart.c, 559 :: 		hal_obj->is_rx_irq_enabled = false;
0x0C8C	0x9A01    LDR	R2, [SP, #4]
0x0C8E	0xF202034D  ADDW	R3, R2, #77
0x0C92	0x2200    MOVS	R2, #0
0x0C94	0x701A    STRB	R2, [R3, #0]
;hal_uart.c, 560 :: 		return;
0x0C96	0xE02C    B	L_end_hal_uart_irq_handler
;hal_uart.c, 561 :: 		}
L_hal_uart_irq_handler104:
;hal_uart.c, 563 :: 		rd_data = hal_ll_uart_read( &hal_obj->handle );
0x0C98	0x9801    LDR	R0, [SP, #4]
0x0C9A	0xF7FFFD6D  BL	_hal_ll_uart_read+0
;hal_uart.c, 573 :: 		ring_buf8_push( &hal_obj->config.rx_buf, rd_data );
0x0C9E	0x9A01    LDR	R2, [SP, #4]
0x0CA0	0x1D12    ADDS	R2, R2, #4
0x0CA2	0x3220    ADDS	R2, #32
0x0CA4	0xB2C1    UXTB	R1, R0
0x0CA6	0x4610    MOV	R0, R2
0x0CA8	0xF7FFFF3E  BL	_ring_buf8_push+0
;hal_uart.c, 575 :: 		}
L_hal_uart_irq_handler103:
;hal_uart.c, 578 :: 		if ( event == HAL_UART_IRQ_TX )
0x0CAC	0xF89D2008  LDRB	R2, [SP, #8]
0x0CB0	0x2A01    CMP	R2, #1
0x0CB2	0xD11E    BNE	L_hal_uart_irq_handler105
;hal_uart.c, 589 :: 		wr_data = ring_buf8_pop( &hal_obj->config.tx_buf );
0x0CB4	0x9A01    LDR	R2, [SP, #4]
0x0CB6	0x1D12    ADDS	R2, R2, #4
0x0CB8	0x320C    ADDS	R2, #12
0x0CBA	0x4610    MOV	R0, R2
0x0CBC	0xF7FFFE88  BL	_ring_buf8_pop+0
;hal_uart.c, 592 :: 		hal_ll_uart_write( &hal_obj->handle, wr_data );
0x0CC0	0xB2C1    UXTB	R1, R0
0x0CC2	0x9801    LDR	R0, [SP, #4]
0x0CC4	0xF7FFFD46  BL	_hal_ll_uart_write+0
;hal_uart.c, 597 :: 		if ( hal_obj->is_tx_irq_enabled && ring_buf8_is_empty( &hal_obj->config.tx_buf ) )
0x0CC8	0x9A01    LDR	R2, [SP, #4]
0x0CCA	0x324C    ADDS	R2, #76
0x0CCC	0x7812    LDRB	R2, [R2, #0]
0x0CCE	0xB182    CBZ	R2, L__hal_uart_irq_handler156
0x0CD0	0x9A01    LDR	R2, [SP, #4]
0x0CD2	0x1D12    ADDS	R2, R2, #4
0x0CD4	0x320C    ADDS	R2, #12
0x0CD6	0x4610    MOV	R0, R2
0x0CD8	0xF7FFFDB2  BL	_ring_buf8_is_empty+0
0x0CDC	0xB148    CBZ	R0, L__hal_uart_irq_handler155
L__hal_uart_irq_handler154:
;hal_uart.c, 600 :: 		hal_ll_uart_irq_disable( &hal_obj->handle, HAL_UART_IRQ_TX );
0x0CDE	0x2101    MOVS	R1, #1
0x0CE0	0x9801    LDR	R0, [SP, #4]
0x0CE2	0xF7FFFDC7  BL	_hal_ll_uart_irq_disable+0
;hal_uart.c, 601 :: 		hal_obj->is_tx_irq_enabled = false;
0x0CE6	0x9A01    LDR	R2, [SP, #4]
0x0CE8	0xF202034C  ADDW	R3, R2, #76
0x0CEC	0x2200    MOVS	R2, #0
0x0CEE	0x701A    STRB	R2, [R3, #0]
;hal_uart.c, 602 :: 		return;
0x0CF0	0xE7FF    B	L_end_hal_uart_irq_handler
;hal_uart.c, 603 :: 		}
;hal_uart.c, 597 :: 		if ( hal_obj->is_tx_irq_enabled && ring_buf8_is_empty( &hal_obj->config.tx_buf ) )
L__hal_uart_irq_handler156:
L__hal_uart_irq_handler155:
;hal_uart.c, 604 :: 		}
L_hal_uart_irq_handler105:
;hal_uart.c, 605 :: 		}
L_end_hal_uart_irq_handler:
0x0CF2	0xF8DDE000  LDR	LR, [SP, #0]
0x0CF6	0xB003    ADD	SP, SP, #12
0x0CF8	0x4770    BX	LR
; end of _hal_uart_irq_handler
_ring_buf8_is_full:
;ring.c, 87 :: 		bool ring_buf8_is_full( ring_buf8_t *ring )
0x0858	0xB081    SUB	SP, SP, #4
;ring.c, 89 :: 		return ring->size == ring->capacity;
0x085A	0xF2000108  ADDW	R1, R0, #8
0x085E	0x680A    LDR	R2, [R1, #0]
0x0860	0x1D01    ADDS	R1, R0, #4
0x0862	0x6809    LDR	R1, [R1, #0]
0x0864	0x428A    CMP	R2, R1
0x0866	0xF2400100  MOVW	R1, #0
0x086A	0xD100    BNE	L__ring_buf8_is_full9
0x086C	0x2101    MOVS	R1, #1
L__ring_buf8_is_full9:
0x086E	0xB2C8    UXTB	R0, R1
;ring.c, 90 :: 		}
L_end_ring_buf8_is_full:
0x0870	0xB001    ADD	SP, SP, #4
0x0872	0x4770    BX	LR
; end of _ring_buf8_is_full
_hal_ll_uart_irq_disable:
;hal_ll_uart.c, 750 :: 		void hal_ll_uart_irq_disable( handle_t *handle, hal_ll_uart_irq_t irq )
0x0874	0xB082    SUB	SP, SP, #8
0x0876	0xF8CDE000  STR	LR, [SP, #0]
0x087A	0xB2CD    UXTB	R5, R1
;hal_ll_uart.c, 752 :: 		low_level_handle = hal_ll_uart_get_handle;
0x087C	0x6802    LDR	R2, [R0, #0]
0x087E	0x6813    LDR	R3, [R2, #0]
0x0880	0x4A2B    LDR	R2, [PC, #172]
0x0882	0x6013    STR	R3, [R2, #0]
;hal_ll_uart.c, 753 :: 		hal_ll_uart_hw_specifics_map_local = hal_ll_get_specifics(hal_ll_uart_get_module_state_address);
0x0884	0x6800    LDR	R0, [R0, #0]
0x0886	0xF7FFFF0B  BL	hal_ll_uart_hal_ll_get_specifics+0
0x088A	0x4A2A    LDR	R2, [PC, #168]
0x088C	0x6010    STR	R0, [R2, #0]
;hal_ll_uart.c, 755 :: 		hal_ll_uart_base_handle_t *hal_ll_hw_reg = ( hal_ll_uart_base_handle_t *)hal_ll_uart_hw_specifics_map_local->base;
0x088E	0x6802    LDR	R2, [R0, #0]
0x0890	0x4610    MOV	R0, R2
;hal_ll_uart.c, 757 :: 		switch ( irq ) {
0x0892	0xE012    B	L_hal_ll_uart_irq_disable28
;hal_ll_uart.c, 758 :: 		case HAL_LL_UART_IRQ_RX:
L_hal_ll_uart_irq_disable30:
;hal_ll_uart.c, 759 :: 		__HAL_LL_UART_DISABLE_IT( hal_ll_hw_reg, HAL_LL_UART_IT_RXNE );
0x0894	0xF200040C  ADDW	R4, R0, #12
0x0898	0x6823    LDR	R3, [R4, #0]
0x089A	0xF06F0220  MVN	R2, #32
0x089E	0xEA030202  AND	R2, R3, R2, LSL #0
0x08A2	0x6022    STR	R2, [R4, #0]
;hal_ll_uart.c, 760 :: 		break;
0x08A4	0xE00E    B	L_hal_ll_uart_irq_disable29
;hal_ll_uart.c, 762 :: 		case HAL_LL_UART_IRQ_TX:
L_hal_ll_uart_irq_disable31:
;hal_ll_uart.c, 763 :: 		__HAL_LL_UART_DISABLE_IT( hal_ll_hw_reg, HAL_LL_UART_IT_TXE );
0x08A6	0xF200040C  ADDW	R4, R0, #12
0x08AA	0x6823    LDR	R3, [R4, #0]
0x08AC	0xF06F0280  MVN	R2, #128
0x08B0	0xEA030202  AND	R2, R3, R2, LSL #0
0x08B4	0x6022    STR	R2, [R4, #0]
;hal_ll_uart.c, 764 :: 		break;
0x08B6	0xE005    B	L_hal_ll_uart_irq_disable29
;hal_ll_uart.c, 766 :: 		default:
L_hal_ll_uart_irq_disable32:
;hal_ll_uart.c, 767 :: 		break;
0x08B8	0xE004    B	L_hal_ll_uart_irq_disable29
;hal_ll_uart.c, 768 :: 		}
L_hal_ll_uart_irq_disable28:
0x08BA	0x2D00    CMP	R5, #0
0x08BC	0xD0EA    BEQ	L_hal_ll_uart_irq_disable30
0x08BE	0x2D01    CMP	R5, #1
0x08C0	0xD0F1    BEQ	L_hal_ll_uart_irq_disable31
0x08C2	0xE7F9    B	L_hal_ll_uart_irq_disable32
L_hal_ll_uart_irq_disable29:
;hal_ll_uart.c, 771 :: 		if ( ( !check_reg_bit( &hal_ll_hw_reg->cr1, HAL_LL_UART_SR_RXNE ) ) &&
0x08C4	0xF200020C  ADDW	R2, R0, #12
0x08C8	0x6812    LDR	R2, [R2, #0]
0x08CA	0xF0020220  AND	R2, R2, #32
;hal_ll_uart.c, 772 :: 		( !check_reg_bit( &hal_ll_hw_reg->cr1, HAL_LL_UART_SR_TXE ) ) )
0x08CE	0x2A00    CMP	R2, #0
0x08D0	0xD129    BNE	L__hal_ll_uart_irq_disable173
0x08D2	0xF200020C  ADDW	R2, R0, #12
0x08D6	0x6812    LDR	R2, [R2, #0]
0x08D8	0xF0020280  AND	R2, R2, #128
0x08DC	0xBB1A    CBNZ	R2, L__hal_ll_uart_irq_disable172
L__hal_ll_uart_irq_disable171:
;hal_ll_uart.c, 774 :: 		switch ( hal_ll_uart_hw_specifics_map_local->module_index )
0x08DE	0x4A15    LDR	R2, [PC, #84]
0x08E0	0x6812    LDR	R2, [R2, #0]
0x08E2	0x1D12    ADDS	R2, R2, #4
0x08E4	0x9201    STR	R2, [SP, #4]
0x08E6	0xE010    B	L_hal_ll_uart_irq_disable36
;hal_ll_uart.c, 777 :: 		case hal_ll_uart_module_num(UART_MODULE_1):
L_hal_ll_uart_irq_disable38:
;hal_ll_uart.c, 778 :: 		hal_ll_core_disable_irq( UART1_NVIC );
0x08E8	0x2035    MOVS	R0, #53
0x08EA	0xF7FFFE9B  BL	_hal_ll_core_disable_irq+0
;hal_ll_uart.c, 779 :: 		break;
0x08EE	0xE01A    B	L_hal_ll_uart_irq_disable37
;hal_ll_uart.c, 782 :: 		case hal_ll_uart_module_num(UART_MODULE_2):
L_hal_ll_uart_irq_disable39:
;hal_ll_uart.c, 783 :: 		hal_ll_core_disable_irq( UART2_NVIC );
0x08F0	0x2036    MOVS	R0, #54
0x08F2	0xF7FFFE97  BL	_hal_ll_core_disable_irq+0
;hal_ll_uart.c, 784 :: 		break;
0x08F6	0xE016    B	L_hal_ll_uart_irq_disable37
;hal_ll_uart.c, 787 :: 		case hal_ll_uart_module_num(UART_MODULE_3):
L_hal_ll_uart_irq_disable40:
;hal_ll_uart.c, 788 :: 		hal_ll_core_disable_irq( UART3_NVIC );
0x08F8	0x2037    MOVS	R0, #55
0x08FA	0xF7FFFE93  BL	_hal_ll_core_disable_irq+0
;hal_ll_uart.c, 789 :: 		break;
0x08FE	0xE012    B	L_hal_ll_uart_irq_disable37
;hal_ll_uart.c, 792 :: 		case hal_ll_uart_module_num(UART_MODULE_4):
L_hal_ll_uart_irq_disable41:
;hal_ll_uart.c, 793 :: 		hal_ll_core_disable_irq( UART4_NVIC );
0x0900	0x2044    MOVS	R0, #68
0x0902	0xF7FFFE8F  BL	_hal_ll_core_disable_irq+0
;hal_ll_uart.c, 794 :: 		break;
0x0906	0xE00E    B	L_hal_ll_uart_irq_disable37
;hal_ll_uart.c, 827 :: 		default:
L_hal_ll_uart_irq_disable42:
;hal_ll_uart.c, 828 :: 		break;
0x0908	0xE00D    B	L_hal_ll_uart_irq_disable37
;hal_ll_uart.c, 829 :: 		}
L_hal_ll_uart_irq_disable36:
0x090A	0x9B01    LDR	R3, [SP, #4]
0x090C	0x881A    LDRH	R2, [R3, #0]
0x090E	0x2A00    CMP	R2, #0
0x0910	0xD0EA    BEQ	L_hal_ll_uart_irq_disable38
0x0912	0x881A    LDRH	R2, [R3, #0]
0x0914	0x2A01    CMP	R2, #1
0x0916	0xD0EB    BEQ	L_hal_ll_uart_irq_disable39
0x0918	0x881A    LDRH	R2, [R3, #0]
0x091A	0x2A02    CMP	R2, #2
0x091C	0xD0EC    BEQ	L_hal_ll_uart_irq_disable40
0x091E	0x881A    LDRH	R2, [R3, #0]
0x0920	0x2A03    CMP	R2, #3
0x0922	0xD0ED    BEQ	L_hal_ll_uart_irq_disable41
0x0924	0xE7F0    B	L_hal_ll_uart_irq_disable42
L_hal_ll_uart_irq_disable37:
;hal_ll_uart.c, 830 :: 		}
;hal_ll_uart.c, 772 :: 		( !check_reg_bit( &hal_ll_hw_reg->cr1, HAL_LL_UART_SR_TXE ) ) )
L__hal_ll_uart_irq_disable173:
L__hal_ll_uart_irq_disable172:
;hal_ll_uart.c, 831 :: 		}
L_end_hal_ll_uart_irq_disable:
0x0926	0xF8DDE000  LDR	LR, [SP, #0]
0x092A	0xB002    ADD	SP, SP, #8
0x092C	0x4770    BX	LR
0x092E	0xBF00    NOP
0x0930	0x05A02000  	hal_ll_uart_low_level_handle+0
0x0934	0x059C2000  	hal_ll_uart_hal_ll_uart_hw_specifics_map_local+0
; end of _hal_ll_uart_irq_disable
hal_ll_uart_hal_ll_get_specifics:
;hal_ll_uart.c, 1098 :: 		static hal_ll_uart_hw_specifics_map_t *hal_ll_get_specifics( handle_t handle ) {
0x06A0	0xB081    SUB	SP, SP, #4
0x06A2	0x4601    MOV	R1, R0
;hal_ll_uart.c, 1099 :: 		uint8_t hal_ll_module_count = sizeof(hal_ll_module_state) / (sizeof(hal_ll_uart_handle_register_t));
0x06A4	0x2005    MOVS	R0, #5
0x06A6	0xB2C3    UXTB	R3, R0
0x06A8	0x4608    MOV	R0, R1
;hal_ll_uart.c, 1102 :: 		while( hal_ll_module_count-- ) {
L_hal_ll_uart_hal_ll_get_specifics82:
0x06AA	0xB2DA    UXTB	R2, R3
0x06AC	0x1E59    SUBS	R1, R3, #1
0x06AE	0xB2CC    UXTB	R4, R1
0x06B0	0xB19A    CBZ	R2, L_hal_ll_uart_hal_ll_get_specifics83
;hal_ll_uart.c, 1103 :: 		if (hal_ll_uart_get_base_from_hal_handle == hal_ll_uart_hw_specifics_map[hal_ll_module_count].base) {
0x06B2	0x6801    LDR	R1, [R0, #0]
0x06B4	0x6809    LDR	R1, [R1, #0]
0x06B6	0x680B    LDR	R3, [R1, #0]
0x06B8	0x2124    MOVS	R1, #36
0x06BA	0xFB01F204  MUL	R2, R1, R4
0x06BE	0x490B    LDR	R1, [PC, #44]
0x06C0	0x1889    ADDS	R1, R1, R2
0x06C2	0x6809    LDR	R1, [R1, #0]
0x06C4	0x428B    CMP	R3, R1
0x06C6	0xD106    BNE	L_hal_ll_uart_hal_ll_get_specifics84
;hal_ll_uart.c, 1104 :: 		return &hal_ll_uart_hw_specifics_map[hal_ll_module_count];
0x06C8	0x2124    MOVS	R1, #36
0x06CA	0xFB01F204  MUL	R2, R1, R4
0x06CE	0x4907    LDR	R1, [PC, #28]
0x06D0	0x1889    ADDS	R1, R1, R2
0x06D2	0x4608    MOV	R0, R1
0x06D4	0xE008    B	L_end_hal_ll_get_specifics
;hal_ll_uart.c, 1105 :: 		}
L_hal_ll_uart_hal_ll_get_specifics84:
;hal_ll_uart.c, 1106 :: 		}
0x06D6	0xB2E3    UXTB	R3, R4
0x06D8	0xE7E7    B	L_hal_ll_uart_hal_ll_get_specifics82
L_hal_ll_uart_hal_ll_get_specifics83:
;hal_ll_uart.c, 1108 :: 		return &hal_ll_uart_hw_specifics_map[hal_ll_module_error];
0x06DA	0x4905    LDR	R1, [PC, #20]
0x06DC	0x780A    LDRB	R2, [R1, #0]
0x06DE	0x2124    MOVS	R1, #36
0x06E0	0x434A    MULS	R2, R1, R2
0x06E2	0x4902    LDR	R1, [PC, #8]
0x06E4	0x1889    ADDS	R1, R1, R2
0x06E6	0x4608    MOV	R0, R1
;hal_ll_uart.c, 1109 :: 		}
L_end_hal_ll_get_specifics:
0x06E8	0xB001    ADD	SP, SP, #4
0x06EA	0x4770    BX	LR
0x06EC	0x00402000  	hal_ll_uart_hal_ll_uart_hw_specifics_map+0
0x06F0	0x00012000  	hal_ll_uart_hal_ll_get_specifics_hal_ll_module_error_L0+0
; end of hal_ll_uart_hal_ll_get_specifics
_hal_ll_core_disable_irq:
;hal_ll_core.c, 68 :: 		void hal_ll_core_disable_irq( uint8_t IRQn )
0x0624	0xB081    SUB	SP, SP, #4
0x0626	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_core.c, 70 :: 		hal_ll_core_port_nvic_disable_irq( IRQn );
0x062A	0xF7FFFF83  BL	_hal_ll_core_port_nvic_disable_irq+0
;hal_ll_core.c, 71 :: 		}
L_end_hal_ll_core_disable_irq:
0x062E	0xF8DDE000  LDR	LR, [SP, #0]
0x0632	0xB001    ADD	SP, SP, #4
0x0634	0x4770    BX	LR
; end of _hal_ll_core_disable_irq
_hal_ll_core_port_nvic_disable_irq:
;hal_ll_core_port.c, 80 :: 		void hal_ll_core_port_nvic_disable_irq( uint8_t IRQn )
0x0534	0xB081    SUB	SP, SP, #4
;hal_ll_core_port.c, 82 :: 		switch ( IRQn )
0x0536	0xE020    B	L_hal_ll_core_port_nvic_disable_irq12
;hal_ll_core_port.c, 84 :: 		case HAL_LL_CORE_IVT_INT_MEM_MANAGE:
L_hal_ll_core_port_nvic_disable_irq14:
;hal_ll_core_port.c, 85 :: 		clear_reg_bit( HAL_LL_CORE_SCB_SHCRS, HAL_LL_CORE_IVT_MEMFAULTENA_BIT );
0x0538	0x4B2E    LDR	R3, [PC, #184]
0x053A	0x681A    LDR	R2, [R3, #0]
0x053C	0xF46F3180  MVN	R1, #65536
0x0540	0xEA020101  AND	R1, R2, R1, LSL #0
0x0544	0x6019    STR	R1, [R3, #0]
;hal_ll_core_port.c, 86 :: 		break;
0x0546	0xE021    B	L_hal_ll_core_port_nvic_disable_irq13
;hal_ll_core_port.c, 87 :: 		case HAL_LL_CORE_IVT_INT_BUS_FAULT:
L_hal_ll_core_port_nvic_disable_irq15:
;hal_ll_core_port.c, 88 :: 		clear_reg_bit( HAL_LL_CORE_SCB_SHCRS, HAL_LL_CORE_IVT_BUSFAULTENA_BIT );
0x0548	0x4B2B    LDR	R3, [PC, #172]
0x054A	0x681A    LDR	R2, [R3, #0]
0x054C	0xF46F3100  MVN	R1, #131072
0x0550	0xEA020101  AND	R1, R2, R1, LSL #0
0x0554	0x6019    STR	R1, [R3, #0]
;hal_ll_core_port.c, 89 :: 		break;
0x0556	0xE019    B	L_hal_ll_core_port_nvic_disable_irq13
;hal_ll_core_port.c, 90 :: 		case HAL_LL_CORE_IVT_INT_USAGE_FAULT:
L_hal_ll_core_port_nvic_disable_irq16:
;hal_ll_core_port.c, 91 :: 		clear_reg_bit( HAL_LL_CORE_SCB_SHCRS, HAL_LL_CORE_IVT_USGFAULTENA_BIT );
0x0558	0x4B28    LDR	R3, [PC, #160]
0x055A	0x681A    LDR	R2, [R3, #0]
0x055C	0xF46F2180  MVN	R1, #262144
0x0560	0xEA020101  AND	R1, R2, R1, LSL #0
0x0564	0x6019    STR	R1, [R3, #0]
;hal_ll_core_port.c, 92 :: 		break;
0x0566	0xE011    B	L_hal_ll_core_port_nvic_disable_irq13
;hal_ll_core_port.c, 93 :: 		case HAL_LL_CORE_IVT_INT_SYS_TICK:
L_hal_ll_core_port_nvic_disable_irq17:
;hal_ll_core_port.c, 94 :: 		clear_reg_bit( HAL_LL_CORE_STK_CTRL, HAL_LL_CORE_IVT_TICKINT_BIT );
0x0568	0x4B25    LDR	R3, [PC, #148]
0x056A	0x681A    LDR	R2, [R3, #0]
0x056C	0xF06F0102  MVN	R1, #2
0x0570	0xEA020101  AND	R1, R2, R1, LSL #0
0x0574	0x6019    STR	R1, [R3, #0]
;hal_ll_core_port.c, 95 :: 		break;
0x0576	0xE009    B	L_hal_ll_core_port_nvic_disable_irq13
;hal_ll_core_port.c, 97 :: 		default: // If none of the above, exit switch
L_hal_ll_core_port_nvic_disable_irq18:
;hal_ll_core_port.c, 98 :: 		break;
0x0578	0xE008    B	L_hal_ll_core_port_nvic_disable_irq13
;hal_ll_core_port.c, 99 :: 		}
L_hal_ll_core_port_nvic_disable_irq12:
0x057A	0x2804    CMP	R0, #4
0x057C	0xD0DC    BEQ	L_hal_ll_core_port_nvic_disable_irq14
0x057E	0x2805    CMP	R0, #5
0x0580	0xD0E2    BEQ	L_hal_ll_core_port_nvic_disable_irq15
0x0582	0x2806    CMP	R0, #6
0x0584	0xD0E8    BEQ	L_hal_ll_core_port_nvic_disable_irq16
0x0586	0x280F    CMP	R0, #15
0x0588	0xD0EE    BEQ	L_hal_ll_core_port_nvic_disable_irq17
0x058A	0xE7F5    B	L_hal_ll_core_port_nvic_disable_irq18
L_hal_ll_core_port_nvic_disable_irq13:
;hal_ll_core_port.c, 102 :: 		if ( IRQn >= 80 )
0x058C	0x2850    CMP	R0, #80
0x058E	0xD30E    BCC	L_hal_ll_core_port_nvic_disable_irq19
;hal_ll_core_port.c, 104 :: 		set_reg_bit( HAL_LL_CORE_NVIC_ICER_2, ( ( hal_ll_core_irq( IRQn ) ) & HAL_LL_CORE_IRQ_MASK ) );
0x0590	0xF2A00110  SUBW	R1, R0, #16
0x0594	0xB209    SXTH	R1, R1
0x0596	0xF001021F  AND	R2, R1, #31
0x059A	0xB212    SXTH	R2, R2
0x059C	0xF04F0101  MOV	R1, #1
0x05A0	0xFA01F302  LSL	R3, R1, R2
0x05A4	0x4A17    LDR	R2, [PC, #92]
0x05A6	0x6811    LDR	R1, [R2, #0]
0x05A8	0x4319    ORRS	R1, R3
0x05AA	0x6011    STR	R1, [R2, #0]
;hal_ll_core_port.c, 105 :: 		} else if ( IRQn >= 48 ) {
0x05AC	0xE020    B	L_hal_ll_core_port_nvic_disable_irq20
L_hal_ll_core_port_nvic_disable_irq19:
0x05AE	0x2830    CMP	R0, #48
0x05B0	0xD30E    BCC	L_hal_ll_core_port_nvic_disable_irq21
;hal_ll_core_port.c, 106 :: 		set_reg_bit( HAL_LL_CORE_NVIC_ICER_1, ( ( hal_ll_core_irq( IRQn ) ) & HAL_LL_CORE_IRQ_MASK ) );
0x05B2	0xF2A00110  SUBW	R1, R0, #16
0x05B6	0xB209    SXTH	R1, R1
0x05B8	0xF001021F  AND	R2, R1, #31
0x05BC	0xB212    SXTH	R2, R2
0x05BE	0xF04F0101  MOV	R1, #1
0x05C2	0xFA01F302  LSL	R3, R1, R2
0x05C6	0x4A10    LDR	R2, [PC, #64]
0x05C8	0x6811    LDR	R1, [R2, #0]
0x05CA	0x4319    ORRS	R1, R3
0x05CC	0x6011    STR	R1, [R2, #0]
;hal_ll_core_port.c, 107 :: 		} else if ( IRQn >= 16 ) {
0x05CE	0xE00F    B	L_hal_ll_core_port_nvic_disable_irq22
L_hal_ll_core_port_nvic_disable_irq21:
0x05D0	0x2810    CMP	R0, #16
0x05D2	0xD30D    BCC	L_hal_ll_core_port_nvic_disable_irq23
;hal_ll_core_port.c, 108 :: 		set_reg_bit( HAL_LL_CORE_NVIC_ICER_0, ( ( hal_ll_core_irq( IRQn ) ) & HAL_LL_CORE_IRQ_MASK ) );
0x05D4	0xF2A00110  SUBW	R1, R0, #16
0x05D8	0xB209    SXTH	R1, R1
0x05DA	0xF001021F  AND	R2, R1, #31
0x05DE	0xB212    SXTH	R2, R2
0x05E0	0xF04F0101  MOV	R1, #1
0x05E4	0xFA01F302  LSL	R3, R1, R2
0x05E8	0x4A08    LDR	R2, [PC, #32]
0x05EA	0x6811    LDR	R1, [R2, #0]
0x05EC	0x4319    ORRS	R1, R3
0x05EE	0x6011    STR	R1, [R2, #0]
;hal_ll_core_port.c, 109 :: 		}
L_hal_ll_core_port_nvic_disable_irq23:
L_hal_ll_core_port_nvic_disable_irq22:
L_hal_ll_core_port_nvic_disable_irq20:
;hal_ll_core_port.c, 110 :: 		}
L_end_hal_ll_core_port_nvic_disable_irq:
0x05F0	0xB001    ADD	SP, SP, #4
0x05F2	0x4770    BX	LR
0x05F4	0xED24E000  	3758157092
0x05F8	0xED24E000  	3758157092
0x05FC	0xED24E000  	3758157092
0x0600	0xE010E000  	3758153744
0x0604	0xE188E000  	3758154120
0x0608	0xE184E000  	3758154116
0x060C	0xE180E000  	3758154112
; end of _hal_ll_core_port_nvic_disable_irq
_hal_ll_uart_read:
;hal_ll_uart.c, 851 :: 		uint8_t hal_ll_uart_read( handle_t *handle ) {
0x0778	0xB081    SUB	SP, SP, #4
0x077A	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_uart.c, 852 :: 		hal_ll_uart_hw_specifics_map_local = hal_ll_get_specifics(hal_ll_uart_get_module_state_address);
0x077E	0x6800    LDR	R0, [R0, #0]
0x0780	0xF7FFFF8E  BL	hal_ll_uart_hal_ll_get_specifics+0
0x0784	0x4904    LDR	R1, [PC, #16]
0x0786	0x6008    STR	R0, [R1, #0]
;hal_ll_uart.c, 853 :: 		hal_ll_uart_base_handle_t *hal_ll_hw_reg = ( hal_ll_uart_base_handle_t *)hal_ll_uart_hw_specifics_map_local->base;
0x0788	0x6801    LDR	R1, [R0, #0]
;hal_ll_uart.c, 855 :: 		return ( hal_ll_hw_reg->dr );
0x078A	0x1D09    ADDS	R1, R1, #4
0x078C	0x6809    LDR	R1, [R1, #0]
0x078E	0xB2C8    UXTB	R0, R1
;hal_ll_uart.c, 856 :: 		}
L_end_hal_ll_uart_read:
0x0790	0xF8DDE000  LDR	LR, [SP, #0]
0x0794	0xB001    ADD	SP, SP, #4
0x0796	0x4770    BX	LR
0x0798	0x059C2000  	hal_ll_uart_hal_ll_uart_hw_specifics_map_local+0
; end of _hal_ll_uart_read
_ring_buf8_push:
;ring.c, 57 :: 		bool ring_buf8_push( ring_buf8_t *ring, uint8_t data_ )
0x0B28	0xB081    SUB	SP, SP, #4
;ring.c, 59 :: 		if ( ring->size == ring->capacity ) {
0x0B2A	0xF2000208  ADDW	R2, R0, #8
0x0B2E	0x6813    LDR	R3, [R2, #0]
0x0B30	0x1D02    ADDS	R2, R0, #4
0x0B32	0x6812    LDR	R2, [R2, #0]
0x0B34	0x4293    CMP	R3, R2
0x0B36	0xD101    BNE	L_ring_buf8_push0
;ring.c, 60 :: 		return false;
0x0B38	0x2000    MOVS	R0, #0
0x0B3A	0xE016    B	L_end_ring_buf8_push
;ring.c, 61 :: 		}
L_ring_buf8_push0:
;ring.c, 63 :: 		ring->buffer[ ring->head ] = data_;
0x0B3C	0xF200020C  ADDW	R2, R0, #12
0x0B40	0x6813    LDR	R3, [R2, #0]
0x0B42	0x6802    LDR	R2, [R0, #0]
0x0B44	0x18D2    ADDS	R2, R2, R3
0x0B46	0x7011    STRB	R1, [R2, #0]
;ring.c, 64 :: 		ring->head = ( ring->head + 1 ) % ring->capacity;
0x0B48	0xF200050C  ADDW	R5, R0, #12
0x0B4C	0x682A    LDR	R2, [R5, #0]
0x0B4E	0x1C54    ADDS	R4, R2, #1
0x0B50	0x1D02    ADDS	R2, R0, #4
0x0B52	0x6813    LDR	R3, [R2, #0]
0x0B54	0xFBB4F2F3  UDIV	R2, R4, R3
0x0B58	0xFB034212  MLS	R2, R3, R2, R4
0x0B5C	0x602A    STR	R2, [R5, #0]
;ring.c, 65 :: 		ring->size++;
0x0B5E	0xF2000308  ADDW	R3, R0, #8
0x0B62	0x681A    LDR	R2, [R3, #0]
0x0B64	0x1C52    ADDS	R2, R2, #1
0x0B66	0x601A    STR	R2, [R3, #0]
;ring.c, 67 :: 		return true;
0x0B68	0x2001    MOVS	R0, #1
;ring.c, 68 :: 		}
L_end_ring_buf8_push:
0x0B6A	0xB001    ADD	SP, SP, #4
0x0B6C	0x4770    BX	LR
; end of _ring_buf8_push
_ring_buf8_pop:
;ring.c, 70 :: 		uint8_t ring_buf8_pop( ring_buf8_t *ring )
0x09D0	0xB082    SUB	SP, SP, #8
;ring.c, 73 :: 		assert( ring->size > 0 );
0x09D2	0xF2000108  ADDW	R1, R0, #8
0x09D6	0x6809    LDR	R1, [R1, #0]
0x09D8	0x2900    CMP	R1, #0
0x09DA	0xD900    BLS	L_ring_buf8_pop1
0x09DC	0xE7FF    B	L_ring_buf8_pop2
L_ring_buf8_pop1:
L_ring_buf8_pop2:
;ring.c, 75 :: 		result = ring->buffer[ ring->tail ];
0x09DE	0xF2000410  ADDW	R4, R0, #16
0x09E2	0x6822    LDR	R2, [R4, #0]
0x09E4	0x6801    LDR	R1, [R0, #0]
0x09E6	0x1889    ADDS	R1, R1, R2
0x09E8	0x7809    LDRB	R1, [R1, #0]
0x09EA	0xB2CD    UXTB	R5, R1
;ring.c, 76 :: 		ring->tail = ( ring->tail + 1 ) % ring->capacity;
0x09EC	0x1C53    ADDS	R3, R2, #1
0x09EE	0x1D01    ADDS	R1, R0, #4
0x09F0	0x680A    LDR	R2, [R1, #0]
0x09F2	0xFBB3F1F2  UDIV	R1, R3, R2
0x09F6	0xFB023111  MLS	R1, R2, R1, R3
0x09FA	0x6021    STR	R1, [R4, #0]
;ring.c, 77 :: 		ring->size--;
0x09FC	0xF2000208  ADDW	R2, R0, #8
0x0A00	0x6811    LDR	R1, [R2, #0]
0x0A02	0x1E49    SUBS	R1, R1, #1
0x0A04	0x6011    STR	R1, [R2, #0]
;ring.c, 79 :: 		return result;
0x0A06	0xB2E8    UXTB	R0, R5
;ring.c, 80 :: 		}
L_end_ring_buf8_pop:
0x0A08	0xB002    ADD	SP, SP, #8
0x0A0A	0x4770    BX	LR
; end of _ring_buf8_pop
_hal_ll_uart_write:
;hal_ll_uart.c, 833 :: 		void hal_ll_uart_write( handle_t *handle, uint8_t wr_data) {
0x0754	0xB081    SUB	SP, SP, #4
0x0756	0xF8CDE000  STR	LR, [SP, #0]
0x075A	0xB2CD    UXTB	R5, R1
;hal_ll_uart.c, 834 :: 		hal_ll_uart_hw_specifics_map_local = hal_ll_get_specifics(hal_ll_uart_get_module_state_address);
0x075C	0x6800    LDR	R0, [R0, #0]
0x075E	0xF7FFFF9F  BL	hal_ll_uart_hal_ll_get_specifics+0
0x0762	0x4A04    LDR	R2, [PC, #16]
0x0764	0x6010    STR	R0, [R2, #0]
;hal_ll_uart.c, 835 :: 		hal_ll_uart_base_handle_t *hal_ll_hw_reg = ( hal_ll_uart_base_handle_t *)hal_ll_uart_hw_specifics_map_local->base;
0x0766	0x6802    LDR	R2, [R0, #0]
;hal_ll_uart.c, 837 :: 		hal_ll_hw_reg->dr = wr_data;
0x0768	0x1D12    ADDS	R2, R2, #4
0x076A	0x6015    STR	R5, [R2, #0]
;hal_ll_uart.c, 838 :: 		}
L_end_hal_ll_uart_write:
0x076C	0xF8DDE000  LDR	LR, [SP, #0]
0x0770	0xB001    ADD	SP, SP, #4
0x0772	0x4770    BX	LR
0x0774	0x059C2000  	hal_ll_uart_hal_ll_uart_hw_specifics_map_local+0
; end of _hal_ll_uart_write
_ring_buf8_is_empty:
;ring.c, 82 :: 		bool ring_buf8_is_empty( ring_buf8_t *ring )
0x0840	0xB081    SUB	SP, SP, #4
;ring.c, 84 :: 		return ring->size == 0;
0x0842	0xF2000108  ADDW	R1, R0, #8
0x0846	0x6809    LDR	R1, [R1, #0]
0x0848	0x2900    CMP	R1, #0
0x084A	0xF2400100  MOVW	R1, #0
0x084E	0xD100    BNE	L__ring_buf8_is_empty7
0x0850	0x2101    MOVS	R1, #1
L__ring_buf8_is_empty7:
0x0852	0xB2C8    UXTB	R0, R1
;ring.c, 85 :: 		}
L_end_ring_buf8_is_empty:
0x0854	0xB001    ADD	SP, SP, #4
0x0856	0x4770    BX	LR
; end of _ring_buf8_is_empty
_UART4_IRQHandler:
;hal_ll_uart.c, 922 :: 		void MARK_AS_IRQ_HANDLER UART4_IRQHandler() MIKROC_IV(UART4_NVIC) {
0x11D4	0xB430    PUSH	(R4, R5)
0x11D6	0xB081    SUB	SP, SP, #4
0x11D8	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_uart.c, 923 :: 		if( hal_ll_uart_get_status_flags( HAL_LL_UART4_BASE_ADDRESS , HAL_LL_UART_STATUS_RXNE_FLAG ) ) {
0x11DC	0x4818    LDR	R0, [PC, #96]
0x11DE	0x6800    LDR	R0, [R0, #0]
0x11E0	0xF0000020  AND	R0, R0, #32
0x11E4	0xB178    CBZ	R0, L_UART4_IRQHandler59
;hal_ll_uart.c, 924 :: 		if( ( __HAL_LL_UART_GET_IT_SOURCE( HAL_LL_UART4_BASE_ADDRESS, HAL_LL_UART_IT_RXNE ) ) != 0 ) {
0x11E6	0x4817    LDR	R0, [PC, #92]
0x11E8	0x6800    LDR	R0, [R0, #0]
0x11EA	0xF0000020  AND	R0, R0, #32
0x11EE	0xB150    CBZ	R0, L_UART4_IRQHandler60
;hal_ll_uart.c, 925 :: 		hal_ll_uart_clear_status_flag( HAL_LL_UART4_BASE_ADDRESS, HAL_LL_UART_STATUS_RXNE_FLAG );
0x11F0	0x4913    LDR	R1, [PC, #76]
0x11F2	0x6808    LDR	R0, [R1, #0]
0x11F4	0xF00030FF  AND	R0, R0, #-1
0x11F8	0x6008    STR	R0, [R1, #0]
;hal_ll_uart.c, 926 :: 		irq_handler( objects[ hal_ll_uart_module_num(UART_MODULE_4) ], HAL_LL_UART_IRQ_RX );
0x11FA	0x4813    LDR	R0, [PC, #76]
0x11FC	0x6800    LDR	R0, [R0, #0]
0x11FE	0x2100    MOVS	R1, #0
0x1200	0x4C12    LDR	R4, [PC, #72]
0x1202	0x6824    LDR	R4, [R4, #0]
0x1204	0x47A0    BLX	R4
;hal_ll_uart.c, 927 :: 		}
L_UART4_IRQHandler60:
;hal_ll_uart.c, 928 :: 		}
L_UART4_IRQHandler59:
;hal_ll_uart.c, 929 :: 		if( hal_ll_uart_get_status_flags( HAL_LL_UART4_BASE_ADDRESS , HAL_LL_UART_STATUS_TXE_FLAG ) ) {
0x1206	0x480E    LDR	R0, [PC, #56]
0x1208	0x6800    LDR	R0, [R0, #0]
0x120A	0xF0000080  AND	R0, R0, #128
0x120E	0xB188    CBZ	R0, L_UART4_IRQHandler61
;hal_ll_uart.c, 930 :: 		if( ( __HAL_LL_UART_GET_IT_SOURCE( HAL_LL_UART4_BASE_ADDRESS, HAL_LL_UART_IT_TXE ) ) != 0 ) {
0x1210	0x480C    LDR	R0, [PC, #48]
0x1212	0x6800    LDR	R0, [R0, #0]
0x1214	0xF0000080  AND	R0, R0, #128
0x1218	0xB160    CBZ	R0, L_UART4_IRQHandler62
;hal_ll_uart.c, 931 :: 		hal_ll_uart_clear_status_flag( HAL_LL_UART4_BASE_ADDRESS, HAL_LL_UART_STATUS_TXE_FLAG );
0x121A	0x4A09    LDR	R2, [PC, #36]
0x121C	0x6811    LDR	R1, [R2, #0]
0x121E	0xF06F0001  MVN	R0, #1
0x1222	0xEA010000  AND	R0, R1, R0, LSL #0
0x1226	0x6010    STR	R0, [R2, #0]
;hal_ll_uart.c, 932 :: 		irq_handler( objects[ hal_ll_uart_module_num(UART_MODULE_4) ], HAL_LL_UART_IRQ_TX );
0x1228	0x4807    LDR	R0, [PC, #28]
0x122A	0x6800    LDR	R0, [R0, #0]
0x122C	0x2101    MOVS	R1, #1
0x122E	0x4C07    LDR	R4, [PC, #28]
0x1230	0x6824    LDR	R4, [R4, #0]
0x1232	0x47A0    BLX	R4
;hal_ll_uart.c, 933 :: 		}
L_UART4_IRQHandler62:
;hal_ll_uart.c, 934 :: 		}
L_UART4_IRQHandler61:
;hal_ll_uart.c, 935 :: 		}
L_end_UART4_IRQHandler:
0x1234	0xF8DDE000  LDR	LR, [SP, #0]
0x1238	0xB001    ADD	SP, SP, #4
0x123A	0xBC30    POP	(R4, R5)
0x123C	0x4770    BX	LR
0x123E	0xBF00    NOP
0x1240	0x4C004000  	#1073761280
0x1244	0x4C0C4000  	#1073761292
0x1248	0x05942000  	hal_ll_uart_objects+12
0x124C	0x05842000  	hal_ll_uart_irq_handler+0
; end of _UART4_IRQHandler
_UART1_IRQHandler:
;hal_ll_uart.c, 871 :: 		void MARK_AS_IRQ_HANDLER UART1_IRQHandler() MIKROC_IV(UART1_NVIC) {
0x1250	0xB430    PUSH	(R4, R5)
0x1252	0xB081    SUB	SP, SP, #4
0x1254	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_uart.c, 872 :: 		if( hal_ll_uart_get_status_flags( HAL_LL_UART1_BASE_ADDRESS , HAL_LL_UART_STATUS_RXNE_FLAG ) ) {
0x1258	0x4818    LDR	R0, [PC, #96]
0x125A	0x6800    LDR	R0, [R0, #0]
0x125C	0xF0000020  AND	R0, R0, #32
0x1260	0xB178    CBZ	R0, L_UART1_IRQHandler47
;hal_ll_uart.c, 873 :: 		if( ( __HAL_LL_UART_GET_IT_SOURCE( HAL_LL_UART1_BASE_ADDRESS, HAL_LL_UART_IT_RXNE ) ) != 0 ) {
0x1262	0x4817    LDR	R0, [PC, #92]
0x1264	0x6800    LDR	R0, [R0, #0]
0x1266	0xF0000020  AND	R0, R0, #32
0x126A	0xB150    CBZ	R0, L_UART1_IRQHandler48
;hal_ll_uart.c, 874 :: 		hal_ll_uart_clear_status_flag( HAL_LL_UART1_BASE_ADDRESS, HAL_LL_UART_STATUS_RXNE_FLAG );
0x126C	0x4913    LDR	R1, [PC, #76]
0x126E	0x6808    LDR	R0, [R1, #0]
0x1270	0xF00030FF  AND	R0, R0, #-1
0x1274	0x6008    STR	R0, [R1, #0]
;hal_ll_uart.c, 875 :: 		irq_handler( objects[ hal_ll_uart_module_num(UART_MODULE_1) ], HAL_LL_UART_IRQ_RX );
0x1276	0x4813    LDR	R0, [PC, #76]
0x1278	0x6800    LDR	R0, [R0, #0]
0x127A	0x2100    MOVS	R1, #0
0x127C	0x4C12    LDR	R4, [PC, #72]
0x127E	0x6824    LDR	R4, [R4, #0]
0x1280	0x47A0    BLX	R4
;hal_ll_uart.c, 876 :: 		}
L_UART1_IRQHandler48:
;hal_ll_uart.c, 877 :: 		}
L_UART1_IRQHandler47:
;hal_ll_uart.c, 878 :: 		if( hal_ll_uart_get_status_flags( HAL_LL_UART1_BASE_ADDRESS , HAL_LL_UART_STATUS_TXE_FLAG ) ) {
0x1282	0x480E    LDR	R0, [PC, #56]
0x1284	0x6800    LDR	R0, [R0, #0]
0x1286	0xF0000080  AND	R0, R0, #128
0x128A	0xB188    CBZ	R0, L_UART1_IRQHandler49
;hal_ll_uart.c, 879 :: 		if( ( __HAL_LL_UART_GET_IT_SOURCE( HAL_LL_UART1_BASE_ADDRESS, HAL_LL_UART_IT_TXE ) ) != 0 ) {
0x128C	0x480C    LDR	R0, [PC, #48]
0x128E	0x6800    LDR	R0, [R0, #0]
0x1290	0xF0000080  AND	R0, R0, #128
0x1294	0xB160    CBZ	R0, L_UART1_IRQHandler50
;hal_ll_uart.c, 880 :: 		hal_ll_uart_clear_status_flag( HAL_LL_UART1_BASE_ADDRESS, HAL_LL_UART_STATUS_TXE_FLAG );
0x1296	0x4A09    LDR	R2, [PC, #36]
0x1298	0x6811    LDR	R1, [R2, #0]
0x129A	0xF06F0001  MVN	R0, #1
0x129E	0xEA010000  AND	R0, R1, R0, LSL #0
0x12A2	0x6010    STR	R0, [R2, #0]
;hal_ll_uart.c, 881 :: 		irq_handler( objects[ hal_ll_uart_module_num(UART_MODULE_1) ], HAL_LL_UART_IRQ_TX );
0x12A4	0x4807    LDR	R0, [PC, #28]
0x12A6	0x6800    LDR	R0, [R0, #0]
0x12A8	0x2101    MOVS	R1, #1
0x12AA	0x4C07    LDR	R4, [PC, #28]
0x12AC	0x6824    LDR	R4, [R4, #0]
0x12AE	0x47A0    BLX	R4
;hal_ll_uart.c, 882 :: 		}
L_UART1_IRQHandler50:
;hal_ll_uart.c, 883 :: 		}
L_UART1_IRQHandler49:
;hal_ll_uart.c, 884 :: 		}
L_end_UART1_IRQHandler:
0x12B0	0xF8DDE000  LDR	LR, [SP, #0]
0x12B4	0xB001    ADD	SP, SP, #4
0x12B6	0xBC30    POP	(R4, R5)
0x12B8	0x4770    BX	LR
0x12BA	0xBF00    NOP
0x12BC	0x38004001  	#1073821696
0x12C0	0x380C4001  	#1073821708
0x12C4	0x05882000  	hal_ll_uart_objects+0
0x12C8	0x05842000  	hal_ll_uart_irq_handler+0
; end of _UART1_IRQHandler
_UART2_IRQHandler:
;hal_ll_uart.c, 888 :: 		void MARK_AS_IRQ_HANDLER UART2_IRQHandler() MIKROC_IV(UART2_NVIC) {
0x12CC	0xB430    PUSH	(R4, R5)
0x12CE	0xB081    SUB	SP, SP, #4
0x12D0	0xF8CDE000  STR	LR, [SP, #0]
;hal_ll_uart.c, 889 :: 		if( hal_ll_uart_get_status_flags( HAL_LL_UART2_BASE_ADDRESS , HAL_LL_UART_STATUS_RXNE_FLAG ) ) {
0x12D4	0x4818    LDR	R0, [PC, #96]
0x12D6	0x6800    LDR	R0, [R0, #0]
0x12D8	0xF0000020  AND	R0, R0, #32
0x12DC	0xB178    CBZ	R0, L_UART2_IRQHandler51
;hal_ll_uart.c, 890 :: 		if( ( __HAL_LL_UART_GET_IT_SOURCE( HAL_LL_UART2_BASE_ADDRESS, HAL_LL_UART_IT_RXNE ) ) != 0 ) {
0x12DE	0x4817    LDR	R0, [PC, #92]
0x12E0	0x6800    LDR	R0, [R0, #0]
0x12E2	0xF0000020  AND	R0, R0, #32
0x12E6	0xB150    CBZ	R0, L_UART2_IRQHandler52
;hal_ll_uart.c, 891 :: 		hal_ll_uart_clear_status_flag( HAL_LL_UART2_BASE_ADDRESS, HAL_LL_UART_STATUS_RXNE_FLAG );
0x12E8	0x4913    LDR	R1, [PC, #76]
0x12EA	0x6808    LDR	R0, [R1, #0]
0x12EC	0xF00030FF  AND	R0, R0, #-1
0x12F0	0x6008    STR	R0, [R1, #0]
;hal_ll_uart.c, 892 :: 		irq_handler( objects[ hal_ll_uart_module_num(UART_MODULE_2) ], HAL_LL_UART_IRQ_RX );
0x12F2	0x4813    LDR	R0, [PC, #76]
0x12F4	0x6800    LDR	R0, [R0, #0]
0x12F6	0x2100    MOVS	R1, #0
0x12F8	0x4C12    LDR	R4, [PC, #72]
0x12FA	0x6824    LDR	R4, [R4, #0]
0x12FC	0x47A0    BLX	R4
;hal_ll_uart.c, 893 :: 		}
L_UART2_IRQHandler52:
;hal_ll_uart.c, 894 :: 		}
L_UART2_IRQHandler51:
;hal_ll_uart.c, 895 :: 		if( hal_ll_uart_get_status_flags( HAL_LL_UART2_BASE_ADDRESS , HAL_LL_UART_STATUS_TXE_FLAG ) ) {
0x12FE	0x480E    LDR	R0, [PC, #56]
0x1300	0x6800    LDR	R0, [R0, #0]
0x1302	0xF0000080  AND	R0, R0, #128
0x1306	0xB188    CBZ	R0, L_UART2_IRQHandler53
;hal_ll_uart.c, 896 :: 		if( ( __HAL_LL_UART_GET_IT_SOURCE( HAL_LL_UART2_BASE_ADDRESS, HAL_LL_UART_IT_TXE ) ) != 0 ) {
0x1308	0x480C    LDR	R0, [PC, #48]
0x130A	0x6800    LDR	R0, [R0, #0]
0x130C	0xF0000080  AND	R0, R0, #128
0x1310	0xB160    CBZ	R0, L_UART2_IRQHandler54
;hal_ll_uart.c, 897 :: 		hal_ll_uart_clear_status_flag( HAL_LL_UART2_BASE_ADDRESS, HAL_LL_UART_STATUS_TXE_FLAG );
0x1312	0x4A09    LDR	R2, [PC, #36]
0x1314	0x6811    LDR	R1, [R2, #0]
0x1316	0xF06F0001  MVN	R0, #1
0x131A	0xEA010000  AND	R0, R1, R0, LSL #0
0x131E	0x6010    STR	R0, [R2, #0]
;hal_ll_uart.c, 898 :: 		irq_handler( objects[ hal_ll_uart_module_num(UART_MODULE_2) ], HAL_LL_UART_IRQ_TX );
0x1320	0x4807    LDR	R0, [PC, #28]
0x1322	0x6800    LDR	R0, [R0, #0]
0x1324	0x2101    MOVS	R1, #1
0x1326	0x4C07    LDR	R4, [PC, #28]
0x1328	0x6824    LDR	R4, [R4, #0]
0x132A	0x47A0    BLX	R4
;hal_ll_uart.c, 899 :: 		}
L_UART2_IRQHandler54:
;hal_ll_uart.c, 900 :: 		}
L_UART2_IRQHandler53:
;hal_ll_uart.c, 901 :: 		}
L_end_UART2_IRQHandler:
0x132C	0xF8DDE000  LDR	LR, [SP, #0]
0x1330	0xB001    ADD	SP, SP, #4
0x1332	0xBC30    POP	(R4, R5)
0x1334	0x4770    BX	LR
0x1336	0xBF00    NOP
0x1338	0x44004000  	#1073759232
0x133C	0x440C4000  	#1073759244
0x1340	0x058C2000  	hal_ll_uart_objects+4
0x1344	0x05842000  	hal_ll_uart_irq_handler+0
; end of _UART2_IRQHandler
;,0 :: _initBlock_0 [2]
; Containing: ?ICSpreinit_preinit_done [1]
;             ?ICShal_ll_uart_hal_ll_get_specifics_hal_ll_module_error_L0 [1]
0x01CA	0x0500 ;_initBlock_0+0 : ?ICSpreinit_preinit_done at 0x01CA : ?ICShal_ll_uart_hal_ll_get_specifics_hal_ll_module_error_L0 at 0x01CB
; end of _initBlock_0
;hal_ll_uart.c,0 :: ?ICShal_ll_uart_hal_ll_module_state [60]
0x159C	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+0
0x15A0	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+4
0x15A4	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+8
0x15A8	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+12
0x15AC	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+16
0x15B0	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+20
0x15B4	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+24
0x15B8	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+28
0x15BC	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+32
0x15C0	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+36
0x15C4	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+40
0x15C8	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+44
0x15CC	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+48
0x15D0	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+52
0x15D4	0x00000000 ;?ICShal_ll_uart_hal_ll_module_state+56
; end of ?ICShal_ll_uart_hal_ll_module_state
;hal_ll_uart.c,0 :: ?ICShal_ll_uart_hal_ll_uart_hw_specifics_map [216]
0x15D8	0x40013800 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+0
0x15DC	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+4
0x15E0	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+8
0x15E4	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+12
0x15E8	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+16
0x15EC	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+20
0x15F0	0x0001C200 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+24
0x15F4	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+28
0x15F8	0x00010100 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+32
0x15FC	0x40004400 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+36
0x1600	0x00000001 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+40
0x1604	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+44
0x1608	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+48
0x160C	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+52
0x1610	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+56
0x1614	0x0001C200 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+60
0x1618	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+64
0x161C	0x00010100 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+68
0x1620	0x40004800 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+72
0x1624	0x00000002 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+76
0x1628	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+80
0x162C	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+84
0x1630	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+88
0x1634	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+92
0x1638	0x0001C200 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+96
0x163C	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+100
0x1640	0x00010100 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+104
0x1644	0x40004C00 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+108
0x1648	0x00000003 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+112
0x164C	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+116
0x1650	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+120
0x1654	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+124
0x1658	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+128
0x165C	0x0001C200 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+132
0x1660	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+136
0x1664	0x00010100 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+140
0x1668	0x40005000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+144
0x166C	0x00000004 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+148
0x1670	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+152
0x1674	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+156
0x1678	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+160
0x167C	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+164
0x1680	0x0001C200 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+168
0x1684	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+172
0x1688	0x00010100 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+176
0x168C	0xFFFFFFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+180
0x1690	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+184
0x1694	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+188
0x1698	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+192
0x169C	0x0000FFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+196
0x16A0	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+200
0x16A4	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+204
0x16A8	0x00000000 ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+208
0x16AC	0x00FFFFFF ;?ICShal_ll_uart_hal_ll_uart_hw_specifics_map+212
; end of ?ICShal_ll_uart_hal_ll_uart_hw_specifics_map
;hal_ll_gpio_port.c,101 :: hal_ll_gpio_port__hal_ll_gpio_port_base [44]
0x16B0	0x40010800 ;hal_ll_gpio_port__hal_ll_gpio_port_base+0
0x16B4	0x40010C00 ;hal_ll_gpio_port__hal_ll_gpio_port_base+4
0x16B8	0x40011000 ;hal_ll_gpio_port__hal_ll_gpio_port_base+8
0x16BC	0x40011400 ;hal_ll_gpio_port__hal_ll_gpio_port_base+12
0x16C0	0x40011800 ;hal_ll_gpio_port__hal_ll_gpio_port_base+16
0x16C4	0x40011C00 ;hal_ll_gpio_port__hal_ll_gpio_port_base+20
0x16C8	0x40012000 ;hal_ll_gpio_port__hal_ll_gpio_port_base+24
0x16CC	0x00000000 ;hal_ll_gpio_port__hal_ll_gpio_port_base+28
0x16D0	0x00000000 ;hal_ll_gpio_port__hal_ll_gpio_port_base+32
0x16D4	0x00000000 ;hal_ll_gpio_port__hal_ll_gpio_port_base+36
0x16D8	0x00000000 ;hal_ll_gpio_port__hal_ll_gpio_port_base+40
; end of hal_ll_gpio_port__hal_ll_gpio_port_base
;__Lib_System_105_107.c,158 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x16DC	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x16E0	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x16E4	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x16E8	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [108]    hal_ll_gpio_port_hal_ll_gpio_clock_enable
0x01BC      [14]    _hal_ll_gpio_pin_index
0x01CC     [540]    hal_ll_gpio_port_hal_ll_gpio_config
0x03E8      [12]    _hal_ll_gpio_port_index
0x03F4      [22]    _hal_ll_gpio_digital_input
0x040C      [20]    _hal_ll_gpio_port_base
0x0420      [24]    _hal_ll_gpio_digital_output
0x0438      [26]    _hal_ll_gpio_pin_mask
0x0454     [108]    _hal_ll_gpio_configure_pin
0x04C0      [96]    _hal_ll_gpio_configure_port
0x0520      [18]    _hal_gpio_configure_pin
0x0534     [220]    _hal_ll_core_port_nvic_disable_irq
0x0610      [18]    _hal_gpio_configure_port
0x0624      [18]    _hal_ll_core_disable_irq
0x0638     [104]    _Apply_changes
0x06A0      [84]    hal_ll_uart_hal_ll_get_specifics
0x06F4      [58]    _port_init
0x0730      [36]    _digital_out_init
0x0754      [36]    _hal_ll_uart_write
0x0778      [36]    _hal_ll_uart_read
0x079C     [164]    _GLCD_Display_Start_Line
0x0840      [24]    _ring_buf8_is_empty
0x0858      [28]    _ring_buf8_is_full
0x0874     [196]    _hal_ll_uart_irq_disable
0x0938     [152]    _GLCD_Port_Init
0x09D0      [60]    _ring_buf8_pop
0x0A0C     [120]    _GLCD_Side_Init
0x0A84     [164]    _GLCD_Set_Y
0x0B28      [70]    _ring_buf8_push
0x0B70     [164]    _GLCD_Set_Page
0x0C14      [20]    ___CC2DW
0x0C28      [58]    ___FillZeros
0x0C64     [150]    _hal_uart_irq_handler
0x0CFC     [460]    _GLCD_Display
0x0EC8     [160]    _GLCD_Write
0x0F68     [108]    __Lib_System_105_107_SystemClockSetDefault
0x0FD4     [488]    _GLCD_Init
0x11BC      [24]    _preinit
0x11D4     [124]    _UART4_IRQHandler
0x1250     [124]    _UART1_IRQHandler
0x12CC     [124]    _UART2_IRQHandler
0x1348      [20]    __Lib_System_105_107_InitialSetUpFosc
0x135C     [344]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x14B4       [8]    ___GenExcept
0x14BC     [100]    _main
0x1520     [124]    _UART3_IRQHandler
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [1]    preinit_preinit_done
0x20000001       [1]    hal_ll_uart_hal_ll_get_specifics_hal_ll_module_error_L0
0x20000004      [60]    hal_ll_uart_hal_ll_module_state
0x20000040     [216]    hal_ll_uart_hal_ll_uart_hw_specifics_map
0x20000118       [8]    main_did
0x20000120       [8]    main_rwd
0x20000128      [12]    main_data_out
0x20000134       [8]    main_ed
0x2000013C       [8]    main_cs1d
0x20000144       [8]    main_cs2d
0x2000014C    [1030]    main_glcd
0x20000554      [12]    main_data_in
0x20000560       [8]    main_resetd
0x20000568      [12]    main_see_cmd
0x20000574      [12]    main_see
0x20000580       [4]    ___System_CLOCK_IN_KHZ
0x20000584       [4]    hal_ll_uart_irq_handler
0x20000588      [20]    hal_ll_uart_objects
0x2000059C       [4]    hal_ll_uart_hal_ll_uart_hw_specifics_map_local
0x200005A0       [4]    hal_ll_uart_low_level_handle
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x01CA       [1]    ?ICSpreinit_preinit_done
0x01CB       [1]    ?ICShal_ll_uart_hal_ll_get_specifics_hal_ll_module_error_L0
0x159C      [60]    ?ICShal_ll_uart_hal_ll_module_state
0x15D8     [216]    ?ICShal_ll_uart_hal_ll_uart_hw_specifics_map
0x16B0      [44]    hal_ll_gpio_port__hal_ll_gpio_port_base
0x16DC      [16]    __Lib_System_105_107_APBAHBPrescTable
